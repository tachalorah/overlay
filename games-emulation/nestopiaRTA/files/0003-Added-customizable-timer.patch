From 11e8c18bd17c08b8f985c202055b0fd752c0837e Mon Sep 17 00:00:00 2001
From: 108Pi <->
Date: Tue, 29 Jul 2025 18:03:16 -0700
Subject: [PATCH 3/7] Added customizable timer

---
 projects/core.vcxproj                 | 1534 ++++----
 projects/core.vcxproj.filters         | 3538 +++++++++----------
 source/core/NstMachine.cpp            |   10 +-
 source/core/NstMachine.hpp            |    6 +-
 source/core/NstPpu.cpp                | 4708 +++++++++++++------------
 source/core/NstPpu.hpp                |    1 +
 source/core/NstRunTimer.cpp           |  286 ++
 source/core/NstRunTimer.hpp           |   62 +
 source/core/input/NstInpTurboFile.cpp |    1 -
 source/core/ioapi.h                   |   75 +
 source/core/unzip.h                   |  354 ++
 source/core/zconf.h                   |  332 ++
 source/core/zip.h                     |  235 ++
 source/core/zlib.h                    | 1357 +++++++
 14 files changed, 7619 insertions(+), 4880 deletions(-)
 create mode 100644 source/core/NstRunTimer.cpp
 create mode 100644 source/core/NstRunTimer.hpp
 create mode 100644 source/core/ioapi.h
 create mode 100644 source/core/unzip.h
 create mode 100644 source/core/zconf.h
 create mode 100644 source/core/zip.h
 create mode 100644 source/core/zlib.h

diff --git a/projects/core.vcxproj b/projects/core.vcxproj
index c351c63..40589c9 100644
--- a/projects/core.vcxproj
+++ b/projects/core.vcxproj
@@ -1,767 +1,769 @@
-ï»¿<?xml version="1.0" encoding="utf-8"?>
-<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <ItemGroup Label="ProjectConfigurations">
-    <ProjectConfiguration Include="Debug|Win32">
-      <Configuration>Debug</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="Release|Win32">
-      <Configuration>Release</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-  </ItemGroup>
-  <PropertyGroup Label="Globals">
-    <ProjectGuid>{CCC3A09C-0F7A-4E12-8594-11F2C60D71DA}</ProjectGuid>
-    <RootNamespace>Core</RootNamespace>
-    <Keyword>Win32Proj</Keyword>
-  </PropertyGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
-    <ConfigurationType>StaticLibrary</ConfigurationType>
-    <CharacterSet>NotSet</CharacterSet>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
-    <ConfigurationType>StaticLibrary</ConfigurationType>
-    <CharacterSet>NotSet</CharacterSet>
-  </PropertyGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
-  <ImportGroup Label="ExtensionSettings">
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-  </ImportGroup>
-  <PropertyGroup Label="UserMacros" />
-  <PropertyGroup>
-    <_ProjectFileVersion>10.0.30319.1</_ProjectFileVersion>
-    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(SolutionDir)debugout\</OutDir>
-    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">debug\core\</IntDir>
-    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(SolutionDir)releaseout\</OutDir>
-    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">release\core\</IntDir>
-    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
-    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" />
-    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" />
-    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
-    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" />
-    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" />
-  </PropertyGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <ClCompile>
-      <AdditionalOptions>/vmb /J %(AdditionalOptions)</AdditionalOptions>
-      <Optimization>Disabled</Optimization>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <PreprocessorDefinitions>NST_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <StringPooling>true</StringPooling>
-      <MinimalRebuild>true</MinimalRebuild>
-      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
-      <SmallerTypeCheck>true</SmallerTypeCheck>
-      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
-      <StructMemberAlignment>Default</StructMemberAlignment>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <FloatingPointModel>Precise</FloatingPointModel>
-      <FloatingPointExceptions>true</FloatingPointExceptions>
-      <DisableLanguageExtensions>false</DisableLanguageExtensions>
-      <TreatWChar_tAsBuiltInType>true</TreatWChar_tAsBuiltInType>
-      <RuntimeTypeInfo>false</RuntimeTypeInfo>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level4</WarningLevel>
-      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
-      <CallingConvention>FastCall</CallingConvention>
-      <ShowIncludes>false</ShowIncludes>
-      <OmitDefaultLibName>true</OmitDefaultLibName>
-    </ClCompile>
-    <Lib>
-      <UseUnicodeResponseFiles>false</UseUnicodeResponseFiles>
-      <OutputFile>$(SolutionDir)..\lib\emucoredebug.lib</OutputFile>
-      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
-    </Lib>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <ClCompile>
-      <AdditionalOptions>/vmb /J %(AdditionalOptions)</AdditionalOptions>
-      <Optimization>Full</Optimization>
-      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
-      <OmitFramePointers>true</OmitFramePointers>
-      <PreprocessorDefinitions>NDEBUG;_SECURE_SCL=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <StringPooling>true</StringPooling>
-      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
-      <BufferSecurityCheck>false</BufferSecurityCheck>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>
-      <FloatingPointModel>Precise</FloatingPointModel>
-      <DisableLanguageExtensions>true</DisableLanguageExtensions>
-      <TreatWChar_tAsBuiltInType>true</TreatWChar_tAsBuiltInType>
-      <RuntimeTypeInfo>false</RuntimeTypeInfo>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <AssemblerOutput>AssemblyAndSourceCode</AssemblerOutput>
-      <AssemblerListingLocation>$(SolutionDir)Release\Core\Asm\</AssemblerListingLocation>
-      <WarningLevel>Level4</WarningLevel>
-      <DebugInformationFormat>
-      </DebugInformationFormat>
-      <CallingConvention>FastCall</CallingConvention>
-      <OmitDefaultLibName>true</OmitDefaultLibName>
-    </ClCompile>
-    <Lib>
-      <UseUnicodeResponseFiles>false</UseUnicodeResponseFiles>
-      <OutputFile>$(SolutionDir)..\lib\emucore.lib</OutputFile>
-      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
-    </Lib>
-  </ItemDefinitionGroup>
-  <ItemGroup>
-    <ClInclude Include="..\source\core\api\NstApi.hpp" />
-    <ClInclude Include="..\source\core\api\NstApiBarcodeReader.hpp" />
-    <ClInclude Include="..\source\core\api\NstApiCartridge.hpp" />
-    <ClInclude Include="..\source\core\api\NstApiCheats.hpp" />
-    <ClInclude Include="..\source\core\api\NstApiConfig.hpp" />
-    <ClInclude Include="..\source\core\api\NstApiDipSwitches.hpp" />
-    <ClInclude Include="..\source\core\api\NstApiEmulator.hpp" />
-    <ClInclude Include="..\source\core\api\NstApiFds.hpp" />
-    <ClInclude Include="..\source\core\api\NstApiInput.hpp" />
-    <ClInclude Include="..\source\core\api\NstApiMachine.hpp" />
-    <ClInclude Include="..\source\core\api\NstApiMovie.hpp" />
-    <ClInclude Include="..\source\core\api\NstApiNsf.hpp" />
-    <ClInclude Include="..\source\core\api\NstApiRewinder.hpp" />
-    <ClInclude Include="..\source\core\api\NstApiSound.hpp" />
-    <ClInclude Include="..\source\core\api\NstApiTapeRecorder.hpp" />
-    <ClInclude Include="..\source\core\api\NstApiUser.hpp" />
-    <ClInclude Include="..\source\core\api\NstApiVideo.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardAcclaim.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardAcclaimMcAcc.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardAction53.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmc120in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmc60311c.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardInlNsf.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardMagicKidGoogoo.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardUnl158b.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardUnlFam250Schi24.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardUnlRetX7Gbl.hpp" />
-    <ClInclude Include="..\source\core\NstHomebrew.hpp" />
-    <ClInclude Include="..\source\core\NstVideoFilterxBR.hpp" />
-    <ClInclude Include="..\source\core\vssystem\NstVsRbiBaseball.hpp" />
-    <ClInclude Include="..\source\core\vssystem\NstVsSuperXevious.hpp" />
-    <ClInclude Include="..\source\core\vssystem\NstVsSystem.hpp" />
-    <ClInclude Include="..\source\core\vssystem\NstVsTkoBoxing.hpp" />
-    <ClInclude Include="..\source\core\NstVideoFilter2xSaI.hpp" />
-    <ClInclude Include="..\source\core\NstVideoFilterHqX.hpp" />
-    <ClInclude Include="..\source\core\NstVideoFilterNone.hpp" />
-    <ClInclude Include="..\source\core\NstVideoFilterNtsc.hpp" />
-    <ClInclude Include="..\source\core\NstVideoFilterScaleX.hpp" />
-    <ClInclude Include="..\source\nes_ntsc\nes_ntsc.h" />
-    <ClInclude Include="..\source\nes_ntsc\nes_ntsc_config.h" />
-    <ClInclude Include="..\source\nes_ntsc\nes_ntsc_impl.h" />
-    <ClInclude Include="..\source\core\input\NstInpAdapter.hpp" />
-    <ClInclude Include="..\source\core\input\NstInpBandaiHyperShot.hpp" />
-    <ClInclude Include="..\source\core\input\NstInpBarcodeWorld.hpp" />
-    <ClInclude Include="..\source\core\input\NstInpCrazyClimber.hpp" />
-    <ClInclude Include="..\source\core\input\NstInpDevice.hpp" />
-    <ClInclude Include="..\source\core\input\NstInpDoremikkoKeyboard.hpp" />
-    <ClInclude Include="..\source\core\input\NstInpExcitingBoxing.hpp" />
-    <ClInclude Include="..\source\core\input\NstInpFamilyKeyboard.hpp" />
-    <ClInclude Include="..\source\core\input\NstInpFamilyTrainer.hpp" />
-    <ClInclude Include="..\source\core\input\NstInpHoriTrack.hpp" />
-    <ClInclude Include="..\source\core\input\NstInpKonamiHyperShot.hpp" />
-    <ClInclude Include="..\source\core\input\NstInpMahjong.hpp" />
-    <ClInclude Include="..\source\core\input\NstInpMouse.hpp" />
-    <ClInclude Include="..\source\core\input\NstInpOekaKidsTablet.hpp" />
-    <ClInclude Include="..\source\core\input\NstInpPachinko.hpp" />
-    <ClInclude Include="..\source\core\input\NstInpPad.hpp" />
-    <ClInclude Include="..\source\core\input\NstInpPaddle.hpp" />
-    <ClInclude Include="..\source\core\input\NstInpPartyTap.hpp" />
-    <ClInclude Include="..\source\core\input\NstInpPokkunMoguraa.hpp" />
-    <ClInclude Include="..\source\core\input\NstInpPowerGlove.hpp" />
-    <ClInclude Include="..\source\core\input\NstInpPowerPad.hpp" />
-    <ClInclude Include="..\source\core\input\NstInpRob.hpp" />
-    <ClInclude Include="..\source\core\input\NstInpSuborKeyboard.hpp" />
-    <ClInclude Include="..\source\core\input\NstInpTopRider.hpp" />
-    <ClInclude Include="..\source\core\input\NstInpTurboFile.hpp" />
-    <ClInclude Include="..\source\core\input\NstInpZapper.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoard.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardAxRom.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBxRom.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardCxRom.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardDiscrete.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardDxRom.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardExRom.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardFxRom.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardGxRom.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardHxRom.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardJxRom.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardMmc1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardMmc2.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardMmc3.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardMmc4.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardMmc5.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardMmc6.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardMxRom.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardNRom.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardNxRom.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardPxRom.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardSxRom.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardTxRom.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardUxRom.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardEvent.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardFb.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardFfe.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardQj.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardRumbleStation.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardVsSystem.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardZz.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardAe.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardAgci.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardAve.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardAveD1012.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardAveNina.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBandai.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBandai24c0x.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBandaiAerobicsStudio.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBandaiDatach.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBandaiKaraokeStudio.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBandaiLz93d50.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBandaiLz93d50ex.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBandaiOekaKids.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBenshengBs5.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardCaltron.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardCamerica.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardCne.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardCneDecathlon.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardCnePsb.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardCneShlz.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardCony.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardDreamtech.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardFujiya.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardFukutake.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardFutureMedia.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardGouder.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardHenggedianzi.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardHes.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardHosenkan.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardIrem.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardIremG101.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardIremH3001.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardIremHolyDiver.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardIremKaiketsu.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardIremLrog017.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardJaleco.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardJalecoJf11.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardJalecoJf13.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardJalecoJf16.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardJalecoJf17.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardJalecoJf19.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardJalecoSs88006.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardJyCompany.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardKaiser.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardKasing.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardKay.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardKayH2288.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardKayPandaPrince.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardKonami.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardKonamiVrc1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardKonamiVrc2.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardKonamiVrc3.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardKonamiVrc4.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardKonamiVrc6.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardKonamiVrc7.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardKonamiVsSystem.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardMagicSeries.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardNamcot.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardNamcot163.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardNamcot175.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardNamcot340.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardNamcot34xx.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardNanjing.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardNihon.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardNitra.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardNtdec.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardOpenCorp.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardRcm.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardRexSoft.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardRexSoftDb5z.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardRexSoftSl1632.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardSachen.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardSachen74x374.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardSachenS8259.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardSachenSa0036.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardSachenSa0037.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardSachenSa72007.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardSachenSa72008.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardSachenStreetHeroes.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardSachenTca01.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardSachenTcu.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardSomeriTeam.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardSomeriTeamSl12.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardSubor.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardSunsoft.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardSunsoft1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardSunsoft2.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardSunsoft3.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardSunsoft4.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardSunsoft5b.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardSunsoftDcs.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardSunsoftFme7.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardSuperGame.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardSuperGameBoogerman.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardSuperGameLionKing.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardSuperGamePocahontas2.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardTaito.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardTaitoTc0190fmc.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardTaitoTc0190fmcPal16r4.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardTaitoX1005.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardTaitoX1017.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardTengen.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardTengenRambo1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardTxc.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardTxcMxmdhtwo.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardTxcPoliceman.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardTxcTw.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardWaixing.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardWaixingFfv.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardWaixingFs304.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardWaixingPs2.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardWaixingSecurity.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardWaixingSgz.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardWaixingSgzlz.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardWaixingSh2.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardWaixingZs.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardWhirlwind.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmc110in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmc1200in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmc150in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmc15in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmc20in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmc21in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmc22Games.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmc31in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmc35in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmc36in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmc64in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmc72in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmc76in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmc800in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmc8157.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmc9999999in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcA65as.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcBallgames11in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcCh001.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcCtc65.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcFamily4646B.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcFk23c.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcGamestarA.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcGamestarB.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcGolden190in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcGoldenCard6in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcGoldenGame260in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcHero.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcMarioParty7in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcNovelDiamond.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcPowerjoy84in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcResetBased4in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcSuper22Games.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcSuper24in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcSuper40in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcSuper700in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcSuperBig7in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcSuperGun20in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcSuperHiK300in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcSuperHiK4in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcSuperVision16in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcT262.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcVrc4.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcVt5201.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBmcY2k64in1.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBtl2708.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBtl6035052.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBtlAx5705.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBtlDragonNinja.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBtlGeniusMerioBros.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBtlMarioBaby.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBtlPikachuY2k.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBtlShuiGuanPipe.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBtlSmb2a.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBtlSmb2b.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBtlSmb2c.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBtlSmb3.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBtlSuperBros11.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBtlT230.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardBtlTobidaseDaisakusen.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardUnlA9746.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardUnlCc21.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardUnlEdu2000.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardUnlKingOfFighters96.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardUnlKingOfFighters97.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardUnlMmc3BigPrgRom.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardUnlMortalKombat2.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardUnlN625092.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardUnlSuperFighter3.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardUnlTf1201.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardUnlWorldHero.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardUnlXzy.hpp" />
-    <ClInclude Include="..\source\core\NstApu.hpp" />
-    <ClInclude Include="..\source\core\NstAssert.hpp" />
-    <ClInclude Include="..\source\core\NstBarcodeReader.hpp" />
-    <ClInclude Include="..\source\core\NstBase.hpp" />
-    <ClInclude Include="..\source\core\NstCartridge.hpp" />
-    <ClInclude Include="..\source\core\NstCartridgeInes.hpp" />
-    <ClInclude Include="..\source\core\NstCartridgeRomset.hpp" />
-    <ClInclude Include="..\source\core\NstCartridgeUnif.hpp" />
-    <ClInclude Include="..\source\core\NstCheats.hpp" />
-    <ClInclude Include="..\source\core\NstChecksum.hpp" />
-    <ClInclude Include="..\source\core\NstChips.hpp" />
-    <ClInclude Include="..\source\core\NstCore.hpp" />
-    <ClInclude Include="..\source\core\NstCpu.hpp" />
-    <ClInclude Include="..\source\core\NstCrc32.hpp" />
-    <ClInclude Include="..\source\core\NstDipSwitches.hpp" />
-    <ClInclude Include="..\source\core\NstFds.hpp" />
-    <ClInclude Include="..\source\core\NstFile.hpp" />
-    <ClInclude Include="..\source\core\NstFpuPrecision.hpp" />
-    <ClInclude Include="..\source\core\NstHook.hpp" />
-    <ClInclude Include="..\source\core\NstImage.hpp" />
-    <ClInclude Include="..\source\core\NstImageDatabase.hpp" />
-    <ClInclude Include="..\source\core\NstIoAccessor.hpp" />
-    <ClInclude Include="..\source\core\NstIoLine.hpp" />
-    <ClInclude Include="..\source\core\NstIoMap.hpp" />
-    <ClInclude Include="..\source\core\NstIoPort.hpp" />
-    <ClInclude Include="..\source\core\NstLog.hpp" />
-    <ClInclude Include="..\source\core\NstMachine.hpp" />
-    <ClInclude Include="..\source\core\NstMemory.hpp" />
-    <ClInclude Include="..\source\core\NstNsf.hpp" />
-    <ClInclude Include="..\source\core\NstPatcher.hpp" />
-    <ClInclude Include="..\source\core\NstPatcherIps.hpp" />
-    <ClInclude Include="..\source\core\NstPatcherUps.hpp" />
-    <ClInclude Include="..\source\core\NstPins.hpp" />
-    <ClInclude Include="..\source\core\NstPpu.hpp" />
-    <ClInclude Include="..\source\core\NstProperties.hpp" />
-    <ClInclude Include="..\source\core\NstRam.hpp" />
-    <ClInclude Include="..\source\core\NstSha1.hpp" />
-    <ClInclude Include="..\source\core\NstSoundPcm.hpp" />
-    <ClInclude Include="..\source\core\NstSoundPlayer.hpp" />
-    <ClInclude Include="..\source\core\NstSoundRenderer.hpp" />
-    <ClInclude Include="..\source\core\NstState.hpp" />
-    <ClInclude Include="..\source\core\NstStream.hpp" />
-    <ClInclude Include="..\source\core\NstTimer.hpp" />
-    <ClInclude Include="..\source\core\NstTracker.hpp" />
-    <ClInclude Include="..\source\core\NstTrackerMovie.hpp" />
-    <ClInclude Include="..\source\core\NstTrackerRewinder.hpp" />
-    <ClInclude Include="..\source\core\NstVector.hpp" />
-    <ClInclude Include="..\source\core\NstVideoRenderer.hpp" />
-    <ClInclude Include="..\source\core\NstVideoScreen.hpp" />
-    <ClInclude Include="..\source\core\NstXml.hpp" />
-    <ClInclude Include="..\source\core\NstZlib.hpp" />
-  </ItemGroup>
-  <ItemGroup>
-    <ClCompile Include="..\source\core\api\NstApiBarcodeReader.cpp" />
-    <ClCompile Include="..\source\core\api\NstApiCartridge.cpp" />
-    <ClCompile Include="..\source\core\api\NstApiCheats.cpp" />
-    <ClCompile Include="..\source\core\api\NstApiDipSwitches.cpp" />
-    <ClCompile Include="..\source\core\api\NstApiEmulator.cpp" />
-    <ClCompile Include="..\source\core\api\NstApiFds.cpp" />
-    <ClCompile Include="..\source\core\api\NstApiInput.cpp" />
-    <ClCompile Include="..\source\core\api\NstApiMachine.cpp" />
-    <ClCompile Include="..\source\core\api\NstApiMovie.cpp" />
-    <ClCompile Include="..\source\core\api\NstApiNsf.cpp" />
-    <ClCompile Include="..\source\core\api\NstApiRewinder.cpp" />
-    <ClCompile Include="..\source\core\api\NstApiSound.cpp" />
-    <ClCompile Include="..\source\core\api\NstApiTapeRecorder.cpp" />
-    <ClCompile Include="..\source\core\api\NstApiUser.cpp" />
-    <ClCompile Include="..\source\core\api\NstApiVideo.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardAcclaimMcAcc.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardAction53.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmc120in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmc60311c.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardInlNsf.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardMagicKidGoogoo.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardUnl158b.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardUnlFam250Schi24.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardUnlRetX7Gbl.cpp" />
-    <ClCompile Include="..\source\core\NstHomebrew.cpp" />
-    <ClCompile Include="..\source\core\NstVideoFilterxBR.cpp" />
-    <ClCompile Include="..\source\core\vssystem\NstVsRbiBaseball.cpp" />
-    <ClCompile Include="..\source\core\vssystem\NstVsSuperXevious.cpp" />
-    <ClCompile Include="..\source\core\vssystem\NstVsSystem.cpp" />
-    <ClCompile Include="..\source\core\vssystem\NstVsTkoBoxing.cpp" />
-    <ClCompile Include="..\source\core\NstVideoFilter2xSaI.cpp" />
-    <ClCompile Include="..\source\core\NstVideoFilterHqX.cpp" />
-    <ClCompile Include="..\source\core\NstVideoFilterNone.cpp" />
-    <ClCompile Include="..\source\core\NstVideoFilterNtsc.cpp" />
-    <ClCompile Include="..\source\core\NstVideoFilterNtscCfg.cpp" />
-    <ClCompile Include="..\source\core\NstVideoFilterScaleX.cpp" />
-    <ClCompile Include="..\source\core\input\NstInpAdapter.cpp" />
-    <ClCompile Include="..\source\core\input\NstInpBandaiHyperShot.cpp" />
-    <ClCompile Include="..\source\core\input\NstInpBarcodeWorld.cpp" />
-    <ClCompile Include="..\source\core\input\NstInpCrazyClimber.cpp" />
-    <ClCompile Include="..\source\core\input\NstInpDoremikkoKeyboard.cpp" />
-    <ClCompile Include="..\source\core\input\NstInpExcitingBoxing.cpp" />
-    <ClCompile Include="..\source\core\input\NstInpFamilyKeyboard.cpp" />
-    <ClCompile Include="..\source\core\input\NstInpFamilyTrainer.cpp" />
-    <ClCompile Include="..\source\core\input\NstInpHoriTrack.cpp" />
-    <ClCompile Include="..\source\core\input\NstInpKonamiHyperShot.cpp" />
-    <ClCompile Include="..\source\core\input\NstInpMahjong.cpp" />
-    <ClCompile Include="..\source\core\input\NstInpMouse.cpp" />
-    <ClCompile Include="..\source\core\input\NstInpOekaKidsTablet.cpp" />
-    <ClCompile Include="..\source\core\input\NstInpPachinko.cpp" />
-    <ClCompile Include="..\source\core\input\NstInpPad.cpp" />
-    <ClCompile Include="..\source\core\input\NstInpPaddle.cpp" />
-    <ClCompile Include="..\source\core\input\NstInpPartyTap.cpp" />
-    <ClCompile Include="..\source\core\input\NstInpPokkunMoguraa.cpp" />
-    <ClCompile Include="..\source\core\input\NstInpPowerGlove.cpp" />
-    <ClCompile Include="..\source\core\input\NstInpPowerPad.cpp" />
-    <ClCompile Include="..\source\core\input\NstInpRob.cpp" />
-    <ClCompile Include="..\source\core\input\NstInpSuborKeyboard.cpp" />
-    <ClCompile Include="..\source\core\input\NstInpTopRider.cpp" />
-    <ClCompile Include="..\source\core\input\NstInpTurboFile.cpp" />
-    <ClCompile Include="..\source\core\input\NstInpZapper.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoard.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardAxRom.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBxRom.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardCxRom.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardDiscrete.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardGxRom.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardMmc1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardMmc2.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardMmc3.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardMmc4.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardMmc5.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardMmc6.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardTxRom.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardUxRom.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardEvent.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardFb.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardFfe.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardQj.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardRumbleStation.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardVsSystem.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardZz.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardAe.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardAgci.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardAveD1012.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardAveNina.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBandai24c0x.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBandaiAerobicsStudio.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBandaiDatach.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBandaiKaraokeStudio.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBandaiLz93d50.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBandaiLz93d50ex.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBandaiOekaKids.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBenshengBs5.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardCaltron.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardCamerica.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardCneDecathlon.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardCnePsb.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardCneShlz.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardCony.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardDreamtech.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardFujiya.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardFukutake.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardFutureMedia.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardGouder.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardHenggedianzi.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardHes.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardHosenkan.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardIremG101.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardIremH3001.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardIremHolyDiver.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardIremKaiketsu.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardIremLrog017.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardJalecoJf11.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardJalecoJf13.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardJalecoJf16.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardJalecoJf17.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardJalecoJf19.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardJalecoSs88006.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardJyCompany.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardKaiser.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardKasing.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardKayH2288.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardKayPandaPrince.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardKonamiVrc1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardKonamiVrc2.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardKonamiVrc3.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardKonamiVrc4.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardKonamiVrc6.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardKonamiVrc7.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardKonamiVsSystem.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardMagicSeries.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardNamcot163.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardNamcot175.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardNamcot340.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardNamcot34xx.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardNanjing.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardNihon.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardNitra.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardNtdec.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardOpenCorp.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardRcm.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardRexSoftDb5z.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardRexSoftSl1632.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardSachen74x374.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardSachenS8259.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardSachenSa0036.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardSachenSa0037.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardSachenSa72007.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardSachenSa72008.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardSachenStreetHeroes.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardSachenTca01.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardSachenTcu.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardSomeriTeamSl12.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardSubor.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardSunsoft1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardSunsoft2.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardSunsoft3.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardSunsoft4.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardSunsoft5b.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardSunsoftDcs.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardSunsoftFme7.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardSuperGameBoogerman.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardSuperGameLionKing.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardSuperGamePocahontas2.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardTaitoTc0190fmc.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardTaitoTc0190fmcPal16r4.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardTaitoX1005.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardTaitoX1017.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardTengen.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardTengenRambo1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardTxc.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardTxcMxmdhtwo.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardTxcPoliceman.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardTxcTw.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardWaixing.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardWaixingFfv.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardWaixingFs304.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardWaixingPs2.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardWaixingSecurity.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardWaixingSgz.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardWaixingSgzlz.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardWaixingSh2.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardWaixingZs.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardWhirlwind.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmc110in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmc1200in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmc150in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmc15in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmc20in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmc21in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmc22Games.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmc31in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmc35in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmc36in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmc64in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmc72in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmc76in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmc800in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmc8157.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmc9999999in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcA65as.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcBallgames11in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcCh001.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcCtc65.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcFamily4646B.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcFk23c.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcGamestarA.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcGamestarB.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcGolden190in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcGoldenCard6in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcGoldenGame260in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcHero.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcMarioParty7in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcNovelDiamond.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcPowerjoy84in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcResetBased4in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcSuper22Games.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcSuper24in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcSuper40in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcSuper700in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcSuperBig7in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcSuperGun20in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcSuperHiK300in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcSuperHiK4in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcSuperVision16in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcT262.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcVrc4.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcVt5201.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBmcY2k64in1.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBtl2708.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBtl6035052.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBtlAx5705.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBtlDragonNinja.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBtlGeniusMerioBros.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBtlMarioBaby.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBtlPikachuY2k.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBtlShuiGuanPipe.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBtlSmb2a.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBtlSmb2b.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBtlSmb2c.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBtlSmb3.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBtlSuperBros11.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBtlT230.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardBtlTobidaseDaisakusen.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardUnlA9746.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardUnlCc21.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardUnlEdu2000.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardUnlKingOfFighters96.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardUnlKingOfFighters97.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardUnlMmc3BigPrgRom.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardUnlMortalKombat2.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardUnlN625092.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardUnlSuperFighter3.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardUnlTf1201.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardUnlWorldHero.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardUnlXzy.cpp" />
-    <ClCompile Include="..\source\core\NstApu.cpp" />
-    <ClCompile Include="..\source\core\NstAssert.cpp" />
-    <ClCompile Include="..\source\core\NstCartridge.cpp" />
-    <ClCompile Include="..\source\core\NstCartridgeInes.cpp" />
-    <ClCompile Include="..\source\core\NstCartridgeRomset.cpp" />
-    <ClCompile Include="..\source\core\NstCartridgeUnif.cpp" />
-    <ClCompile Include="..\source\core\NstCheats.cpp" />
-    <ClCompile Include="..\source\core\NstChecksum.cpp" />
-    <ClCompile Include="..\source\core\NstChips.cpp" />
-    <ClCompile Include="..\source\core\NstCore.cpp" />
-    <ClCompile Include="..\source\core\NstCpu.cpp" />
-    <ClCompile Include="..\source\core\NstCrc32.cpp" />
-    <ClCompile Include="..\source\core\NstFds.cpp" />
-    <ClCompile Include="..\source\core\NstFile.cpp" />
-    <ClCompile Include="..\source\core\NstImage.cpp" />
-    <ClCompile Include="..\source\core\NstImageDatabase.cpp" />
-    <ClCompile Include="..\source\core\NstLog.cpp" />
-    <ClCompile Include="..\source\core\NstMachine.cpp" />
-    <ClCompile Include="..\source\core\NstMemory.cpp" />
-    <ClCompile Include="..\source\core\NstNsf.cpp" />
-    <ClCompile Include="..\source\core\NstPatcher.cpp" />
-    <ClCompile Include="..\source\core\NstPatcherIps.cpp" />
-    <ClCompile Include="..\source\core\NstPatcherUps.cpp" />
-    <ClCompile Include="..\source\core\NstPins.cpp" />
-    <ClCompile Include="..\source\core\NstPpu.cpp" />
-    <ClCompile Include="..\source\core\NstProperties.cpp" />
-    <ClCompile Include="..\source\core\NstRam.cpp" />
-    <ClCompile Include="..\source\core\NstSha1.cpp" />
-    <ClCompile Include="..\source\core\NstSoundPcm.cpp" />
-    <ClCompile Include="..\source\core\NstSoundPlayer.cpp" />
-    <ClCompile Include="..\source\core\NstSoundRenderer.cpp" />
-    <ClCompile Include="..\source\core\NstState.cpp" />
-    <ClCompile Include="..\source\core\NstStream.cpp" />
-    <ClCompile Include="..\source\core\NstTracker.cpp" />
-    <ClCompile Include="..\source\core\NstTrackerMovie.cpp" />
-    <ClCompile Include="..\source\core\NstTrackerRewinder.cpp" />
-    <ClCompile Include="..\source\core\NstVector.cpp" />
-    <ClCompile Include="..\source\core\NstVideoRenderer.cpp" />
-    <ClCompile Include="..\source\core\NstVideoScreen.cpp" />
-    <ClCompile Include="..\source\core\NstXml.cpp" />
-    <ClCompile Include="..\source\core\NstZlib.cpp" />
-  </ItemGroup>
-  <ItemGroup>
-    <None Include="..\source\core\NstVideoFilterHq2x.inl" />
-    <None Include="..\source\core\NstVideoFilterHq3x.inl" />
-    <None Include="..\source\core\NstVideoFilterHq4x.inl" />
-    <None Include="..\source\nes_ntsc\nes_ntsc.inl" />
-    <None Include="..\source\core\NstSoundRenderer.inl" />
-  </ItemGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
-  <ImportGroup Label="ExtensionTargets">
-  </ImportGroup>
+ï»¿<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <ItemGroup Label="ProjectConfigurations">
+    <ProjectConfiguration Include="Debug|Win32">
+      <Configuration>Debug</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|Win32">
+      <Configuration>Release</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+  </ItemGroup>
+  <PropertyGroup Label="Globals">
+    <ProjectGuid>{CCC3A09C-0F7A-4E12-8594-11F2C60D71DA}</ProjectGuid>
+    <RootNamespace>Core</RootNamespace>
+    <Keyword>Win32Proj</Keyword>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <CharacterSet>NotSet</CharacterSet>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <CharacterSet>NotSet</CharacterSet>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
+  <ImportGroup Label="ExtensionSettings">
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+  </ImportGroup>
+  <PropertyGroup Label="UserMacros" />
+  <PropertyGroup>
+    <_ProjectFileVersion>10.0.30319.1</_ProjectFileVersion>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">$(SolutionDir)debugout\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">debug\core\</IntDir>
+    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">$(SolutionDir)releaseout\</OutDir>
+    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">release\core\</IntDir>
+    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
+    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" />
+    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" />
+    <CodeAnalysisRuleSet Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">AllRules.ruleset</CodeAnalysisRuleSet>
+    <CodeAnalysisRules Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" />
+    <CodeAnalysisRuleAssemblies Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" />
+  </PropertyGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <ClCompile>
+      <AdditionalOptions>/vmb /J %(AdditionalOptions)</AdditionalOptions>
+      <Optimization>Disabled</Optimization>
+      <IntrinsicFunctions>true</IntrinsicFunctions>
+      <PreprocessorDefinitions>NST_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <StringPooling>true</StringPooling>
+      <MinimalRebuild>true</MinimalRebuild>
+      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
+      <SmallerTypeCheck>true</SmallerTypeCheck>
+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
+      <StructMemberAlignment>Default</StructMemberAlignment>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <FloatingPointModel>Precise</FloatingPointModel>
+      <FloatingPointExceptions>true</FloatingPointExceptions>
+      <DisableLanguageExtensions>false</DisableLanguageExtensions>
+      <TreatWChar_tAsBuiltInType>true</TreatWChar_tAsBuiltInType>
+      <RuntimeTypeInfo>false</RuntimeTypeInfo>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <WarningLevel>Level4</WarningLevel>
+      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
+      <CallingConvention>FastCall</CallingConvention>
+      <ShowIncludes>false</ShowIncludes>
+      <OmitDefaultLibName>true</OmitDefaultLibName>
+    </ClCompile>
+    <Lib>
+      <UseUnicodeResponseFiles>false</UseUnicodeResponseFiles>
+      <OutputFile>$(SolutionDir)..\lib\emucoredebug.lib</OutputFile>
+      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
+    </Lib>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <ClCompile>
+      <AdditionalOptions>/vmb /J %(AdditionalOptions)</AdditionalOptions>
+      <Optimization>Full</Optimization>
+      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
+      <IntrinsicFunctions>true</IntrinsicFunctions>
+      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
+      <OmitFramePointers>true</OmitFramePointers>
+      <PreprocessorDefinitions>NDEBUG;_SECURE_SCL=0;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <StringPooling>true</StringPooling>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <BufferSecurityCheck>false</BufferSecurityCheck>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <EnableEnhancedInstructionSet>NotSet</EnableEnhancedInstructionSet>
+      <FloatingPointModel>Precise</FloatingPointModel>
+      <DisableLanguageExtensions>true</DisableLanguageExtensions>
+      <TreatWChar_tAsBuiltInType>true</TreatWChar_tAsBuiltInType>
+      <RuntimeTypeInfo>false</RuntimeTypeInfo>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <AssemblerOutput>AssemblyAndSourceCode</AssemblerOutput>
+      <AssemblerListingLocation>$(SolutionDir)Release\Core\Asm\</AssemblerListingLocation>
+      <WarningLevel>Level4</WarningLevel>
+      <DebugInformationFormat>
+      </DebugInformationFormat>
+      <CallingConvention>FastCall</CallingConvention>
+      <OmitDefaultLibName>true</OmitDefaultLibName>
+    </ClCompile>
+    <Lib>
+      <UseUnicodeResponseFiles>false</UseUnicodeResponseFiles>
+      <OutputFile>$(SolutionDir)..\lib\emucore.lib</OutputFile>
+      <IgnoreAllDefaultLibraries>true</IgnoreAllDefaultLibraries>
+    </Lib>
+  </ItemDefinitionGroup>
+  <ItemGroup>
+    <ClInclude Include="..\source\core\api\NstApi.hpp" />
+    <ClInclude Include="..\source\core\api\NstApiBarcodeReader.hpp" />
+    <ClInclude Include="..\source\core\api\NstApiCartridge.hpp" />
+    <ClInclude Include="..\source\core\api\NstApiCheats.hpp" />
+    <ClInclude Include="..\source\core\api\NstApiConfig.hpp" />
+    <ClInclude Include="..\source\core\api\NstApiDipSwitches.hpp" />
+    <ClInclude Include="..\source\core\api\NstApiEmulator.hpp" />
+    <ClInclude Include="..\source\core\api\NstApiFds.hpp" />
+    <ClInclude Include="..\source\core\api\NstApiInput.hpp" />
+    <ClInclude Include="..\source\core\api\NstApiMachine.hpp" />
+    <ClInclude Include="..\source\core\api\NstApiMovie.hpp" />
+    <ClInclude Include="..\source\core\api\NstApiNsf.hpp" />
+    <ClInclude Include="..\source\core\api\NstApiRewinder.hpp" />
+    <ClInclude Include="..\source\core\api\NstApiSound.hpp" />
+    <ClInclude Include="..\source\core\api\NstApiTapeRecorder.hpp" />
+    <ClInclude Include="..\source\core\api\NstApiUser.hpp" />
+    <ClInclude Include="..\source\core\api\NstApiVideo.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardAcclaim.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardAcclaimMcAcc.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardAction53.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmc120in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmc60311c.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardInlNsf.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardMagicKidGoogoo.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardUnl158b.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardUnlFam250Schi24.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardUnlRetX7Gbl.hpp" />
+    <ClInclude Include="..\source\core\NstHomebrew.hpp" />
+    <ClInclude Include="..\source\core\NstRunTimer.hpp" />
+    <ClInclude Include="..\source\core\NstVideoFilterxBR.hpp" />
+    <ClInclude Include="..\source\core\vssystem\NstVsRbiBaseball.hpp" />
+    <ClInclude Include="..\source\core\vssystem\NstVsSuperXevious.hpp" />
+    <ClInclude Include="..\source\core\vssystem\NstVsSystem.hpp" />
+    <ClInclude Include="..\source\core\vssystem\NstVsTkoBoxing.hpp" />
+    <ClInclude Include="..\source\core\NstVideoFilter2xSaI.hpp" />
+    <ClInclude Include="..\source\core\NstVideoFilterHqX.hpp" />
+    <ClInclude Include="..\source\core\NstVideoFilterNone.hpp" />
+    <ClInclude Include="..\source\core\NstVideoFilterNtsc.hpp" />
+    <ClInclude Include="..\source\core\NstVideoFilterScaleX.hpp" />
+    <ClInclude Include="..\source\nes_ntsc\nes_ntsc.h" />
+    <ClInclude Include="..\source\nes_ntsc\nes_ntsc_config.h" />
+    <ClInclude Include="..\source\nes_ntsc\nes_ntsc_impl.h" />
+    <ClInclude Include="..\source\core\input\NstInpAdapter.hpp" />
+    <ClInclude Include="..\source\core\input\NstInpBandaiHyperShot.hpp" />
+    <ClInclude Include="..\source\core\input\NstInpBarcodeWorld.hpp" />
+    <ClInclude Include="..\source\core\input\NstInpCrazyClimber.hpp" />
+    <ClInclude Include="..\source\core\input\NstInpDevice.hpp" />
+    <ClInclude Include="..\source\core\input\NstInpDoremikkoKeyboard.hpp" />
+    <ClInclude Include="..\source\core\input\NstInpExcitingBoxing.hpp" />
+    <ClInclude Include="..\source\core\input\NstInpFamilyKeyboard.hpp" />
+    <ClInclude Include="..\source\core\input\NstInpFamilyTrainer.hpp" />
+    <ClInclude Include="..\source\core\input\NstInpHoriTrack.hpp" />
+    <ClInclude Include="..\source\core\input\NstInpKonamiHyperShot.hpp" />
+    <ClInclude Include="..\source\core\input\NstInpMahjong.hpp" />
+    <ClInclude Include="..\source\core\input\NstInpMouse.hpp" />
+    <ClInclude Include="..\source\core\input\NstInpOekaKidsTablet.hpp" />
+    <ClInclude Include="..\source\core\input\NstInpPachinko.hpp" />
+    <ClInclude Include="..\source\core\input\NstInpPad.hpp" />
+    <ClInclude Include="..\source\core\input\NstInpPaddle.hpp" />
+    <ClInclude Include="..\source\core\input\NstInpPartyTap.hpp" />
+    <ClInclude Include="..\source\core\input\NstInpPokkunMoguraa.hpp" />
+    <ClInclude Include="..\source\core\input\NstInpPowerGlove.hpp" />
+    <ClInclude Include="..\source\core\input\NstInpPowerPad.hpp" />
+    <ClInclude Include="..\source\core\input\NstInpRob.hpp" />
+    <ClInclude Include="..\source\core\input\NstInpSuborKeyboard.hpp" />
+    <ClInclude Include="..\source\core\input\NstInpTopRider.hpp" />
+    <ClInclude Include="..\source\core\input\NstInpTurboFile.hpp" />
+    <ClInclude Include="..\source\core\input\NstInpZapper.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoard.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardAxRom.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBxRom.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardCxRom.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardDiscrete.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardDxRom.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardExRom.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardFxRom.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardGxRom.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardHxRom.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardJxRom.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardMmc1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardMmc2.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardMmc3.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardMmc4.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardMmc5.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardMmc6.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardMxRom.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardNRom.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardNxRom.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardPxRom.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardSxRom.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardTxRom.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardUxRom.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardEvent.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardFb.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardFfe.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardQj.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardRumbleStation.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardVsSystem.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardZz.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardAe.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardAgci.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardAve.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardAveD1012.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardAveNina.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBandai.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBandai24c0x.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBandaiAerobicsStudio.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBandaiDatach.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBandaiKaraokeStudio.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBandaiLz93d50.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBandaiLz93d50ex.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBandaiOekaKids.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBenshengBs5.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardCaltron.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardCamerica.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardCne.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardCneDecathlon.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardCnePsb.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardCneShlz.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardCony.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardDreamtech.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardFujiya.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardFukutake.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardFutureMedia.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardGouder.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardHenggedianzi.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardHes.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardHosenkan.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardIrem.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardIremG101.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardIremH3001.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardIremHolyDiver.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardIremKaiketsu.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardIremLrog017.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardJaleco.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardJalecoJf11.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardJalecoJf13.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardJalecoJf16.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardJalecoJf17.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardJalecoJf19.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardJalecoSs88006.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardJyCompany.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardKaiser.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardKasing.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardKay.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardKayH2288.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardKayPandaPrince.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardKonami.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardKonamiVrc1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardKonamiVrc2.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardKonamiVrc3.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardKonamiVrc4.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardKonamiVrc6.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardKonamiVrc7.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardKonamiVsSystem.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardMagicSeries.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardNamcot.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardNamcot163.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardNamcot175.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardNamcot340.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardNamcot34xx.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardNanjing.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardNihon.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardNitra.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardNtdec.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardOpenCorp.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardRcm.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardRexSoft.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardRexSoftDb5z.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardRexSoftSl1632.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardSachen.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardSachen74x374.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardSachenS8259.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardSachenSa0036.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardSachenSa0037.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardSachenSa72007.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardSachenSa72008.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardSachenStreetHeroes.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardSachenTca01.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardSachenTcu.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardSomeriTeam.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardSomeriTeamSl12.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardSubor.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardSunsoft.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardSunsoft1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardSunsoft2.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardSunsoft3.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardSunsoft4.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardSunsoft5b.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardSunsoftDcs.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardSunsoftFme7.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardSuperGame.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardSuperGameBoogerman.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardSuperGameLionKing.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardSuperGamePocahontas2.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardTaito.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardTaitoTc0190fmc.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardTaitoTc0190fmcPal16r4.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardTaitoX1005.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardTaitoX1017.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardTengen.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardTengenRambo1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardTxc.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardTxcMxmdhtwo.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardTxcPoliceman.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardTxcTw.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardWaixing.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardWaixingFfv.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardWaixingFs304.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardWaixingPs2.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardWaixingSecurity.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardWaixingSgz.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardWaixingSgzlz.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardWaixingSh2.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardWaixingZs.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardWhirlwind.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmc110in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmc1200in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmc150in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmc15in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmc20in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmc21in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmc22Games.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmc31in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmc35in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmc36in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmc64in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmc72in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmc76in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmc800in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmc8157.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmc9999999in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcA65as.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcBallgames11in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcCh001.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcCtc65.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcFamily4646B.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcFk23c.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcGamestarA.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcGamestarB.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcGolden190in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcGoldenCard6in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcGoldenGame260in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcHero.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcMarioParty7in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcNovelDiamond.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcPowerjoy84in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcResetBased4in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcSuper22Games.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcSuper24in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcSuper40in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcSuper700in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcSuperBig7in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcSuperGun20in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcSuperHiK300in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcSuperHiK4in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcSuperVision16in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcT262.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcVrc4.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcVt5201.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBmcY2k64in1.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBtl2708.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBtl6035052.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBtlAx5705.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBtlDragonNinja.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBtlGeniusMerioBros.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBtlMarioBaby.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBtlPikachuY2k.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBtlShuiGuanPipe.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBtlSmb2a.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBtlSmb2b.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBtlSmb2c.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBtlSmb3.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBtlSuperBros11.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBtlT230.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardBtlTobidaseDaisakusen.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardUnlA9746.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardUnlCc21.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardUnlEdu2000.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardUnlKingOfFighters96.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardUnlKingOfFighters97.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardUnlMmc3BigPrgRom.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardUnlMortalKombat2.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardUnlN625092.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardUnlSuperFighter3.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardUnlTf1201.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardUnlWorldHero.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardUnlXzy.hpp" />
+    <ClInclude Include="..\source\core\NstApu.hpp" />
+    <ClInclude Include="..\source\core\NstAssert.hpp" />
+    <ClInclude Include="..\source\core\NstBarcodeReader.hpp" />
+    <ClInclude Include="..\source\core\NstBase.hpp" />
+    <ClInclude Include="..\source\core\NstCartridge.hpp" />
+    <ClInclude Include="..\source\core\NstCartridgeInes.hpp" />
+    <ClInclude Include="..\source\core\NstCartridgeRomset.hpp" />
+    <ClInclude Include="..\source\core\NstCartridgeUnif.hpp" />
+    <ClInclude Include="..\source\core\NstCheats.hpp" />
+    <ClInclude Include="..\source\core\NstChecksum.hpp" />
+    <ClInclude Include="..\source\core\NstChips.hpp" />
+    <ClInclude Include="..\source\core\NstCore.hpp" />
+    <ClInclude Include="..\source\core\NstCpu.hpp" />
+    <ClInclude Include="..\source\core\NstCrc32.hpp" />
+    <ClInclude Include="..\source\core\NstDipSwitches.hpp" />
+    <ClInclude Include="..\source\core\NstFds.hpp" />
+    <ClInclude Include="..\source\core\NstFile.hpp" />
+    <ClInclude Include="..\source\core\NstFpuPrecision.hpp" />
+    <ClInclude Include="..\source\core\NstHook.hpp" />
+    <ClInclude Include="..\source\core\NstImage.hpp" />
+    <ClInclude Include="..\source\core\NstImageDatabase.hpp" />
+    <ClInclude Include="..\source\core\NstIoAccessor.hpp" />
+    <ClInclude Include="..\source\core\NstIoLine.hpp" />
+    <ClInclude Include="..\source\core\NstIoMap.hpp" />
+    <ClInclude Include="..\source\core\NstIoPort.hpp" />
+    <ClInclude Include="..\source\core\NstLog.hpp" />
+    <ClInclude Include="..\source\core\NstMachine.hpp" />
+    <ClInclude Include="..\source\core\NstMemory.hpp" />
+    <ClInclude Include="..\source\core\NstNsf.hpp" />
+    <ClInclude Include="..\source\core\NstPatcher.hpp" />
+    <ClInclude Include="..\source\core\NstPatcherIps.hpp" />
+    <ClInclude Include="..\source\core\NstPatcherUps.hpp" />
+    <ClInclude Include="..\source\core\NstPins.hpp" />
+    <ClInclude Include="..\source\core\NstPpu.hpp" />
+    <ClInclude Include="..\source\core\NstProperties.hpp" />
+    <ClInclude Include="..\source\core\NstRam.hpp" />
+    <ClInclude Include="..\source\core\NstSha1.hpp" />
+    <ClInclude Include="..\source\core\NstSoundPcm.hpp" />
+    <ClInclude Include="..\source\core\NstSoundPlayer.hpp" />
+    <ClInclude Include="..\source\core\NstSoundRenderer.hpp" />
+    <ClInclude Include="..\source\core\NstState.hpp" />
+    <ClInclude Include="..\source\core\NstStream.hpp" />
+    <ClInclude Include="..\source\core\NstTimer.hpp" />
+    <ClInclude Include="..\source\core\NstTracker.hpp" />
+    <ClInclude Include="..\source\core\NstTrackerMovie.hpp" />
+    <ClInclude Include="..\source\core\NstTrackerRewinder.hpp" />
+    <ClInclude Include="..\source\core\NstVector.hpp" />
+    <ClInclude Include="..\source\core\NstVideoRenderer.hpp" />
+    <ClInclude Include="..\source\core\NstVideoScreen.hpp" />
+    <ClInclude Include="..\source\core\NstXml.hpp" />
+    <ClInclude Include="..\source\core\NstZlib.hpp" />
+  </ItemGroup>
+  <ItemGroup>
+    <ClCompile Include="..\source\core\api\NstApiBarcodeReader.cpp" />
+    <ClCompile Include="..\source\core\api\NstApiCartridge.cpp" />
+    <ClCompile Include="..\source\core\api\NstApiCheats.cpp" />
+    <ClCompile Include="..\source\core\api\NstApiDipSwitches.cpp" />
+    <ClCompile Include="..\source\core\api\NstApiEmulator.cpp" />
+    <ClCompile Include="..\source\core\api\NstApiFds.cpp" />
+    <ClCompile Include="..\source\core\api\NstApiInput.cpp" />
+    <ClCompile Include="..\source\core\api\NstApiMachine.cpp" />
+    <ClCompile Include="..\source\core\api\NstApiMovie.cpp" />
+    <ClCompile Include="..\source\core\api\NstApiNsf.cpp" />
+    <ClCompile Include="..\source\core\api\NstApiRewinder.cpp" />
+    <ClCompile Include="..\source\core\api\NstApiSound.cpp" />
+    <ClCompile Include="..\source\core\api\NstApiTapeRecorder.cpp" />
+    <ClCompile Include="..\source\core\api\NstApiUser.cpp" />
+    <ClCompile Include="..\source\core\api\NstApiVideo.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardAcclaimMcAcc.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardAction53.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmc120in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmc60311c.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardInlNsf.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardMagicKidGoogoo.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardUnl158b.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardUnlFam250Schi24.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardUnlRetX7Gbl.cpp" />
+    <ClCompile Include="..\source\core\NstHomebrew.cpp" />
+    <ClCompile Include="..\source\core\NstRunTimer.cpp" />
+    <ClCompile Include="..\source\core\NstVideoFilterxBR.cpp" />
+    <ClCompile Include="..\source\core\vssystem\NstVsRbiBaseball.cpp" />
+    <ClCompile Include="..\source\core\vssystem\NstVsSuperXevious.cpp" />
+    <ClCompile Include="..\source\core\vssystem\NstVsSystem.cpp" />
+    <ClCompile Include="..\source\core\vssystem\NstVsTkoBoxing.cpp" />
+    <ClCompile Include="..\source\core\NstVideoFilter2xSaI.cpp" />
+    <ClCompile Include="..\source\core\NstVideoFilterHqX.cpp" />
+    <ClCompile Include="..\source\core\NstVideoFilterNone.cpp" />
+    <ClCompile Include="..\source\core\NstVideoFilterNtsc.cpp" />
+    <ClCompile Include="..\source\core\NstVideoFilterNtscCfg.cpp" />
+    <ClCompile Include="..\source\core\NstVideoFilterScaleX.cpp" />
+    <ClCompile Include="..\source\core\input\NstInpAdapter.cpp" />
+    <ClCompile Include="..\source\core\input\NstInpBandaiHyperShot.cpp" />
+    <ClCompile Include="..\source\core\input\NstInpBarcodeWorld.cpp" />
+    <ClCompile Include="..\source\core\input\NstInpCrazyClimber.cpp" />
+    <ClCompile Include="..\source\core\input\NstInpDoremikkoKeyboard.cpp" />
+    <ClCompile Include="..\source\core\input\NstInpExcitingBoxing.cpp" />
+    <ClCompile Include="..\source\core\input\NstInpFamilyKeyboard.cpp" />
+    <ClCompile Include="..\source\core\input\NstInpFamilyTrainer.cpp" />
+    <ClCompile Include="..\source\core\input\NstInpHoriTrack.cpp" />
+    <ClCompile Include="..\source\core\input\NstInpKonamiHyperShot.cpp" />
+    <ClCompile Include="..\source\core\input\NstInpMahjong.cpp" />
+    <ClCompile Include="..\source\core\input\NstInpMouse.cpp" />
+    <ClCompile Include="..\source\core\input\NstInpOekaKidsTablet.cpp" />
+    <ClCompile Include="..\source\core\input\NstInpPachinko.cpp" />
+    <ClCompile Include="..\source\core\input\NstInpPad.cpp" />
+    <ClCompile Include="..\source\core\input\NstInpPaddle.cpp" />
+    <ClCompile Include="..\source\core\input\NstInpPartyTap.cpp" />
+    <ClCompile Include="..\source\core\input\NstInpPokkunMoguraa.cpp" />
+    <ClCompile Include="..\source\core\input\NstInpPowerGlove.cpp" />
+    <ClCompile Include="..\source\core\input\NstInpPowerPad.cpp" />
+    <ClCompile Include="..\source\core\input\NstInpRob.cpp" />
+    <ClCompile Include="..\source\core\input\NstInpSuborKeyboard.cpp" />
+    <ClCompile Include="..\source\core\input\NstInpTopRider.cpp" />
+    <ClCompile Include="..\source\core\input\NstInpTurboFile.cpp" />
+    <ClCompile Include="..\source\core\input\NstInpZapper.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoard.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardAxRom.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBxRom.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardCxRom.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardDiscrete.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardGxRom.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardMmc1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardMmc2.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardMmc3.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardMmc4.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardMmc5.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardMmc6.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardTxRom.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardUxRom.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardEvent.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardFb.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardFfe.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardQj.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardRumbleStation.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardVsSystem.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardZz.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardAe.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardAgci.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardAveD1012.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardAveNina.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBandai24c0x.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBandaiAerobicsStudio.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBandaiDatach.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBandaiKaraokeStudio.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBandaiLz93d50.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBandaiLz93d50ex.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBandaiOekaKids.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBenshengBs5.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardCaltron.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardCamerica.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardCneDecathlon.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardCnePsb.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardCneShlz.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardCony.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardDreamtech.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardFujiya.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardFukutake.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardFutureMedia.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardGouder.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardHenggedianzi.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardHes.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardHosenkan.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardIremG101.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardIremH3001.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardIremHolyDiver.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardIremKaiketsu.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardIremLrog017.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardJalecoJf11.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardJalecoJf13.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardJalecoJf16.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardJalecoJf17.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardJalecoJf19.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardJalecoSs88006.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardJyCompany.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardKaiser.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardKasing.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardKayH2288.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardKayPandaPrince.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardKonamiVrc1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardKonamiVrc2.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardKonamiVrc3.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardKonamiVrc4.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardKonamiVrc6.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardKonamiVrc7.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardKonamiVsSystem.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardMagicSeries.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardNamcot163.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardNamcot175.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardNamcot340.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardNamcot34xx.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardNanjing.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardNihon.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardNitra.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardNtdec.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardOpenCorp.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardRcm.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardRexSoftDb5z.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardRexSoftSl1632.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardSachen74x374.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardSachenS8259.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardSachenSa0036.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardSachenSa0037.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardSachenSa72007.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardSachenSa72008.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardSachenStreetHeroes.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardSachenTca01.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardSachenTcu.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardSomeriTeamSl12.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardSubor.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardSunsoft1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardSunsoft2.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardSunsoft3.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardSunsoft4.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardSunsoft5b.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardSunsoftDcs.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardSunsoftFme7.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardSuperGameBoogerman.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardSuperGameLionKing.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardSuperGamePocahontas2.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardTaitoTc0190fmc.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardTaitoTc0190fmcPal16r4.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardTaitoX1005.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardTaitoX1017.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardTengen.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardTengenRambo1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardTxc.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardTxcMxmdhtwo.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardTxcPoliceman.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardTxcTw.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardWaixing.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardWaixingFfv.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardWaixingFs304.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardWaixingPs2.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardWaixingSecurity.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardWaixingSgz.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardWaixingSgzlz.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardWaixingSh2.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardWaixingZs.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardWhirlwind.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmc110in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmc1200in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmc150in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmc15in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmc20in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmc21in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmc22Games.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmc31in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmc35in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmc36in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmc64in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmc72in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmc76in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmc800in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmc8157.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmc9999999in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcA65as.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcBallgames11in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcCh001.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcCtc65.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcFamily4646B.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcFk23c.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcGamestarA.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcGamestarB.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcGolden190in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcGoldenCard6in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcGoldenGame260in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcHero.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcMarioParty7in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcNovelDiamond.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcPowerjoy84in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcResetBased4in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcSuper22Games.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcSuper24in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcSuper40in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcSuper700in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcSuperBig7in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcSuperGun20in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcSuperHiK300in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcSuperHiK4in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcSuperVision16in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcT262.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcVrc4.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcVt5201.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBmcY2k64in1.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBtl2708.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBtl6035052.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBtlAx5705.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBtlDragonNinja.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBtlGeniusMerioBros.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBtlMarioBaby.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBtlPikachuY2k.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBtlShuiGuanPipe.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBtlSmb2a.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBtlSmb2b.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBtlSmb2c.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBtlSmb3.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBtlSuperBros11.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBtlT230.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardBtlTobidaseDaisakusen.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardUnlA9746.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardUnlCc21.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardUnlEdu2000.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardUnlKingOfFighters96.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardUnlKingOfFighters97.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardUnlMmc3BigPrgRom.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardUnlMortalKombat2.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardUnlN625092.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardUnlSuperFighter3.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardUnlTf1201.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardUnlWorldHero.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardUnlXzy.cpp" />
+    <ClCompile Include="..\source\core\NstApu.cpp" />
+    <ClCompile Include="..\source\core\NstAssert.cpp" />
+    <ClCompile Include="..\source\core\NstCartridge.cpp" />
+    <ClCompile Include="..\source\core\NstCartridgeInes.cpp" />
+    <ClCompile Include="..\source\core\NstCartridgeRomset.cpp" />
+    <ClCompile Include="..\source\core\NstCartridgeUnif.cpp" />
+    <ClCompile Include="..\source\core\NstCheats.cpp" />
+    <ClCompile Include="..\source\core\NstChecksum.cpp" />
+    <ClCompile Include="..\source\core\NstChips.cpp" />
+    <ClCompile Include="..\source\core\NstCore.cpp" />
+    <ClCompile Include="..\source\core\NstCpu.cpp" />
+    <ClCompile Include="..\source\core\NstCrc32.cpp" />
+    <ClCompile Include="..\source\core\NstFds.cpp" />
+    <ClCompile Include="..\source\core\NstFile.cpp" />
+    <ClCompile Include="..\source\core\NstImage.cpp" />
+    <ClCompile Include="..\source\core\NstImageDatabase.cpp" />
+    <ClCompile Include="..\source\core\NstLog.cpp" />
+    <ClCompile Include="..\source\core\NstMachine.cpp" />
+    <ClCompile Include="..\source\core\NstMemory.cpp" />
+    <ClCompile Include="..\source\core\NstNsf.cpp" />
+    <ClCompile Include="..\source\core\NstPatcher.cpp" />
+    <ClCompile Include="..\source\core\NstPatcherIps.cpp" />
+    <ClCompile Include="..\source\core\NstPatcherUps.cpp" />
+    <ClCompile Include="..\source\core\NstPins.cpp" />
+    <ClCompile Include="..\source\core\NstPpu.cpp" />
+    <ClCompile Include="..\source\core\NstProperties.cpp" />
+    <ClCompile Include="..\source\core\NstRam.cpp" />
+    <ClCompile Include="..\source\core\NstSha1.cpp" />
+    <ClCompile Include="..\source\core\NstSoundPcm.cpp" />
+    <ClCompile Include="..\source\core\NstSoundPlayer.cpp" />
+    <ClCompile Include="..\source\core\NstSoundRenderer.cpp" />
+    <ClCompile Include="..\source\core\NstState.cpp" />
+    <ClCompile Include="..\source\core\NstStream.cpp" />
+    <ClCompile Include="..\source\core\NstTracker.cpp" />
+    <ClCompile Include="..\source\core\NstTrackerMovie.cpp" />
+    <ClCompile Include="..\source\core\NstTrackerRewinder.cpp" />
+    <ClCompile Include="..\source\core\NstVector.cpp" />
+    <ClCompile Include="..\source\core\NstVideoRenderer.cpp" />
+    <ClCompile Include="..\source\core\NstVideoScreen.cpp" />
+    <ClCompile Include="..\source\core\NstXml.cpp" />
+    <ClCompile Include="..\source\core\NstZlib.cpp" />
+  </ItemGroup>
+  <ItemGroup>
+    <None Include="..\source\core\NstVideoFilterHq2x.inl" />
+    <None Include="..\source\core\NstVideoFilterHq3x.inl" />
+    <None Include="..\source\core\NstVideoFilterHq4x.inl" />
+    <None Include="..\source\nes_ntsc\nes_ntsc.inl" />
+    <None Include="..\source\core\NstSoundRenderer.inl" />
+  </ItemGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
+  <ImportGroup Label="ExtensionTargets">
+  </ImportGroup>
 </Project>
\ No newline at end of file
diff --git a/projects/core.vcxproj.filters b/projects/core.vcxproj.filters
index 7888072..883ee12 100644
--- a/projects/core.vcxproj.filters
+++ b/projects/core.vcxproj.filters
@@ -1,1769 +1,1771 @@
-ï»¿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <ItemGroup>
-    <Filter Include="Api">
-      <UniqueIdentifier>{b355513c-0a44-4b8a-bd2e-e6c58ed616b1}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="VsSystem">
-      <UniqueIdentifier>{8c88ca9e-ae43-4c00-9abd-1a84ab83b2be}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="VideoFilters">
-      <UniqueIdentifier>{2a5c4b59-8138-4e72-bc55-5d56b5bb4397}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="VideoFilters\nes_ntsc">
-      <UniqueIdentifier>{efa1a91d-b937-42f2-8425-8c0c062f610c}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="Input">
-      <UniqueIdentifier>{bed4c530-d8c7-4010-aa7b-a98603f6b8ee}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="Board">
-      <UniqueIdentifier>{0147b3b3-220e-44d1-9700-7ebaddfcbc56}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="Board\Custom">
-      <UniqueIdentifier>{5a75e4c8-5f01-4ad6-bb5e-5414f77c59cf}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="Board\3rdparty">
-      <UniqueIdentifier>{6a86ab7f-2634-4e57-b61f-2d1de4be9b71}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="Board\Bmc">
-      <UniqueIdentifier>{77bd0d24-84dd-4806-8f84-4c27eac59c7d}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="Board\Btl">
-      <UniqueIdentifier>{aecea58e-db9d-43b4-8460-2ce6a006a029}</UniqueIdentifier>
-    </Filter>
-    <Filter Include="Board\Unl">
-      <UniqueIdentifier>{fb11b05b-f38a-43e7-be3b-38e60bed92b9}</UniqueIdentifier>
-    </Filter>
-  </ItemGroup>
-  <ItemGroup>
-    <ClInclude Include="..\source\core\api\NstApi.hpp">
-      <Filter>Api</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\api\NstApiBarcodeReader.hpp">
-      <Filter>Api</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\api\NstApiCartridge.hpp">
-      <Filter>Api</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\api\NstApiCheats.hpp">
-      <Filter>Api</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\api\NstApiConfig.hpp">
-      <Filter>Api</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\api\NstApiDipSwitches.hpp">
-      <Filter>Api</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\api\NstApiEmulator.hpp">
-      <Filter>Api</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\api\NstApiFds.hpp">
-      <Filter>Api</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\api\NstApiInput.hpp">
-      <Filter>Api</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\api\NstApiMachine.hpp">
-      <Filter>Api</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\api\NstApiMovie.hpp">
-      <Filter>Api</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\api\NstApiNsf.hpp">
-      <Filter>Api</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\api\NstApiRewinder.hpp">
-      <Filter>Api</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\api\NstApiSound.hpp">
-      <Filter>Api</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\api\NstApiTapeRecorder.hpp">
-      <Filter>Api</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\api\NstApiUser.hpp">
-      <Filter>Api</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\api\NstApiVideo.hpp">
-      <Filter>Api</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\vssystem\NstVsRbiBaseball.hpp">
-      <Filter>VsSystem</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\vssystem\NstVsSuperXevious.hpp">
-      <Filter>VsSystem</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\vssystem\NstVsSystem.hpp">
-      <Filter>VsSystem</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\vssystem\NstVsTkoBoxing.hpp">
-      <Filter>VsSystem</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\NstVideoFilter2xSaI.hpp">
-      <Filter>VideoFilters</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\NstVideoFilterHqX.hpp">
-      <Filter>VideoFilters</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\NstVideoFilterNone.hpp">
-      <Filter>VideoFilters</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\NstVideoFilterNtsc.hpp">
-      <Filter>VideoFilters</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\NstVideoFilterScaleX.hpp">
-      <Filter>VideoFilters</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\nes_ntsc\nes_ntsc.h">
-      <Filter>VideoFilters\nes_ntsc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\nes_ntsc\nes_ntsc_config.h">
-      <Filter>VideoFilters\nes_ntsc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\nes_ntsc\nes_ntsc_impl.h">
-      <Filter>VideoFilters\nes_ntsc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\input\NstInpAdapter.hpp">
-      <Filter>Input</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\input\NstInpBandaiHyperShot.hpp">
-      <Filter>Input</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\input\NstInpBarcodeWorld.hpp">
-      <Filter>Input</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\input\NstInpCrazyClimber.hpp">
-      <Filter>Input</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\input\NstInpDevice.hpp">
-      <Filter>Input</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\input\NstInpDoremikkoKeyboard.hpp">
-      <Filter>Input</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\input\NstInpExcitingBoxing.hpp">
-      <Filter>Input</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\input\NstInpFamilyKeyboard.hpp">
-      <Filter>Input</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\input\NstInpFamilyTrainer.hpp">
-      <Filter>Input</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\input\NstInpHoriTrack.hpp">
-      <Filter>Input</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\input\NstInpKonamiHyperShot.hpp">
-      <Filter>Input</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\input\NstInpMahjong.hpp">
-      <Filter>Input</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\input\NstInpMouse.hpp">
-      <Filter>Input</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\input\NstInpOekaKidsTablet.hpp">
-      <Filter>Input</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\input\NstInpPachinko.hpp">
-      <Filter>Input</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\input\NstInpPad.hpp">
-      <Filter>Input</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\input\NstInpPaddle.hpp">
-      <Filter>Input</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\input\NstInpPartyTap.hpp">
-      <Filter>Input</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\input\NstInpPokkunMoguraa.hpp">
-      <Filter>Input</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\input\NstInpPowerGlove.hpp">
-      <Filter>Input</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\input\NstInpPowerPad.hpp">
-      <Filter>Input</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\input\NstInpRob.hpp">
-      <Filter>Input</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\input\NstInpSuborKeyboard.hpp">
-      <Filter>Input</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\input\NstInpTopRider.hpp">
-      <Filter>Input</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\input\NstInpTurboFile.hpp">
-      <Filter>Input</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\input\NstInpZapper.hpp">
-      <Filter>Input</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoard.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardAxRom.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBxRom.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardCxRom.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardDiscrete.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardDxRom.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardExRom.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardFxRom.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardGxRom.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardHxRom.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardJxRom.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardMmc1.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardMmc2.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardMmc3.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardMmc4.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardMmc5.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardMmc6.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardMxRom.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardNRom.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardNxRom.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardPxRom.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardSxRom.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardTxRom.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardUxRom.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardEvent.hpp">
-      <Filter>Board\Custom</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardFb.hpp">
-      <Filter>Board\Custom</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardFfe.hpp">
-      <Filter>Board\Custom</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardQj.hpp">
-      <Filter>Board\Custom</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardRumbleStation.hpp">
-      <Filter>Board\Custom</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardVsSystem.hpp">
-      <Filter>Board\Custom</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardZz.hpp">
-      <Filter>Board\Custom</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardAe.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardAgci.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardAve.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardAveD1012.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardAveNina.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBandai.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBandai24c0x.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBandaiAerobicsStudio.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBandaiDatach.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBandaiKaraokeStudio.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBandaiLz93d50.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBandaiLz93d50ex.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBandaiOekaKids.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBenshengBs5.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardCaltron.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardCamerica.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardCne.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardCneDecathlon.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardCnePsb.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardCneShlz.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardCony.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardDreamtech.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardFujiya.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardFukutake.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardFutureMedia.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardGouder.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardHenggedianzi.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardHes.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardHosenkan.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardIrem.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardIremG101.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardIremH3001.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardIremHolyDiver.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardIremKaiketsu.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardIremLrog017.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardJaleco.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardJalecoJf11.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardJalecoJf13.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardJalecoJf16.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardJalecoJf17.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardJalecoJf19.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardJalecoSs88006.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardJyCompany.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardKaiser.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardKasing.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardKay.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardKayH2288.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardKayPandaPrince.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardKonami.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardKonamiVrc1.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardKonamiVrc2.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardKonamiVrc3.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardKonamiVrc4.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardKonamiVrc6.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardKonamiVrc7.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardKonamiVsSystem.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardMagicSeries.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardNamcot.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardNamcot163.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardNamcot175.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardNamcot340.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardNamcot34xx.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardNanjing.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardNihon.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardNitra.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardNtdec.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardOpenCorp.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardRcm.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardRexSoft.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardRexSoftDb5z.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardRexSoftSl1632.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardSachen.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardSachen74x374.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardSachenS8259.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardSachenSa0036.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardSachenSa0037.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardSachenSa72007.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardSachenSa72008.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardSachenStreetHeroes.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardSachenTca01.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardSachenTcu.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardSomeriTeam.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardSomeriTeamSl12.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardSubor.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardSunsoft.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardSunsoft1.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardSunsoft2.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardSunsoft3.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardSunsoft4.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardSunsoft5b.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardSunsoftDcs.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardSunsoftFme7.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardSuperGame.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardSuperGameBoogerman.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardSuperGameLionKing.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardSuperGamePocahontas2.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardTaito.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardTaitoTc0190fmc.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardTaitoTc0190fmcPal16r4.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardTaitoX1005.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardTaitoX1017.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardTengen.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardTengenRambo1.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardTxc.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardTxcMxmdhtwo.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardTxcPoliceman.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardTxcTw.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardWaixing.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardWaixingFfv.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardWaixingPs2.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardWaixingSecurity.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardWaixingSgz.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardWaixingSgzlz.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardWaixingSh2.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardWaixingZs.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardWhirlwind.hpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmc110in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmc1200in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmc150in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmc15in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmc20in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmc21in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmc22Games.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmc31in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmc35in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmc36in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmc64in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmc72in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmc76in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmc800in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmc8157.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmc9999999in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcA65as.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcBallgames11in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcCh001.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcCtc65.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcFamily4646B.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcFk23c.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcGamestarA.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcGamestarB.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcGolden190in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcGoldenCard6in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcGoldenGame260in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcHero.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcMarioParty7in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcNovelDiamond.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcPowerjoy84in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcResetBased4in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcSuper22Games.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcSuper24in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcSuper40in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcSuper700in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcSuperBig7in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcSuperGun20in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcSuperHiK300in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcSuperHiK4in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcSuperVision16in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcT262.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcVrc4.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcVt5201.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmcY2k64in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBtl2708.hpp">
-      <Filter>Board\Btl</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBtl6035052.hpp">
-      <Filter>Board\Btl</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBtlAx5705.hpp">
-      <Filter>Board\Btl</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBtlDragonNinja.hpp">
-      <Filter>Board\Btl</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBtlGeniusMerioBros.hpp">
-      <Filter>Board\Btl</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBtlMarioBaby.hpp">
-      <Filter>Board\Btl</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBtlPikachuY2k.hpp">
-      <Filter>Board\Btl</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBtlShuiGuanPipe.hpp">
-      <Filter>Board\Btl</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBtlSmb2a.hpp">
-      <Filter>Board\Btl</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBtlSmb2b.hpp">
-      <Filter>Board\Btl</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBtlSmb2c.hpp">
-      <Filter>Board\Btl</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBtlSmb3.hpp">
-      <Filter>Board\Btl</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBtlSuperBros11.hpp">
-      <Filter>Board\Btl</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBtlT230.hpp">
-      <Filter>Board\Btl</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBtlTobidaseDaisakusen.hpp">
-      <Filter>Board\Btl</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardUnlA9746.hpp">
-      <Filter>Board\Unl</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardUnlCc21.hpp">
-      <Filter>Board\Unl</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardUnlEdu2000.hpp">
-      <Filter>Board\Unl</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardUnlKingOfFighters96.hpp">
-      <Filter>Board\Unl</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardUnlKingOfFighters97.hpp">
-      <Filter>Board\Unl</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardUnlMortalKombat2.hpp">
-      <Filter>Board\Unl</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardUnlN625092.hpp">
-      <Filter>Board\Unl</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardUnlSuperFighter3.hpp">
-      <Filter>Board\Unl</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardUnlTf1201.hpp">
-      <Filter>Board\Unl</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardUnlWorldHero.hpp">
-      <Filter>Board\Unl</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardUnlXzy.hpp">
-      <Filter>Board\Unl</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\NstApu.hpp" />
-    <ClInclude Include="..\source\core\NstAssert.hpp" />
-    <ClInclude Include="..\source\core\NstBarcodeReader.hpp" />
-    <ClInclude Include="..\source\core\NstBase.hpp" />
-    <ClInclude Include="..\source\core\NstCartridge.hpp" />
-    <ClInclude Include="..\source\core\NstCartridgeInes.hpp" />
-    <ClInclude Include="..\source\core\NstCartridgeRomset.hpp" />
-    <ClInclude Include="..\source\core\NstCartridgeUnif.hpp" />
-    <ClInclude Include="..\source\core\NstCheats.hpp" />
-    <ClInclude Include="..\source\core\NstChecksum.hpp" />
-    <ClInclude Include="..\source\core\NstChips.hpp" />
-    <ClInclude Include="..\source\core\NstCore.hpp" />
-    <ClInclude Include="..\source\core\NstCpu.hpp" />
-    <ClInclude Include="..\source\core\NstCrc32.hpp" />
-    <ClInclude Include="..\source\core\NstDipSwitches.hpp" />
-    <ClInclude Include="..\source\core\NstFds.hpp" />
-    <ClInclude Include="..\source\core\NstFile.hpp" />
-    <ClInclude Include="..\source\core\NstFpuPrecision.hpp" />
-    <ClInclude Include="..\source\core\NstHook.hpp" />
-    <ClInclude Include="..\source\core\NstImage.hpp" />
-    <ClInclude Include="..\source\core\NstImageDatabase.hpp" />
-    <ClInclude Include="..\source\core\NstIoAccessor.hpp" />
-    <ClInclude Include="..\source\core\NstIoLine.hpp" />
-    <ClInclude Include="..\source\core\NstIoMap.hpp" />
-    <ClInclude Include="..\source\core\NstIoPort.hpp" />
-    <ClInclude Include="..\source\core\NstLog.hpp" />
-    <ClInclude Include="..\source\core\NstMachine.hpp" />
-    <ClInclude Include="..\source\core\NstMemory.hpp" />
-    <ClInclude Include="..\source\core\NstNsf.hpp" />
-    <ClInclude Include="..\source\core\NstPatcher.hpp" />
-    <ClInclude Include="..\source\core\NstPatcherIps.hpp" />
-    <ClInclude Include="..\source\core\NstPatcherUps.hpp" />
-    <ClInclude Include="..\source\core\NstPins.hpp" />
-    <ClInclude Include="..\source\core\NstPpu.hpp" />
-    <ClInclude Include="..\source\core\NstProperties.hpp" />
-    <ClInclude Include="..\source\core\NstRam.hpp" />
-    <ClInclude Include="..\source\core\NstSha1.hpp" />
-    <ClInclude Include="..\source\core\NstSoundPcm.hpp" />
-    <ClInclude Include="..\source\core\NstSoundPlayer.hpp" />
-    <ClInclude Include="..\source\core\NstSoundRenderer.hpp" />
-    <ClInclude Include="..\source\core\NstState.hpp" />
-    <ClInclude Include="..\source\core\NstStream.hpp" />
-    <ClInclude Include="..\source\core\NstTimer.hpp" />
-    <ClInclude Include="..\source\core\NstTracker.hpp" />
-    <ClInclude Include="..\source\core\NstTrackerMovie.hpp" />
-    <ClInclude Include="..\source\core\NstTrackerRewinder.hpp" />
-    <ClInclude Include="..\source\core\NstVector.hpp" />
-    <ClInclude Include="..\source\core\NstVideoRenderer.hpp" />
-    <ClInclude Include="..\source\core\NstVideoScreen.hpp" />
-    <ClInclude Include="..\source\core\NstXml.hpp" />
-    <ClInclude Include="..\source\core\NstZlib.hpp" />
-    <ClInclude Include="..\source\core\NstVideoFilterxBR.hpp">
-      <Filter>VideoFilters</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardAcclaim.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardAcclaimMcAcc.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\NstHomebrew.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardAction53.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardInlNsf.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardMagicKidGoogoo.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardWaixingFs304.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardUnlMmc3BigPrgRom.hpp" />
-    <ClInclude Include="..\source\core\board\NstBoardUnl158b.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardUnlRetX7Gbl.hpp">
-      <Filter>Board</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardUnlFam250Schi24.hpp">
-      <Filter>Board\Unl</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmc120in1.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-    <ClInclude Include="..\source\core\board\NstBoardBmc60311c.hpp">
-      <Filter>Board\Bmc</Filter>
-    </ClInclude>
-  </ItemGroup>
-  <ItemGroup>
-    <ClCompile Include="..\source\core\api\NstApiBarcodeReader.cpp">
-      <Filter>Api</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\api\NstApiCartridge.cpp">
-      <Filter>Api</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\api\NstApiCheats.cpp">
-      <Filter>Api</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\api\NstApiDipSwitches.cpp">
-      <Filter>Api</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\api\NstApiEmulator.cpp">
-      <Filter>Api</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\api\NstApiFds.cpp">
-      <Filter>Api</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\api\NstApiInput.cpp">
-      <Filter>Api</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\api\NstApiMachine.cpp">
-      <Filter>Api</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\api\NstApiMovie.cpp">
-      <Filter>Api</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\api\NstApiNsf.cpp">
-      <Filter>Api</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\api\NstApiRewinder.cpp">
-      <Filter>Api</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\api\NstApiSound.cpp">
-      <Filter>Api</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\api\NstApiTapeRecorder.cpp">
-      <Filter>Api</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\api\NstApiUser.cpp">
-      <Filter>Api</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\api\NstApiVideo.cpp">
-      <Filter>Api</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\vssystem\NstVsRbiBaseball.cpp">
-      <Filter>VsSystem</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\vssystem\NstVsSuperXevious.cpp">
-      <Filter>VsSystem</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\vssystem\NstVsSystem.cpp">
-      <Filter>VsSystem</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\vssystem\NstVsTkoBoxing.cpp">
-      <Filter>VsSystem</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\NstVideoFilter2xSaI.cpp">
-      <Filter>VideoFilters</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\NstVideoFilterHqX.cpp">
-      <Filter>VideoFilters</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\NstVideoFilterNone.cpp">
-      <Filter>VideoFilters</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\NstVideoFilterNtsc.cpp">
-      <Filter>VideoFilters</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\NstVideoFilterNtscCfg.cpp">
-      <Filter>VideoFilters</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\NstVideoFilterScaleX.cpp">
-      <Filter>VideoFilters</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\input\NstInpAdapter.cpp">
-      <Filter>Input</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\input\NstInpBandaiHyperShot.cpp">
-      <Filter>Input</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\input\NstInpBarcodeWorld.cpp">
-      <Filter>Input</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\input\NstInpCrazyClimber.cpp">
-      <Filter>Input</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\input\NstInpDoremikkoKeyboard.cpp">
-      <Filter>Input</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\input\NstInpExcitingBoxing.cpp">
-      <Filter>Input</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\input\NstInpFamilyKeyboard.cpp">
-      <Filter>Input</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\input\NstInpFamilyTrainer.cpp">
-      <Filter>Input</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\input\NstInpHoriTrack.cpp">
-      <Filter>Input</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\input\NstInpKonamiHyperShot.cpp">
-      <Filter>Input</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\input\NstInpMahjong.cpp">
-      <Filter>Input</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\input\NstInpMouse.cpp">
-      <Filter>Input</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\input\NstInpOekaKidsTablet.cpp">
-      <Filter>Input</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\input\NstInpPachinko.cpp">
-      <Filter>Input</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\input\NstInpPad.cpp">
-      <Filter>Input</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\input\NstInpPaddle.cpp">
-      <Filter>Input</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\input\NstInpPartyTap.cpp">
-      <Filter>Input</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\input\NstInpPokkunMoguraa.cpp">
-      <Filter>Input</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\input\NstInpPowerGlove.cpp">
-      <Filter>Input</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\input\NstInpPowerPad.cpp">
-      <Filter>Input</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\input\NstInpRob.cpp">
-      <Filter>Input</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\input\NstInpSuborKeyboard.cpp">
-      <Filter>Input</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\input\NstInpTopRider.cpp">
-      <Filter>Input</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\input\NstInpTurboFile.cpp">
-      <Filter>Input</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\input\NstInpZapper.cpp">
-      <Filter>Input</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoard.cpp">
-      <Filter>Board</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardAxRom.cpp">
-      <Filter>Board</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBxRom.cpp">
-      <Filter>Board</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardCxRom.cpp">
-      <Filter>Board</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardDiscrete.cpp">
-      <Filter>Board</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardGxRom.cpp">
-      <Filter>Board</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardMmc1.cpp">
-      <Filter>Board</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardMmc2.cpp">
-      <Filter>Board</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardMmc3.cpp">
-      <Filter>Board</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardMmc4.cpp">
-      <Filter>Board</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardMmc5.cpp">
-      <Filter>Board</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardMmc6.cpp">
-      <Filter>Board</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardTxRom.cpp">
-      <Filter>Board</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardUxRom.cpp">
-      <Filter>Board</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardEvent.cpp">
-      <Filter>Board\Custom</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardFb.cpp">
-      <Filter>Board\Custom</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardFfe.cpp">
-      <Filter>Board\Custom</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardQj.cpp">
-      <Filter>Board\Custom</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardRumbleStation.cpp">
-      <Filter>Board\Custom</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardVsSystem.cpp">
-      <Filter>Board\Custom</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardZz.cpp">
-      <Filter>Board\Custom</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardAe.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardAgci.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardAveD1012.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardAveNina.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBandai24c0x.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBandaiAerobicsStudio.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBandaiDatach.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBandaiKaraokeStudio.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBandaiLz93d50.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBandaiLz93d50ex.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBandaiOekaKids.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBenshengBs5.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardCaltron.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardCamerica.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardCneDecathlon.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardCnePsb.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardCneShlz.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardCony.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardDreamtech.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardFujiya.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardFukutake.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardFutureMedia.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardGouder.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardHenggedianzi.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardHes.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardHosenkan.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardIremG101.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardIremH3001.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardIremHolyDiver.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardIremKaiketsu.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardIremLrog017.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardJalecoJf11.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardJalecoJf13.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardJalecoJf16.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardJalecoJf17.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardJalecoJf19.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardJalecoSs88006.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardJyCompany.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardKaiser.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardKasing.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardKayH2288.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardKayPandaPrince.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardKonamiVrc1.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardKonamiVrc2.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardKonamiVrc3.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardKonamiVrc4.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardKonamiVrc6.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardKonamiVrc7.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardKonamiVsSystem.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardMagicSeries.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardNamcot163.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardNamcot175.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardNamcot340.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardNamcot34xx.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardNanjing.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardNihon.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardNitra.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardNtdec.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardOpenCorp.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardRcm.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardRexSoftDb5z.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardRexSoftSl1632.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardSachen74x374.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardSachenS8259.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardSachenSa0036.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardSachenSa0037.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardSachenSa72007.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardSachenSa72008.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardSachenStreetHeroes.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardSachenTca01.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardSachenTcu.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardSomeriTeamSl12.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardSubor.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardSunsoft1.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardSunsoft2.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardSunsoft3.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardSunsoft4.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardSunsoft5b.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardSunsoftDcs.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardSunsoftFme7.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardSuperGameBoogerman.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardSuperGameLionKing.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardSuperGamePocahontas2.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardTaitoTc0190fmc.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardTaitoTc0190fmcPal16r4.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardTaitoX1005.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardTaitoX1017.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardTengen.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardTengenRambo1.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardTxc.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardTxcMxmdhtwo.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardTxcPoliceman.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardTxcTw.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardWaixing.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardWaixingFfv.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardWaixingPs2.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardWaixingSecurity.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardWaixingSgz.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardWaixingSgzlz.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardWaixingSh2.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardWaixingZs.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardWhirlwind.cpp">
-      <Filter>Board\3rdparty</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmc110in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmc1200in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmc150in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmc15in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmc20in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmc21in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmc22Games.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmc31in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmc35in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmc36in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmc64in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmc72in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmc76in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmc800in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmc8157.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmc9999999in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcA65as.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcBallgames11in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcCh001.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcCtc65.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcFamily4646B.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcFk23c.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcGamestarA.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcGamestarB.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcGolden190in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcGoldenCard6in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcGoldenGame260in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcHero.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcMarioParty7in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcNovelDiamond.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcPowerjoy84in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcResetBased4in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcSuper22Games.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcSuper24in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcSuper40in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcSuper700in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcSuperBig7in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcSuperGun20in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcSuperHiK300in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcSuperHiK4in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcSuperVision16in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcT262.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcVrc4.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcVt5201.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmcY2k64in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBtl2708.cpp">
-      <Filter>Board\Btl</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBtl6035052.cpp">
-      <Filter>Board\Btl</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBtlAx5705.cpp">
-      <Filter>Board\Btl</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBtlDragonNinja.cpp">
-      <Filter>Board\Btl</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBtlGeniusMerioBros.cpp">
-      <Filter>Board\Btl</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBtlMarioBaby.cpp">
-      <Filter>Board\Btl</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBtlPikachuY2k.cpp">
-      <Filter>Board\Btl</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBtlShuiGuanPipe.cpp">
-      <Filter>Board\Btl</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBtlSmb2a.cpp">
-      <Filter>Board\Btl</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBtlSmb2b.cpp">
-      <Filter>Board\Btl</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBtlSmb2c.cpp">
-      <Filter>Board\Btl</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBtlSmb3.cpp">
-      <Filter>Board\Btl</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBtlSuperBros11.cpp">
-      <Filter>Board\Btl</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBtlT230.cpp">
-      <Filter>Board\Btl</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBtlTobidaseDaisakusen.cpp">
-      <Filter>Board\Btl</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardUnlA9746.cpp">
-      <Filter>Board\Unl</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardUnlCc21.cpp">
-      <Filter>Board\Unl</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardUnlEdu2000.cpp">
-      <Filter>Board\Unl</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardUnlKingOfFighters96.cpp">
-      <Filter>Board\Unl</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardUnlKingOfFighters97.cpp">
-      <Filter>Board\Unl</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardUnlMortalKombat2.cpp">
-      <Filter>Board\Unl</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardUnlN625092.cpp">
-      <Filter>Board\Unl</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardUnlSuperFighter3.cpp">
-      <Filter>Board\Unl</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardUnlTf1201.cpp">
-      <Filter>Board\Unl</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardUnlWorldHero.cpp">
-      <Filter>Board\Unl</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardUnlXzy.cpp">
-      <Filter>Board\Unl</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\NstApu.cpp" />
-    <ClCompile Include="..\source\core\NstAssert.cpp" />
-    <ClCompile Include="..\source\core\NstCartridge.cpp" />
-    <ClCompile Include="..\source\core\NstCartridgeInes.cpp" />
-    <ClCompile Include="..\source\core\NstCartridgeRomset.cpp" />
-    <ClCompile Include="..\source\core\NstCartridgeUnif.cpp" />
-    <ClCompile Include="..\source\core\NstCheats.cpp" />
-    <ClCompile Include="..\source\core\NstChecksum.cpp" />
-    <ClCompile Include="..\source\core\NstChips.cpp" />
-    <ClCompile Include="..\source\core\NstCore.cpp" />
-    <ClCompile Include="..\source\core\NstCpu.cpp" />
-    <ClCompile Include="..\source\core\NstCrc32.cpp" />
-    <ClCompile Include="..\source\core\NstFds.cpp" />
-    <ClCompile Include="..\source\core\NstFile.cpp" />
-    <ClCompile Include="..\source\core\NstImage.cpp" />
-    <ClCompile Include="..\source\core\NstImageDatabase.cpp" />
-    <ClCompile Include="..\source\core\NstLog.cpp" />
-    <ClCompile Include="..\source\core\NstMachine.cpp" />
-    <ClCompile Include="..\source\core\NstMemory.cpp" />
-    <ClCompile Include="..\source\core\NstNsf.cpp" />
-    <ClCompile Include="..\source\core\NstPatcher.cpp" />
-    <ClCompile Include="..\source\core\NstPatcherIps.cpp" />
-    <ClCompile Include="..\source\core\NstPatcherUps.cpp" />
-    <ClCompile Include="..\source\core\NstPins.cpp" />
-    <ClCompile Include="..\source\core\NstPpu.cpp" />
-    <ClCompile Include="..\source\core\NstProperties.cpp" />
-    <ClCompile Include="..\source\core\NstRam.cpp" />
-    <ClCompile Include="..\source\core\NstSha1.cpp" />
-    <ClCompile Include="..\source\core\NstSoundPcm.cpp" />
-    <ClCompile Include="..\source\core\NstSoundPlayer.cpp" />
-    <ClCompile Include="..\source\core\NstSoundRenderer.cpp" />
-    <ClCompile Include="..\source\core\NstState.cpp" />
-    <ClCompile Include="..\source\core\NstStream.cpp" />
-    <ClCompile Include="..\source\core\NstTracker.cpp" />
-    <ClCompile Include="..\source\core\NstTrackerMovie.cpp" />
-    <ClCompile Include="..\source\core\NstTrackerRewinder.cpp" />
-    <ClCompile Include="..\source\core\NstVector.cpp" />
-    <ClCompile Include="..\source\core\NstVideoRenderer.cpp" />
-    <ClCompile Include="..\source\core\NstVideoScreen.cpp" />
-    <ClCompile Include="..\source\core\NstXml.cpp" />
-    <ClCompile Include="..\source\core\NstZlib.cpp" />
-    <ClCompile Include="..\source\core\NstVideoFilterxBR.cpp">
-      <Filter>VideoFilters</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardAcclaimMcAcc.cpp">
-      <Filter>Board</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\NstHomebrew.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardAction53.cpp">
-      <Filter>Board</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardInlNsf.cpp">
-      <Filter>Board</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardMagicKidGoogoo.cpp">
-      <Filter>Board</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardWaixingFs304.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardUnlMmc3BigPrgRom.cpp" />
-    <ClCompile Include="..\source\core\board\NstBoardUnl158b.cpp">
-      <Filter>Board</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardUnlRetX7Gbl.cpp">
-      <Filter>Board</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardUnlFam250Schi24.cpp">
-      <Filter>Board\Unl</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmc120in1.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-    <ClCompile Include="..\source\core\board\NstBoardBmc60311c.cpp">
-      <Filter>Board\Bmc</Filter>
-    </ClCompile>
-  </ItemGroup>
-  <ItemGroup>
-    <None Include="..\source\core\NstVideoFilterHq2x.inl">
-      <Filter>VideoFilters</Filter>
-    </None>
-    <None Include="..\source\core\NstVideoFilterHq3x.inl">
-      <Filter>VideoFilters</Filter>
-    </None>
-    <None Include="..\source\core\NstVideoFilterHq4x.inl">
-      <Filter>VideoFilters</Filter>
-    </None>
-    <None Include="..\source\nes_ntsc\nes_ntsc.inl">
-      <Filter>VideoFilters\nes_ntsc</Filter>
-    </None>
-    <None Include="..\source\core\NstSoundRenderer.inl" />
-  </ItemGroup>
+ï»¿<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <ItemGroup>
+    <Filter Include="Api">
+      <UniqueIdentifier>{b355513c-0a44-4b8a-bd2e-e6c58ed616b1}</UniqueIdentifier>
+    </Filter>
+    <Filter Include="VsSystem">
+      <UniqueIdentifier>{8c88ca9e-ae43-4c00-9abd-1a84ab83b2be}</UniqueIdentifier>
+    </Filter>
+    <Filter Include="VideoFilters">
+      <UniqueIdentifier>{2a5c4b59-8138-4e72-bc55-5d56b5bb4397}</UniqueIdentifier>
+    </Filter>
+    <Filter Include="VideoFilters\nes_ntsc">
+      <UniqueIdentifier>{efa1a91d-b937-42f2-8425-8c0c062f610c}</UniqueIdentifier>
+    </Filter>
+    <Filter Include="Input">
+      <UniqueIdentifier>{bed4c530-d8c7-4010-aa7b-a98603f6b8ee}</UniqueIdentifier>
+    </Filter>
+    <Filter Include="Board">
+      <UniqueIdentifier>{0147b3b3-220e-44d1-9700-7ebaddfcbc56}</UniqueIdentifier>
+    </Filter>
+    <Filter Include="Board\Custom">
+      <UniqueIdentifier>{5a75e4c8-5f01-4ad6-bb5e-5414f77c59cf}</UniqueIdentifier>
+    </Filter>
+    <Filter Include="Board\3rdparty">
+      <UniqueIdentifier>{6a86ab7f-2634-4e57-b61f-2d1de4be9b71}</UniqueIdentifier>
+    </Filter>
+    <Filter Include="Board\Bmc">
+      <UniqueIdentifier>{77bd0d24-84dd-4806-8f84-4c27eac59c7d}</UniqueIdentifier>
+    </Filter>
+    <Filter Include="Board\Btl">
+      <UniqueIdentifier>{aecea58e-db9d-43b4-8460-2ce6a006a029}</UniqueIdentifier>
+    </Filter>
+    <Filter Include="Board\Unl">
+      <UniqueIdentifier>{fb11b05b-f38a-43e7-be3b-38e60bed92b9}</UniqueIdentifier>
+    </Filter>
+  </ItemGroup>
+  <ItemGroup>
+    <ClInclude Include="..\source\core\api\NstApi.hpp">
+      <Filter>Api</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\api\NstApiBarcodeReader.hpp">
+      <Filter>Api</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\api\NstApiCartridge.hpp">
+      <Filter>Api</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\api\NstApiCheats.hpp">
+      <Filter>Api</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\api\NstApiConfig.hpp">
+      <Filter>Api</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\api\NstApiDipSwitches.hpp">
+      <Filter>Api</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\api\NstApiEmulator.hpp">
+      <Filter>Api</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\api\NstApiFds.hpp">
+      <Filter>Api</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\api\NstApiInput.hpp">
+      <Filter>Api</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\api\NstApiMachine.hpp">
+      <Filter>Api</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\api\NstApiMovie.hpp">
+      <Filter>Api</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\api\NstApiNsf.hpp">
+      <Filter>Api</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\api\NstApiRewinder.hpp">
+      <Filter>Api</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\api\NstApiSound.hpp">
+      <Filter>Api</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\api\NstApiTapeRecorder.hpp">
+      <Filter>Api</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\api\NstApiUser.hpp">
+      <Filter>Api</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\api\NstApiVideo.hpp">
+      <Filter>Api</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\vssystem\NstVsRbiBaseball.hpp">
+      <Filter>VsSystem</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\vssystem\NstVsSuperXevious.hpp">
+      <Filter>VsSystem</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\vssystem\NstVsSystem.hpp">
+      <Filter>VsSystem</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\vssystem\NstVsTkoBoxing.hpp">
+      <Filter>VsSystem</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\NstVideoFilter2xSaI.hpp">
+      <Filter>VideoFilters</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\NstVideoFilterHqX.hpp">
+      <Filter>VideoFilters</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\NstVideoFilterNone.hpp">
+      <Filter>VideoFilters</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\NstVideoFilterNtsc.hpp">
+      <Filter>VideoFilters</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\NstVideoFilterScaleX.hpp">
+      <Filter>VideoFilters</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\nes_ntsc\nes_ntsc.h">
+      <Filter>VideoFilters\nes_ntsc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\nes_ntsc\nes_ntsc_config.h">
+      <Filter>VideoFilters\nes_ntsc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\nes_ntsc\nes_ntsc_impl.h">
+      <Filter>VideoFilters\nes_ntsc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\input\NstInpAdapter.hpp">
+      <Filter>Input</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\input\NstInpBandaiHyperShot.hpp">
+      <Filter>Input</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\input\NstInpBarcodeWorld.hpp">
+      <Filter>Input</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\input\NstInpCrazyClimber.hpp">
+      <Filter>Input</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\input\NstInpDevice.hpp">
+      <Filter>Input</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\input\NstInpDoremikkoKeyboard.hpp">
+      <Filter>Input</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\input\NstInpExcitingBoxing.hpp">
+      <Filter>Input</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\input\NstInpFamilyKeyboard.hpp">
+      <Filter>Input</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\input\NstInpFamilyTrainer.hpp">
+      <Filter>Input</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\input\NstInpHoriTrack.hpp">
+      <Filter>Input</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\input\NstInpKonamiHyperShot.hpp">
+      <Filter>Input</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\input\NstInpMahjong.hpp">
+      <Filter>Input</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\input\NstInpMouse.hpp">
+      <Filter>Input</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\input\NstInpOekaKidsTablet.hpp">
+      <Filter>Input</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\input\NstInpPachinko.hpp">
+      <Filter>Input</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\input\NstInpPad.hpp">
+      <Filter>Input</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\input\NstInpPaddle.hpp">
+      <Filter>Input</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\input\NstInpPartyTap.hpp">
+      <Filter>Input</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\input\NstInpPokkunMoguraa.hpp">
+      <Filter>Input</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\input\NstInpPowerGlove.hpp">
+      <Filter>Input</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\input\NstInpPowerPad.hpp">
+      <Filter>Input</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\input\NstInpRob.hpp">
+      <Filter>Input</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\input\NstInpSuborKeyboard.hpp">
+      <Filter>Input</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\input\NstInpTopRider.hpp">
+      <Filter>Input</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\input\NstInpTurboFile.hpp">
+      <Filter>Input</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\input\NstInpZapper.hpp">
+      <Filter>Input</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoard.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardAxRom.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBxRom.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardCxRom.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardDiscrete.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardDxRom.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardExRom.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardFxRom.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardGxRom.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardHxRom.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardJxRom.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardMmc1.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardMmc2.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardMmc3.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardMmc4.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardMmc5.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardMmc6.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardMxRom.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardNRom.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardNxRom.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardPxRom.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardSxRom.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardTxRom.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardUxRom.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardEvent.hpp">
+      <Filter>Board\Custom</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardFb.hpp">
+      <Filter>Board\Custom</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardFfe.hpp">
+      <Filter>Board\Custom</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardQj.hpp">
+      <Filter>Board\Custom</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardRumbleStation.hpp">
+      <Filter>Board\Custom</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardVsSystem.hpp">
+      <Filter>Board\Custom</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardZz.hpp">
+      <Filter>Board\Custom</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardAe.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardAgci.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardAve.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardAveD1012.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardAveNina.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBandai.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBandai24c0x.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBandaiAerobicsStudio.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBandaiDatach.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBandaiKaraokeStudio.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBandaiLz93d50.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBandaiLz93d50ex.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBandaiOekaKids.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBenshengBs5.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardCaltron.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardCamerica.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardCne.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardCneDecathlon.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardCnePsb.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardCneShlz.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardCony.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardDreamtech.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardFujiya.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardFukutake.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardFutureMedia.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardGouder.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardHenggedianzi.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardHes.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardHosenkan.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardIrem.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardIremG101.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardIremH3001.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardIremHolyDiver.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardIremKaiketsu.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardIremLrog017.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardJaleco.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardJalecoJf11.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardJalecoJf13.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardJalecoJf16.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardJalecoJf17.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardJalecoJf19.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardJalecoSs88006.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardJyCompany.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardKaiser.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardKasing.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardKay.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardKayH2288.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardKayPandaPrince.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardKonami.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardKonamiVrc1.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardKonamiVrc2.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardKonamiVrc3.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardKonamiVrc4.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardKonamiVrc6.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardKonamiVrc7.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardKonamiVsSystem.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardMagicSeries.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardNamcot.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardNamcot163.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardNamcot175.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardNamcot340.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardNamcot34xx.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardNanjing.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardNihon.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardNitra.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardNtdec.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardOpenCorp.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardRcm.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardRexSoft.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardRexSoftDb5z.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardRexSoftSl1632.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardSachen.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardSachen74x374.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardSachenS8259.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardSachenSa0036.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardSachenSa0037.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardSachenSa72007.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardSachenSa72008.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardSachenStreetHeroes.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardSachenTca01.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardSachenTcu.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardSomeriTeam.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardSomeriTeamSl12.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardSubor.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardSunsoft.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardSunsoft1.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardSunsoft2.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardSunsoft3.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardSunsoft4.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardSunsoft5b.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardSunsoftDcs.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardSunsoftFme7.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardSuperGame.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardSuperGameBoogerman.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardSuperGameLionKing.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardSuperGamePocahontas2.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardTaito.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardTaitoTc0190fmc.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardTaitoTc0190fmcPal16r4.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardTaitoX1005.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardTaitoX1017.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardTengen.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardTengenRambo1.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardTxc.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardTxcMxmdhtwo.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardTxcPoliceman.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardTxcTw.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardWaixing.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardWaixingFfv.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardWaixingPs2.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardWaixingSecurity.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardWaixingSgz.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardWaixingSgzlz.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardWaixingSh2.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardWaixingZs.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardWhirlwind.hpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmc110in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmc1200in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmc150in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmc15in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmc20in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmc21in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmc22Games.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmc31in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmc35in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmc36in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmc64in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmc72in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmc76in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmc800in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmc8157.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmc9999999in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcA65as.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcBallgames11in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcCh001.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcCtc65.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcFamily4646B.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcFk23c.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcGamestarA.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcGamestarB.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcGolden190in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcGoldenCard6in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcGoldenGame260in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcHero.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcMarioParty7in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcNovelDiamond.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcPowerjoy84in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcResetBased4in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcSuper22Games.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcSuper24in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcSuper40in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcSuper700in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcSuperBig7in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcSuperGun20in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcSuperHiK300in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcSuperHiK4in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcSuperVision16in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcT262.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcVrc4.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcVt5201.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmcY2k64in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBtl2708.hpp">
+      <Filter>Board\Btl</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBtl6035052.hpp">
+      <Filter>Board\Btl</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBtlAx5705.hpp">
+      <Filter>Board\Btl</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBtlDragonNinja.hpp">
+      <Filter>Board\Btl</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBtlGeniusMerioBros.hpp">
+      <Filter>Board\Btl</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBtlMarioBaby.hpp">
+      <Filter>Board\Btl</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBtlPikachuY2k.hpp">
+      <Filter>Board\Btl</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBtlShuiGuanPipe.hpp">
+      <Filter>Board\Btl</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBtlSmb2a.hpp">
+      <Filter>Board\Btl</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBtlSmb2b.hpp">
+      <Filter>Board\Btl</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBtlSmb2c.hpp">
+      <Filter>Board\Btl</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBtlSmb3.hpp">
+      <Filter>Board\Btl</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBtlSuperBros11.hpp">
+      <Filter>Board\Btl</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBtlT230.hpp">
+      <Filter>Board\Btl</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBtlTobidaseDaisakusen.hpp">
+      <Filter>Board\Btl</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardUnlA9746.hpp">
+      <Filter>Board\Unl</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardUnlCc21.hpp">
+      <Filter>Board\Unl</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardUnlEdu2000.hpp">
+      <Filter>Board\Unl</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardUnlKingOfFighters96.hpp">
+      <Filter>Board\Unl</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardUnlKingOfFighters97.hpp">
+      <Filter>Board\Unl</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardUnlMortalKombat2.hpp">
+      <Filter>Board\Unl</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardUnlN625092.hpp">
+      <Filter>Board\Unl</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardUnlSuperFighter3.hpp">
+      <Filter>Board\Unl</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardUnlTf1201.hpp">
+      <Filter>Board\Unl</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardUnlWorldHero.hpp">
+      <Filter>Board\Unl</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardUnlXzy.hpp">
+      <Filter>Board\Unl</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\NstApu.hpp" />
+    <ClInclude Include="..\source\core\NstAssert.hpp" />
+    <ClInclude Include="..\source\core\NstBarcodeReader.hpp" />
+    <ClInclude Include="..\source\core\NstBase.hpp" />
+    <ClInclude Include="..\source\core\NstCartridge.hpp" />
+    <ClInclude Include="..\source\core\NstCartridgeInes.hpp" />
+    <ClInclude Include="..\source\core\NstCartridgeRomset.hpp" />
+    <ClInclude Include="..\source\core\NstCartridgeUnif.hpp" />
+    <ClInclude Include="..\source\core\NstCheats.hpp" />
+    <ClInclude Include="..\source\core\NstChecksum.hpp" />
+    <ClInclude Include="..\source\core\NstChips.hpp" />
+    <ClInclude Include="..\source\core\NstCore.hpp" />
+    <ClInclude Include="..\source\core\NstCpu.hpp" />
+    <ClInclude Include="..\source\core\NstCrc32.hpp" />
+    <ClInclude Include="..\source\core\NstDipSwitches.hpp" />
+    <ClInclude Include="..\source\core\NstFds.hpp" />
+    <ClInclude Include="..\source\core\NstFile.hpp" />
+    <ClInclude Include="..\source\core\NstFpuPrecision.hpp" />
+    <ClInclude Include="..\source\core\NstHook.hpp" />
+    <ClInclude Include="..\source\core\NstImage.hpp" />
+    <ClInclude Include="..\source\core\NstImageDatabase.hpp" />
+    <ClInclude Include="..\source\core\NstIoAccessor.hpp" />
+    <ClInclude Include="..\source\core\NstIoLine.hpp" />
+    <ClInclude Include="..\source\core\NstIoMap.hpp" />
+    <ClInclude Include="..\source\core\NstIoPort.hpp" />
+    <ClInclude Include="..\source\core\NstLog.hpp" />
+    <ClInclude Include="..\source\core\NstMachine.hpp" />
+    <ClInclude Include="..\source\core\NstMemory.hpp" />
+    <ClInclude Include="..\source\core\NstNsf.hpp" />
+    <ClInclude Include="..\source\core\NstPatcher.hpp" />
+    <ClInclude Include="..\source\core\NstPatcherIps.hpp" />
+    <ClInclude Include="..\source\core\NstPatcherUps.hpp" />
+    <ClInclude Include="..\source\core\NstPins.hpp" />
+    <ClInclude Include="..\source\core\NstPpu.hpp" />
+    <ClInclude Include="..\source\core\NstProperties.hpp" />
+    <ClInclude Include="..\source\core\NstRam.hpp" />
+    <ClInclude Include="..\source\core\NstSha1.hpp" />
+    <ClInclude Include="..\source\core\NstSoundPcm.hpp" />
+    <ClInclude Include="..\source\core\NstSoundPlayer.hpp" />
+    <ClInclude Include="..\source\core\NstSoundRenderer.hpp" />
+    <ClInclude Include="..\source\core\NstState.hpp" />
+    <ClInclude Include="..\source\core\NstStream.hpp" />
+    <ClInclude Include="..\source\core\NstTimer.hpp" />
+    <ClInclude Include="..\source\core\NstTracker.hpp" />
+    <ClInclude Include="..\source\core\NstTrackerMovie.hpp" />
+    <ClInclude Include="..\source\core\NstTrackerRewinder.hpp" />
+    <ClInclude Include="..\source\core\NstVector.hpp" />
+    <ClInclude Include="..\source\core\NstVideoRenderer.hpp" />
+    <ClInclude Include="..\source\core\NstVideoScreen.hpp" />
+    <ClInclude Include="..\source\core\NstXml.hpp" />
+    <ClInclude Include="..\source\core\NstZlib.hpp" />
+    <ClInclude Include="..\source\core\NstVideoFilterxBR.hpp">
+      <Filter>VideoFilters</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardAcclaim.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardAcclaimMcAcc.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\NstHomebrew.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardAction53.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardInlNsf.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardMagicKidGoogoo.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardWaixingFs304.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardUnlMmc3BigPrgRom.hpp" />
+    <ClInclude Include="..\source\core\board\NstBoardUnl158b.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardUnlRetX7Gbl.hpp">
+      <Filter>Board</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardUnlFam250Schi24.hpp">
+      <Filter>Board\Unl</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmc120in1.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\board\NstBoardBmc60311c.hpp">
+      <Filter>Board\Bmc</Filter>
+    </ClInclude>
+    <ClInclude Include="..\source\core\NstRunTimer.hpp" />
+  </ItemGroup>
+  <ItemGroup>
+    <ClCompile Include="..\source\core\api\NstApiBarcodeReader.cpp">
+      <Filter>Api</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\api\NstApiCartridge.cpp">
+      <Filter>Api</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\api\NstApiCheats.cpp">
+      <Filter>Api</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\api\NstApiDipSwitches.cpp">
+      <Filter>Api</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\api\NstApiEmulator.cpp">
+      <Filter>Api</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\api\NstApiFds.cpp">
+      <Filter>Api</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\api\NstApiInput.cpp">
+      <Filter>Api</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\api\NstApiMachine.cpp">
+      <Filter>Api</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\api\NstApiMovie.cpp">
+      <Filter>Api</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\api\NstApiNsf.cpp">
+      <Filter>Api</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\api\NstApiRewinder.cpp">
+      <Filter>Api</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\api\NstApiSound.cpp">
+      <Filter>Api</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\api\NstApiTapeRecorder.cpp">
+      <Filter>Api</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\api\NstApiUser.cpp">
+      <Filter>Api</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\api\NstApiVideo.cpp">
+      <Filter>Api</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\vssystem\NstVsRbiBaseball.cpp">
+      <Filter>VsSystem</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\vssystem\NstVsSuperXevious.cpp">
+      <Filter>VsSystem</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\vssystem\NstVsSystem.cpp">
+      <Filter>VsSystem</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\vssystem\NstVsTkoBoxing.cpp">
+      <Filter>VsSystem</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\NstVideoFilter2xSaI.cpp">
+      <Filter>VideoFilters</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\NstVideoFilterHqX.cpp">
+      <Filter>VideoFilters</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\NstVideoFilterNone.cpp">
+      <Filter>VideoFilters</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\NstVideoFilterNtsc.cpp">
+      <Filter>VideoFilters</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\NstVideoFilterNtscCfg.cpp">
+      <Filter>VideoFilters</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\NstVideoFilterScaleX.cpp">
+      <Filter>VideoFilters</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\input\NstInpAdapter.cpp">
+      <Filter>Input</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\input\NstInpBandaiHyperShot.cpp">
+      <Filter>Input</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\input\NstInpBarcodeWorld.cpp">
+      <Filter>Input</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\input\NstInpCrazyClimber.cpp">
+      <Filter>Input</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\input\NstInpDoremikkoKeyboard.cpp">
+      <Filter>Input</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\input\NstInpExcitingBoxing.cpp">
+      <Filter>Input</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\input\NstInpFamilyKeyboard.cpp">
+      <Filter>Input</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\input\NstInpFamilyTrainer.cpp">
+      <Filter>Input</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\input\NstInpHoriTrack.cpp">
+      <Filter>Input</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\input\NstInpKonamiHyperShot.cpp">
+      <Filter>Input</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\input\NstInpMahjong.cpp">
+      <Filter>Input</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\input\NstInpMouse.cpp">
+      <Filter>Input</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\input\NstInpOekaKidsTablet.cpp">
+      <Filter>Input</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\input\NstInpPachinko.cpp">
+      <Filter>Input</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\input\NstInpPad.cpp">
+      <Filter>Input</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\input\NstInpPaddle.cpp">
+      <Filter>Input</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\input\NstInpPartyTap.cpp">
+      <Filter>Input</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\input\NstInpPokkunMoguraa.cpp">
+      <Filter>Input</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\input\NstInpPowerGlove.cpp">
+      <Filter>Input</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\input\NstInpPowerPad.cpp">
+      <Filter>Input</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\input\NstInpRob.cpp">
+      <Filter>Input</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\input\NstInpSuborKeyboard.cpp">
+      <Filter>Input</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\input\NstInpTopRider.cpp">
+      <Filter>Input</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\input\NstInpTurboFile.cpp">
+      <Filter>Input</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\input\NstInpZapper.cpp">
+      <Filter>Input</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoard.cpp">
+      <Filter>Board</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardAxRom.cpp">
+      <Filter>Board</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBxRom.cpp">
+      <Filter>Board</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardCxRom.cpp">
+      <Filter>Board</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardDiscrete.cpp">
+      <Filter>Board</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardGxRom.cpp">
+      <Filter>Board</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardMmc1.cpp">
+      <Filter>Board</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardMmc2.cpp">
+      <Filter>Board</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardMmc3.cpp">
+      <Filter>Board</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardMmc4.cpp">
+      <Filter>Board</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardMmc5.cpp">
+      <Filter>Board</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardMmc6.cpp">
+      <Filter>Board</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardTxRom.cpp">
+      <Filter>Board</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardUxRom.cpp">
+      <Filter>Board</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardEvent.cpp">
+      <Filter>Board\Custom</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardFb.cpp">
+      <Filter>Board\Custom</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardFfe.cpp">
+      <Filter>Board\Custom</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardQj.cpp">
+      <Filter>Board\Custom</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardRumbleStation.cpp">
+      <Filter>Board\Custom</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardVsSystem.cpp">
+      <Filter>Board\Custom</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardZz.cpp">
+      <Filter>Board\Custom</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardAe.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardAgci.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardAveD1012.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardAveNina.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBandai24c0x.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBandaiAerobicsStudio.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBandaiDatach.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBandaiKaraokeStudio.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBandaiLz93d50.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBandaiLz93d50ex.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBandaiOekaKids.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBenshengBs5.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardCaltron.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardCamerica.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardCneDecathlon.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardCnePsb.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardCneShlz.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardCony.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardDreamtech.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardFujiya.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardFukutake.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardFutureMedia.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardGouder.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardHenggedianzi.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardHes.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardHosenkan.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardIremG101.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardIremH3001.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardIremHolyDiver.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardIremKaiketsu.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardIremLrog017.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardJalecoJf11.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardJalecoJf13.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardJalecoJf16.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardJalecoJf17.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardJalecoJf19.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardJalecoSs88006.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardJyCompany.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardKaiser.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardKasing.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardKayH2288.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardKayPandaPrince.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardKonamiVrc1.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardKonamiVrc2.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardKonamiVrc3.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardKonamiVrc4.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardKonamiVrc6.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardKonamiVrc7.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardKonamiVsSystem.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardMagicSeries.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardNamcot163.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardNamcot175.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardNamcot340.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardNamcot34xx.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardNanjing.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardNihon.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardNitra.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardNtdec.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardOpenCorp.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardRcm.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardRexSoftDb5z.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardRexSoftSl1632.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardSachen74x374.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardSachenS8259.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardSachenSa0036.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardSachenSa0037.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardSachenSa72007.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardSachenSa72008.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardSachenStreetHeroes.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardSachenTca01.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardSachenTcu.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardSomeriTeamSl12.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardSubor.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardSunsoft1.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardSunsoft2.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardSunsoft3.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardSunsoft4.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardSunsoft5b.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardSunsoftDcs.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardSunsoftFme7.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardSuperGameBoogerman.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardSuperGameLionKing.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardSuperGamePocahontas2.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardTaitoTc0190fmc.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardTaitoTc0190fmcPal16r4.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardTaitoX1005.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardTaitoX1017.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardTengen.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardTengenRambo1.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardTxc.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardTxcMxmdhtwo.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardTxcPoliceman.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardTxcTw.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardWaixing.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardWaixingFfv.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardWaixingPs2.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardWaixingSecurity.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardWaixingSgz.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardWaixingSgzlz.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardWaixingSh2.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardWaixingZs.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardWhirlwind.cpp">
+      <Filter>Board\3rdparty</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmc110in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmc1200in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmc150in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmc15in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmc20in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmc21in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmc22Games.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmc31in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmc35in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmc36in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmc64in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmc72in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmc76in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmc800in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmc8157.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmc9999999in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcA65as.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcBallgames11in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcCh001.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcCtc65.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcFamily4646B.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcFk23c.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcGamestarA.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcGamestarB.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcGolden190in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcGoldenCard6in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcGoldenGame260in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcHero.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcMarioParty7in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcNovelDiamond.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcPowerjoy84in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcResetBased4in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcSuper22Games.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcSuper24in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcSuper40in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcSuper700in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcSuperBig7in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcSuperGun20in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcSuperHiK300in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcSuperHiK4in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcSuperVision16in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcT262.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcVrc4.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcVt5201.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmcY2k64in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBtl2708.cpp">
+      <Filter>Board\Btl</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBtl6035052.cpp">
+      <Filter>Board\Btl</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBtlAx5705.cpp">
+      <Filter>Board\Btl</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBtlDragonNinja.cpp">
+      <Filter>Board\Btl</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBtlGeniusMerioBros.cpp">
+      <Filter>Board\Btl</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBtlMarioBaby.cpp">
+      <Filter>Board\Btl</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBtlPikachuY2k.cpp">
+      <Filter>Board\Btl</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBtlShuiGuanPipe.cpp">
+      <Filter>Board\Btl</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBtlSmb2a.cpp">
+      <Filter>Board\Btl</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBtlSmb2b.cpp">
+      <Filter>Board\Btl</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBtlSmb2c.cpp">
+      <Filter>Board\Btl</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBtlSmb3.cpp">
+      <Filter>Board\Btl</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBtlSuperBros11.cpp">
+      <Filter>Board\Btl</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBtlT230.cpp">
+      <Filter>Board\Btl</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBtlTobidaseDaisakusen.cpp">
+      <Filter>Board\Btl</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardUnlA9746.cpp">
+      <Filter>Board\Unl</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardUnlCc21.cpp">
+      <Filter>Board\Unl</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardUnlEdu2000.cpp">
+      <Filter>Board\Unl</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardUnlKingOfFighters96.cpp">
+      <Filter>Board\Unl</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardUnlKingOfFighters97.cpp">
+      <Filter>Board\Unl</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardUnlMortalKombat2.cpp">
+      <Filter>Board\Unl</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardUnlN625092.cpp">
+      <Filter>Board\Unl</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardUnlSuperFighter3.cpp">
+      <Filter>Board\Unl</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardUnlTf1201.cpp">
+      <Filter>Board\Unl</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardUnlWorldHero.cpp">
+      <Filter>Board\Unl</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardUnlXzy.cpp">
+      <Filter>Board\Unl</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\NstApu.cpp" />
+    <ClCompile Include="..\source\core\NstAssert.cpp" />
+    <ClCompile Include="..\source\core\NstCartridge.cpp" />
+    <ClCompile Include="..\source\core\NstCartridgeInes.cpp" />
+    <ClCompile Include="..\source\core\NstCartridgeRomset.cpp" />
+    <ClCompile Include="..\source\core\NstCartridgeUnif.cpp" />
+    <ClCompile Include="..\source\core\NstCheats.cpp" />
+    <ClCompile Include="..\source\core\NstChecksum.cpp" />
+    <ClCompile Include="..\source\core\NstChips.cpp" />
+    <ClCompile Include="..\source\core\NstCore.cpp" />
+    <ClCompile Include="..\source\core\NstCpu.cpp" />
+    <ClCompile Include="..\source\core\NstCrc32.cpp" />
+    <ClCompile Include="..\source\core\NstFds.cpp" />
+    <ClCompile Include="..\source\core\NstFile.cpp" />
+    <ClCompile Include="..\source\core\NstImage.cpp" />
+    <ClCompile Include="..\source\core\NstImageDatabase.cpp" />
+    <ClCompile Include="..\source\core\NstLog.cpp" />
+    <ClCompile Include="..\source\core\NstMachine.cpp" />
+    <ClCompile Include="..\source\core\NstMemory.cpp" />
+    <ClCompile Include="..\source\core\NstNsf.cpp" />
+    <ClCompile Include="..\source\core\NstPatcher.cpp" />
+    <ClCompile Include="..\source\core\NstPatcherIps.cpp" />
+    <ClCompile Include="..\source\core\NstPatcherUps.cpp" />
+    <ClCompile Include="..\source\core\NstPins.cpp" />
+    <ClCompile Include="..\source\core\NstPpu.cpp" />
+    <ClCompile Include="..\source\core\NstProperties.cpp" />
+    <ClCompile Include="..\source\core\NstRam.cpp" />
+    <ClCompile Include="..\source\core\NstSha1.cpp" />
+    <ClCompile Include="..\source\core\NstSoundPcm.cpp" />
+    <ClCompile Include="..\source\core\NstSoundPlayer.cpp" />
+    <ClCompile Include="..\source\core\NstSoundRenderer.cpp" />
+    <ClCompile Include="..\source\core\NstState.cpp" />
+    <ClCompile Include="..\source\core\NstStream.cpp" />
+    <ClCompile Include="..\source\core\NstTracker.cpp" />
+    <ClCompile Include="..\source\core\NstTrackerMovie.cpp" />
+    <ClCompile Include="..\source\core\NstTrackerRewinder.cpp" />
+    <ClCompile Include="..\source\core\NstVector.cpp" />
+    <ClCompile Include="..\source\core\NstVideoRenderer.cpp" />
+    <ClCompile Include="..\source\core\NstVideoScreen.cpp" />
+    <ClCompile Include="..\source\core\NstXml.cpp" />
+    <ClCompile Include="..\source\core\NstZlib.cpp" />
+    <ClCompile Include="..\source\core\NstVideoFilterxBR.cpp">
+      <Filter>VideoFilters</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardAcclaimMcAcc.cpp">
+      <Filter>Board</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\NstHomebrew.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardAction53.cpp">
+      <Filter>Board</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardInlNsf.cpp">
+      <Filter>Board</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardMagicKidGoogoo.cpp">
+      <Filter>Board</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardWaixingFs304.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardUnlMmc3BigPrgRom.cpp" />
+    <ClCompile Include="..\source\core\board\NstBoardUnl158b.cpp">
+      <Filter>Board</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardUnlRetX7Gbl.cpp">
+      <Filter>Board</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardUnlFam250Schi24.cpp">
+      <Filter>Board\Unl</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmc120in1.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\board\NstBoardBmc60311c.cpp">
+      <Filter>Board\Bmc</Filter>
+    </ClCompile>
+    <ClCompile Include="..\source\core\NstRunTimer.cpp" />
+  </ItemGroup>
+  <ItemGroup>
+    <None Include="..\source\core\NstVideoFilterHq2x.inl">
+      <Filter>VideoFilters</Filter>
+    </None>
+    <None Include="..\source\core\NstVideoFilterHq3x.inl">
+      <Filter>VideoFilters</Filter>
+    </None>
+    <None Include="..\source\core\NstVideoFilterHq4x.inl">
+      <Filter>VideoFilters</Filter>
+    </None>
+    <None Include="..\source\nes_ntsc\nes_ntsc.inl">
+      <Filter>VideoFilters\nes_ntsc</Filter>
+    </None>
+    <None Include="..\source\core\NstSoundRenderer.inl" />
+  </ItemGroup>
 </Project>
\ No newline at end of file
diff --git a/source/core/NstMachine.cpp b/source/core/NstMachine.cpp
index 6b9fd86..7680c16 100644
--- a/source/core/NstMachine.cpp
+++ b/source/core/NstMachine.cpp
@@ -53,7 +53,8 @@ namespace Nes
 		cheats        (NULL),
 		homebrew      (NULL),
 		imageDatabase (NULL),
-		ppu           (cpu)
+		ppu           (cpu),
+		runTimer	  (&cpu)
 		{
 		}
 
@@ -253,6 +254,7 @@ namespace Nes
 
 				state &= ~uint(Api::Machine::ON);
 				frame = 0;
+				runTimer.Reset();
 
 				Api::Machine::eventCallback( Api::Machine::EVENT_POWER_OFF, result );
 			}
@@ -268,6 +270,7 @@ namespace Nes
 			try
 			{
 				frame = 0;
+				runTimer.Reset();
 				cpu.Reset( hard );
 
 				if (!(state & Api::Machine::SOUND))
@@ -525,6 +528,10 @@ namespace Nes
 				renderer.bgColor = ppu.output.bgColor;
 				
 				ppu.DrawInputDisplay(input->pad ? input->pad->buttons : 0, frame);
+				if (runTimer.IsValid()) {
+					ppu.DrawTimer(runTimer.GetTime(), true);
+					runTimer.UpdateTimer(); //state & Api::Machine::NTSC == REGION_NTSC
+				}
 
 				if (video)
 					renderer.Blit( *video, ppu.GetScreen(), ppu.GetBurstPhase() );
@@ -538,6 +545,7 @@ namespace Nes
 				expPort->EndFrame();
 
 				frame++;
+				
 			}
 			else
 			{
diff --git a/source/core/NstMachine.hpp b/source/core/NstMachine.hpp
index cc47311..daa7cb6 100644
--- a/source/core/NstMachine.hpp
+++ b/source/core/NstMachine.hpp
@@ -31,6 +31,7 @@
 #include "NstPpu.hpp"
 #include "NstTracker.hpp"
 #include "NstVideoRenderer.hpp"
+#include "NstRunTimer.hpp"
 
 #ifdef NST_PRAGMA_ONCE
 #pragma once
@@ -123,7 +124,9 @@ namespace Nes
 
 			uint state;
 			dword frame;
-
+			double time;
+			bool timerRunning;
+			
 		public:
 			Cpu cpu;
 			Input::Adapter* extPort;
@@ -135,6 +138,7 @@ namespace Nes
 			Tracker tracker;
 			Ppu ppu;
 			Video::Renderer renderer;
+			RunTimer runTimer;
 
 			uint Is(uint a) const
 			{
diff --git a/source/core/NstPpu.cpp b/source/core/NstPpu.cpp
index 1589499..540c687 100644
--- a/source/core/NstPpu.cpp
+++ b/source/core/NstPpu.cpp
@@ -27,71 +27,63 @@
 #include "NstPpu.hpp"
 #include "NstState.hpp"
 #include <stdlib.h>
+#include <cmath>
 
 namespace Nes
 {
 	namespace Core
 	{
-		#ifdef NST_MSVC_OPTIMIZE
-		#pragma optimize("s", on)
-		#endif
+#ifdef NST_MSVC_OPTIMIZE
+#pragma optimize("s", on)
+#endif
 
 		const byte Ppu::yuvMaps[4][0x40] =
-		{
-			{
-				0x35, 0x23, 0x16, 0x22, 0x1C, 0x09, 0x2D, 0x15,
-				0x20, 0x00, 0x27, 0x05, 0x04, 0x28, 0x08, 0x20,
-				0x21, 0x27, 0x07, 0x29, 0x3C, 0x32, 0x36, 0x12,
-				0x28, 0x2B, 0x0D, 0x08, 0x10, 0x3D, 0x24, 0x01,
-				0x01, 0x31, 0x33, 0x2A, 0x2C, 0x0C, 0x1B, 0x14,
-				0x0D, 0x07, 0x34, 0x06, 0x13, 0x02, 0x26, 0x0D,
-				0x0D, 0x19, 0x10, 0x0A, 0x39, 0x03, 0x37, 0x17,
-				0x09, 0x11, 0x1A, 0x1D, 0x38, 0x25, 0x18, 0x3A
-			},
-			{
-				0x0D, 0x27, 0x18, 0x39, 0x3A, 0x25, 0x1C, 0x31,
-				0x16, 0x13, 0x38, 0x34, 0x20, 0x23, 0x3C, 0x1A,
-				0x09, 0x21, 0x06, 0x10, 0x1B, 0x29, 0x08, 0x22,
-				0x2D, 0x24, 0x01, 0x2B, 0x32, 0x08, 0x0D, 0x03,
-				0x04, 0x36, 0x26, 0x33, 0x11, 0x07, 0x10, 0x02,
-				0x14, 0x28, 0x00, 0x09, 0x12, 0x0D, 0x28, 0x20,
-				0x27, 0x1D, 0x2A, 0x17, 0x0C, 0x01, 0x15, 0x19,
-				0x0D, 0x2C, 0x07, 0x37, 0x35, 0x05, 0x0A, 0x3D
-			},
-			{
-				0x14, 0x25, 0x3A, 0x10, 0x1A, 0x20, 0x31, 0x09,
-				0x01, 0x0D, 0x36, 0x08, 0x15, 0x10, 0x27, 0x3C,
-				0x22, 0x1C, 0x05, 0x12, 0x19, 0x18, 0x17, 0x1B,
-				0x00, 0x03, 0x0D, 0x02, 0x16, 0x06, 0x34, 0x35,
-				0x23, 0x09, 0x01, 0x37, 0x1D, 0x27, 0x26, 0x20,
-				0x29, 0x04, 0x21, 0x24, 0x11, 0x3D, 0x0D, 0x07,
-				0x2C, 0x08, 0x39, 0x33, 0x07, 0x2A, 0x28, 0x2D,
-				0x0A, 0x0D, 0x32, 0x38, 0x13, 0x2B, 0x28, 0x0C
-			},
 			{
-				0x18, 0x03, 0x1C, 0x28, 0x0D, 0x35, 0x01, 0x17,
-				0x10, 0x07, 0x2A, 0x01, 0x36, 0x37, 0x1A, 0x39,
-				0x25, 0x08, 0x12, 0x34, 0x0D, 0x2D, 0x06, 0x26,
-				0x27, 0x1B, 0x22, 0x19, 0x04, 0x0D, 0x3A, 0x21,
-				0x05, 0x0A, 0x07, 0x02, 0x13, 0x14, 0x00, 0x15,
-				0x0C, 0x10, 0x11, 0x09, 0x1D, 0x38, 0x3D, 0x24,
-				0x33, 0x20, 0x08, 0x16, 0x28, 0x2B, 0x20, 0x3C,
-				0x0D, 0x27, 0x23, 0x31, 0x29, 0x32, 0x2C, 0x09
-			}
-		};
+				{0x35, 0x23, 0x16, 0x22, 0x1C, 0x09, 0x2D, 0x15,
+				 0x20, 0x00, 0x27, 0x05, 0x04, 0x28, 0x08, 0x20,
+				 0x21, 0x27, 0x07, 0x29, 0x3C, 0x32, 0x36, 0x12,
+				 0x28, 0x2B, 0x0D, 0x08, 0x10, 0x3D, 0x24, 0x01,
+				 0x01, 0x31, 0x33, 0x2A, 0x2C, 0x0C, 0x1B, 0x14,
+				 0x0D, 0x07, 0x34, 0x06, 0x13, 0x02, 0x26, 0x0D,
+				 0x0D, 0x19, 0x10, 0x0A, 0x39, 0x03, 0x37, 0x17,
+				 0x09, 0x11, 0x1A, 0x1D, 0x38, 0x25, 0x18, 0x3A},
+				{0x0D, 0x27, 0x18, 0x39, 0x3A, 0x25, 0x1C, 0x31,
+				 0x16, 0x13, 0x38, 0x34, 0x20, 0x23, 0x3C, 0x1A,
+				 0x09, 0x21, 0x06, 0x10, 0x1B, 0x29, 0x08, 0x22,
+				 0x2D, 0x24, 0x01, 0x2B, 0x32, 0x08, 0x0D, 0x03,
+				 0x04, 0x36, 0x26, 0x33, 0x11, 0x07, 0x10, 0x02,
+				 0x14, 0x28, 0x00, 0x09, 0x12, 0x0D, 0x28, 0x20,
+				 0x27, 0x1D, 0x2A, 0x17, 0x0C, 0x01, 0x15, 0x19,
+				 0x0D, 0x2C, 0x07, 0x37, 0x35, 0x05, 0x0A, 0x3D},
+				{0x14, 0x25, 0x3A, 0x10, 0x1A, 0x20, 0x31, 0x09,
+				 0x01, 0x0D, 0x36, 0x08, 0x15, 0x10, 0x27, 0x3C,
+				 0x22, 0x1C, 0x05, 0x12, 0x19, 0x18, 0x17, 0x1B,
+				 0x00, 0x03, 0x0D, 0x02, 0x16, 0x06, 0x34, 0x35,
+				 0x23, 0x09, 0x01, 0x37, 0x1D, 0x27, 0x26, 0x20,
+				 0x29, 0x04, 0x21, 0x24, 0x11, 0x3D, 0x0D, 0x07,
+				 0x2C, 0x08, 0x39, 0x33, 0x07, 0x2A, 0x28, 0x2D,
+				 0x0A, 0x0D, 0x32, 0x38, 0x13, 0x2B, 0x28, 0x0C},
+				{0x18, 0x03, 0x1C, 0x28, 0x0D, 0x35, 0x01, 0x17,
+				 0x10, 0x07, 0x2A, 0x01, 0x36, 0x37, 0x1A, 0x39,
+				 0x25, 0x08, 0x12, 0x34, 0x0D, 0x2D, 0x06, 0x26,
+				 0x27, 0x1B, 0x22, 0x19, 0x04, 0x0D, 0x3A, 0x21,
+				 0x05, 0x0A, 0x07, 0x02, 0x13, 0x14, 0x00, 0x15,
+				 0x0C, 0x10, 0x11, 0x09, 0x1D, 0x38, 0x3D, 0x24,
+				 0x33, 0x20, 0x08, 0x16, 0x28, 0x2B, 0x20, 0x3C,
+				 0x0D, 0x27, 0x23, 0x31, 0x29, 0x32, 0x2C, 0x09}};
 
 		Ppu::Tiles::Tiles()
-		: padding0(0), padding1(0) {}
+			: padding0(0), padding1(0) {}
 
 		Ppu::Oam::Oam()
-		: limit(buffer + STD_LINE_SPRITES*4), spriteLimit(true) {}
+			: limit(buffer + STD_LINE_SPRITES * 4), spriteLimit(true) {}
 
-		Ppu::Output::Output(Video::Screen::Pixel* p)
-		: pixels(p) {}
+		Ppu::Output::Output(Video::Screen::Pixel *p)
+			: pixels(p) {}
 
 		Ppu::TileLut::TileLut()
 		{
-			for (uint i=0; i < 0x400; ++i)
+			for (uint i = 0; i < 0x400; ++i)
 			{
 				block[i][0] = (i & 0xC0) ? (i >> 6 & 0xC) | (i >> 6 & 0x3) : 0;
 				block[i][1] = (i & 0x30) ? (i >> 6 & 0xC) | (i >> 4 & 0x3) : 0;
@@ -115,70 +106,69 @@ namespace Nes
 
 		void Ppu::PowerOff()
 		{
-			Reset( true, false, false );
+			Reset(true, false, false);
 		}
 
-		void Ppu::Reset(bool hard,bool acknowledged)
+		void Ppu::Reset(bool hard, bool acknowledged)
 		{
-			Reset( hard, acknowledged, true );
+			Reset(hard, acknowledged, true);
 		}
 
-		void Ppu::Reset(const bool hard,const bool acknowledged,const bool map)
+		void Ppu::Reset(const bool hard, const bool acknowledged, const bool map)
 		{
 			if (map)
 			{
-				for (uint i=0x2000; i < 0x4000; i += 0x8)
+				for (uint i = 0x2000; i < 0x4000; i += 0x8)
 				{
-					cpu.Map( i+0 ).Set( this, i != 0x3000 ? &Ppu::Peek_2xxx : &Ppu::Peek_3000, &Ppu::Poke_2000 );
-					cpu.Map( i+1 ).Set( this,               &Ppu::Peek_2xxx,                   &Ppu::Poke_2001 );
-					cpu.Map( i+2 ).Set( this,               &Ppu::Peek_2002,                   &Ppu::Poke_2xxx );
-					cpu.Map( i+3 ).Set( this,               &Ppu::Peek_2xxx,                   &Ppu::Poke_2003 );
-					cpu.Map( i+4 ).Set( this,               &Ppu::Peek_2004,                   &Ppu::Poke_2004 );
-					cpu.Map( i+5 ).Set( this,               &Ppu::Peek_2xxx,                   &Ppu::Poke_2005 );
-					cpu.Map( i+6 ).Set( this,               &Ppu::Peek_2xxx,                   &Ppu::Poke_2006 );
-					cpu.Map( i+7 ).Set( this,               &Ppu::Peek_2007,                   &Ppu::Poke_2007 );
+					cpu.Map(i + 0).Set(this, i != 0x3000 ? &Ppu::Peek_2xxx : &Ppu::Peek_3000, &Ppu::Poke_2000);
+					cpu.Map(i + 1).Set(this, &Ppu::Peek_2xxx, &Ppu::Poke_2001);
+					cpu.Map(i + 2).Set(this, &Ppu::Peek_2002, &Ppu::Poke_2xxx);
+					cpu.Map(i + 3).Set(this, &Ppu::Peek_2xxx, &Ppu::Poke_2003);
+					cpu.Map(i + 4).Set(this, &Ppu::Peek_2004, &Ppu::Poke_2004);
+					cpu.Map(i + 5).Set(this, &Ppu::Peek_2xxx, &Ppu::Poke_2005);
+					cpu.Map(i + 6).Set(this, &Ppu::Peek_2xxx, &Ppu::Poke_2006);
+					cpu.Map(i + 7).Set(this, &Ppu::Peek_2007, &Ppu::Poke_2007);
 				}
 
 				if (model == PPU_RC2C05_01 || model == PPU_RC2C05_04)
 				{
-					for (uint i=0x2002; i < 0x4000; i += 0x8)
-						cpu.Map( i ).Set( &Ppu::Peek_2002_RC2C05_01_04 );
+					for (uint i = 0x2002; i < 0x4000; i += 0x8)
+						cpu.Map(i).Set(&Ppu::Peek_2002_RC2C05_01_04);
 				}
 				else if (model == PPU_RC2C05_02)
 				{
-					for (uint i=0x2002; i < 0x4000; i += 0x8)
-						cpu.Map( i ).Set( &Ppu::Peek_2002_RC2C05_02 );
+					for (uint i = 0x2002; i < 0x4000; i += 0x8)
+						cpu.Map(i).Set(&Ppu::Peek_2002_RC2C05_02);
 				}
 				else if (model == PPU_RC2C05_03)
 				{
-					for (uint i=0x2002; i < 0x4000; i += 0x8)
-						cpu.Map( i ).Set( &Ppu::Peek_2002_RC2C05_03 );
+					for (uint i = 0x2002; i < 0x4000; i += 0x8)
+						cpu.Map(i).Set(&Ppu::Peek_2002_RC2C05_03);
 				}
 				else if (model == PPU_RC2C05_05)
 				{
-					for (uint i=0x2000; i < 0x4000; i += 0x8)
+					for (uint i = 0x2000; i < 0x4000; i += 0x8)
 					{
-						cpu.Map( i+0 ).Set( &Ppu::Poke_2001 );
-						cpu.Map( i+1 ).Set( &Ppu::Poke_2000 );
+						cpu.Map(i + 0).Set(&Ppu::Poke_2001);
+						cpu.Map(i + 1).Set(&Ppu::Poke_2000);
 					}
 				}
 
-				cpu.Map( 0x4014U ).Set( this, &Ppu::Peek_4014, &Ppu::Poke_4014 );
+				cpu.Map(0x4014U).Set(this, &Ppu::Peek_4014, &Ppu::Poke_4014);
 			}
 
 			if (hard)
 			{
 				static const byte powerUpPalette[] =
-				{
-					0x09,0x01,0x00,0x01,0x00,0x02,0x02,0x0D,
-					0x08,0x10,0x08,0x24,0x00,0x00,0x04,0x2C,
-					0x09,0x01,0x34,0x03,0x00,0x04,0x00,0x14,
-					0x08,0x3A,0x00,0x02,0x00,0x20,0x2C,0x08
-				};
+					{
+						0x09, 0x01, 0x00, 0x01, 0x00, 0x02, 0x02, 0x0D,
+						0x08, 0x10, 0x08, 0x24, 0x00, 0x00, 0x04, 0x2C,
+						0x09, 0x01, 0x34, 0x03, 0x00, 0x04, 0x00, 0x14,
+						0x08, 0x3A, 0x00, 0x02, 0x00, 0x20, 0x2C, 0x08};
 
-				std::memcpy( palette.ram, powerUpPalette, Palette::SIZE );
-				std::memset( oam.ram, Oam::GARBAGE, Oam::SIZE );
-				std::memset( nameTable.ram, NameTable::GARBAGE, NameTable::SIZE );
+				std::memcpy(palette.ram, powerUpPalette, Palette::SIZE);
+				std::memset(oam.ram, Oam::GARBAGE, Oam::SIZE);
+				std::memset(nameTable.ram, NameTable::GARBAGE, NameTable::SIZE);
 
 				io.latch = 0;
 				io.buffer = Io::BUFFER_GARBAGE;
@@ -214,7 +204,7 @@ namespace Nes
 				cycles.reset = Cpu::CYCLE_MAX;
 				cycles.hClock = HCLOCK_BOOT;
 
-				std::memset( oam.ram, Oam::GARBAGE, Oam::SIZE );
+				std::memset(oam.ram, Oam::GARBAGE, Oam::SIZE);
 			}
 			else
 			{
@@ -224,14 +214,14 @@ namespace Nes
 
 			if (chr.Source().Empty())
 			{
-				chr.Source().Set( Ram::RAM, true, false, NameTable::SIZE, nameTable.ram );
-				chr.SwapBanks<SIZE_2K,0x0000>(0,0,0,0);
+				chr.Source().Set(Ram::RAM, true, false, NameTable::SIZE, nameTable.ram);
+				chr.SwapBanks<SIZE_2K, 0x0000>(0, 0, 0, 0);
 			}
 
 			if (nmt.Source().Empty())
 			{
-				nmt.Source().Set( Ram::RAM, true, true, NameTable::SIZE, nameTable.ram );
-				nmt.SwapBanks<SIZE_2K,0x0000>(0,0);
+				nmt.Source().Set(Ram::RAM, true, true, NameTable::SIZE, nameTable.ram);
+				nmt.SwapBanks<SIZE_2K, 0x0000>(0, 0);
 			}
 
 			chr.ResetAccessor();
@@ -272,18 +262,18 @@ namespace Nes
 			screen.Clear();
 		}
 
-		uint Ppu::SetAddressLineHook(const Core::Io::Line& line)
+		uint Ppu::SetAddressLineHook(const Core::Io::Line &line)
 		{
 			io.line = line;
 			return io.address;
 		}
 
-		void Ppu::SetHActiveHook(const Hook& hook)
+		void Ppu::SetHActiveHook(const Hook &hook)
 		{
 			hActiveHook = hook;
 		}
 
-		void Ppu::SetHBlankHook(const Hook& hook)
+		void Ppu::SetHBlankHook(const Hook &hook)
 		{
 			hBlankHook = hook;
 		}
@@ -303,47 +293,46 @@ namespace Nes
 
 		void Ppu::UpdatePalette()
 		{
-			for (uint i=0, c=Coloring(), e=Emphasis(); i < Palette::SIZE; ++i)
+			for (uint i = 0, c = Coloring(), e = Emphasis(); i < Palette::SIZE; ++i)
 				output.palette[i] = ((rgbMap ? rgbMap[palette.ram[i] & uint(Palette::COLOR)] : palette.ram[i]) & c) | e;
 		}
 
-		void Ppu::SaveState(State::Saver& state,const dword baseChunk) const
+		void Ppu::SaveState(State::Saver &state, const dword baseChunk) const
 		{
-			state.Begin( baseChunk );
+			state.Begin(baseChunk);
 
 			{
 				const byte data[11] =
-				{
-					static_cast<byte>(regs.ctrl[0]),
-					static_cast<byte>(regs.ctrl[1]),
-					static_cast<byte>(regs.status),
-					static_cast<byte>(scroll.address & 0xFF),
-					static_cast<byte>(scroll.address >> 8),
-					static_cast<byte>(scroll.latch & 0xFF),
-					static_cast<byte>(scroll.latch >> 8),
-					static_cast<byte>(scroll.xFine | scroll.toggle << 3),
-					static_cast<byte>(regs.oam),
-					static_cast<byte>(io.buffer),
-					static_cast<byte>(io.latch)
-				};
-
-				state.Begin( AsciiId<'R','E','G'>::V ).Write( data ).End();
+					{
+						static_cast<byte>(regs.ctrl[0]),
+						static_cast<byte>(regs.ctrl[1]),
+						static_cast<byte>(regs.status),
+						static_cast<byte>(scroll.address & 0xFF),
+						static_cast<byte>(scroll.address >> 8),
+						static_cast<byte>(scroll.latch & 0xFF),
+						static_cast<byte>(scroll.latch >> 8),
+						static_cast<byte>(scroll.xFine | scroll.toggle << 3),
+						static_cast<byte>(regs.oam),
+						static_cast<byte>(io.buffer),
+						static_cast<byte>(io.latch)};
+
+				state.Begin(AsciiId<'R', 'E', 'G'>::V).Write(data).End();
 			}
 
-			state.Begin( AsciiId<'P','A','L'>::V ).Compress( palette.ram   ).End();
-			state.Begin( AsciiId<'O','A','M'>::V ).Compress( oam.ram       ).End();
-			state.Begin( AsciiId<'N','M','T'>::V ).Compress( nameTable.ram ).End();
+			state.Begin(AsciiId<'P', 'A', 'L'>::V).Compress(palette.ram).End();
+			state.Begin(AsciiId<'O', 'A', 'M'>::V).Compress(oam.ram).End();
+			state.Begin(AsciiId<'N', 'M', 'T'>::V).Compress(nameTable.ram).End();
 
 			if (model == PPU_RP2C02)
-				state.Begin( AsciiId<'F','R','M'>::V ).Write8( (regs.frame & Regs::FRAME_ODD) == 0 ).End();
+				state.Begin(AsciiId<'F', 'R', 'M'>::V).Write8((regs.frame & Regs::FRAME_ODD) == 0).End();
 
 			if (cycles.hClock == HCLOCK_BOOT)
-				state.Begin( AsciiId<'P','O','W'>::V ).Write8( 0x0 ).End();
+				state.Begin(AsciiId<'P', 'O', 'W'>::V).Write8(0x0).End();
 
 			state.End();
 		}
 
-		void Ppu::LoadState(State::Loader& state)
+		void Ppu::LoadState(State::Loader &state)
 		{
 			cycles.hClock = HCLOCK_DUMMY;
 			regs.frame = 0;
@@ -353,50 +342,50 @@ namespace Nes
 			{
 				switch (chunk)
 				{
-					case AsciiId<'R','E','G'>::V:
-					{
-						State::Loader::Data<11> data( state );
-
-						regs.ctrl[0]   = data[0];
-						regs.ctrl[1]   = data[1];
-						regs.status    = data[2] & Regs::STATUS_BITS;
-						scroll.address = data[3] | (data[4] << 8 & 0x7F00);
-						scroll.latch   = data[5] | (data[6] << 8 & 0x7F00);
-						scroll.xFine   = data[7] & 0x7;
-						scroll.toggle  = data[7] >> 3 & 0x1;
-						regs.oam       = data[8];
-						io.buffer      = data[9];
-						io.latch       = data[10];
+				case AsciiId<'R', 'E', 'G'>::V:
+				{
+					State::Loader::Data<11> data(state);
+
+					regs.ctrl[0] = data[0];
+					regs.ctrl[1] = data[1];
+					regs.status = data[2] & Regs::STATUS_BITS;
+					scroll.address = data[3] | (data[4] << 8 & 0x7F00);
+					scroll.latch = data[5] | (data[6] << 8 & 0x7F00);
+					scroll.xFine = data[7] & 0x7;
+					scroll.toggle = data[7] >> 3 & 0x1;
+					regs.oam = data[8];
+					io.buffer = data[9];
+					io.latch = data[10];
 
-						break;
-					}
+					break;
+				}
 
-					case AsciiId<'P','A','L'>::V:
+				case AsciiId<'P', 'A', 'L'>::V:
 
-						state.Uncompress( palette.ram );
-						break;
+					state.Uncompress(palette.ram);
+					break;
 
-					case AsciiId<'O','A','M'>::V:
+				case AsciiId<'O', 'A', 'M'>::V:
 
-						state.Uncompress( oam.ram );
-						break;
+					state.Uncompress(oam.ram);
+					break;
 
-					case AsciiId<'N','M','T'>::V:
+				case AsciiId<'N', 'M', 'T'>::V:
 
-						state.Uncompress( nameTable.ram );
-						break;
+					state.Uncompress(nameTable.ram);
+					break;
 
-					case AsciiId<'F','R','M'>::V:
+				case AsciiId<'F', 'R', 'M'>::V:
 
-						if (model == PPU_RP2C02)
-							regs.frame = (state.Read8() & 0x1) ? 0 : Regs::FRAME_ODD;
+					if (model == PPU_RP2C02)
+						regs.frame = (state.Read8() & 0x1) ? 0 : Regs::FRAME_ODD;
 
-						break;
+					break;
 
-					case AsciiId<'P','O','W'>::V:
+				case AsciiId<'P', 'O', 'W'>::V:
 
-						cycles.hClock = HCLOCK_BOOT;
-						break;
+					cycles.hClock = HCLOCK_BOOT;
+					break;
 				}
 
 				state.End();
@@ -409,23 +398,23 @@ namespace Nes
 
 		void Ppu::EnableCpuSynchronization()
 		{
-			cpu.AddHook( Hook(this,&Ppu::Hook_Sync) );
+			cpu.AddHook(Hook(this, &Ppu::Hook_Sync));
 		}
 
 		void Ppu::ChrMem::ResetAccessor()
 		{
-			accessor.Set( this, &ChrMem::Access_Pattern );
+			accessor.Set(this, &ChrMem::Access_Pattern);
 		}
 
 		void Ppu::NmtMem::ResetAccessors()
 		{
-			accessors[0].Set( this, &NmtMem::Access_Name_2000 );
-			accessors[1].Set( this, &NmtMem::Access_Name_2400 );
-			accessors[2].Set( this, &NmtMem::Access_Name_2800 );
-			accessors[3].Set( this, &NmtMem::Access_Name_2C00 );
+			accessors[0].Set(this, &NmtMem::Access_Name_2000);
+			accessors[1].Set(this, &NmtMem::Access_Name_2400);
+			accessors[2].Set(this, &NmtMem::Access_Name_2800);
+			accessors[3].Set(this, &NmtMem::Access_Name_2C00);
 		}
 
-		void Ppu::SetModel(const PpuModel m,const bool yuvConversion)
+		void Ppu::SetModel(const PpuModel m, const bool yuvConversion)
 		{
 			if (model != m)
 			{
@@ -435,26 +424,28 @@ namespace Nes
 
 				switch (model)
 				{
-					case PPU_RP2C07: cycles.one = PPU_RP2C07_CC; break;
-					case PPU_DENDY:  cycles.one = PPU_DENDY_CC;  break;
-					default:         cycles.one = PPU_RP2C02_CC; break;
+				case PPU_RP2C07:
+					cycles.one = PPU_RP2C07_CC;
+					break;
+				case PPU_DENDY:
+					cycles.one = PPU_DENDY_CC;
+					break;
+				default:
+					cycles.one = PPU_RP2C02_CC;
+					break;
 				}
 			}
 
-			const byte* const map =
-			(
-				model == PPU_RP2C04_0001 ? yuvMaps[0] :
-				model == PPU_RP2C04_0002 ? yuvMaps[1] :
-				model == PPU_RP2C04_0003 ? yuvMaps[2] :
-				model == PPU_RP2C04_0004 ? yuvMaps[3] :
-                                           NULL
-			);
+			const byte *const map =
+				(model == PPU_RP2C04_0001 ? yuvMaps[0] : model == PPU_RP2C04_0002 ? yuvMaps[1]
+													 : model == PPU_RP2C04_0003	  ? yuvMaps[2]
+													 : model == PPU_RP2C04_0004	  ? yuvMaps[3]
+																				  : NULL);
 
-			const byte* const tmp[2] =
-			{
-				yuvConversion ? NULL : map,
-				yuvConversion ? map : NULL
-			};
+			const byte *const tmp[2] =
+				{
+					yuvConversion ? NULL : map,
+					yuvConversion ? map : NULL};
 
 			if (yuvMap != tmp[0] || rgbMap != tmp[1])
 			{
@@ -465,9 +456,9 @@ namespace Nes
 			}
 		}
 
-		#ifdef NST_MSVC_OPTIMIZE
-		#pragma optimize("", on)
-		#endif
+#ifdef NST_MSVC_OPTIMIZE
+#pragma optimize("", on)
+#endif
 
 		NST_FORCE_INLINE Cycle Ppu::GetCycles() const
 		{
@@ -476,91 +467,89 @@ namespace Nes
 
 		NST_FORCE_INLINE Cycle Ppu::GetLocalCycles(Cycle clock) const
 		{
-			NST_COMPILE_ASSERT( PPU_DENDY_CC == PPU_RP2C02_CC || PPU_DENDY_CC == PPU_RP2C07_CC );
-			return cycles.one == PPU_RP2C02_CC ? clock / PPU_RP2C02_CC : (clock+PPU_RP2C07_CC-1) / PPU_RP2C07_CC;
+			NST_COMPILE_ASSERT(PPU_DENDY_CC == PPU_RP2C02_CC || PPU_DENDY_CC == PPU_RP2C07_CC);
+			return cycles.one == PPU_RP2C02_CC ? clock / PPU_RP2C02_CC : (clock + PPU_RP2C07_CC - 1) / PPU_RP2C07_CC;
 		}
 
 		void Ppu::BeginFrame(bool frameLock)
 		{
-			NST_ASSERT
-			(
+			NST_ASSERT(
 				(scanline == SCANLINE_VBLANK) &&
 				(cycles.hClock == HCLOCK_BOOT || cycles.hClock == HCLOCK_DUMMY) &&
 				(cpu.GetModel() == CPU_RP2A07) == (model == PPU_RP2C07) &&
-				(cpu.GetModel() == CPU_DENDY)  == (model == PPU_DENDY)
-			);
+				(cpu.GetModel() == CPU_DENDY) == (model == PPU_DENDY));
 
-			oam.limit = oam.buffer + ((oam.spriteLimit || frameLock) ? Oam::STD_LINE_SPRITES*4 : Oam::MAX_LINE_SPRITES*4);
+			oam.limit = oam.buffer + ((oam.spriteLimit || frameLock) ? Oam::STD_LINE_SPRITES * 4 : Oam::MAX_LINE_SPRITES * 4);
 			output.target = output.pixels;
 
 			Cycle frame;
 
 			switch (model)
 			{
-				case PPU_RP2C02:
+			case PPU_RP2C02:
 
-					regs.frame ^= Regs::FRAME_ODD;
-					// fallthrough
+				regs.frame ^= Regs::FRAME_ODD;
+				// fallthrough
 
-				default:
+			default:
 
-					if (cycles.hClock == HCLOCK_DUMMY)
-					{
-						cycles.vClock = PPU_RP2C02_HVINT / PPU_RP2C02_CC - HCLOCK_DUMMY;
-						cycles.count = PPU_RP2C02_HVINT;
-						frame = PPU_RP2C02_HVSYNC_0;
-					}
-					else
-					{
-						cycles.vClock = PPU_RP2C02_HVSYNCBOOT / PPU_RP2C02_CC - HCLOCK_BOOT;
-						cycles.count = PPU_RP2C02_HVSYNCBOOT;
-						frame = PPU_RP2C02_HVSYNCBOOT;
-					}
-					break;
+				if (cycles.hClock == HCLOCK_DUMMY)
+				{
+					cycles.vClock = PPU_RP2C02_HVINT / PPU_RP2C02_CC - HCLOCK_DUMMY;
+					cycles.count = PPU_RP2C02_HVINT;
+					frame = PPU_RP2C02_HVSYNC_0;
+				}
+				else
+				{
+					cycles.vClock = PPU_RP2C02_HVSYNCBOOT / PPU_RP2C02_CC - HCLOCK_BOOT;
+					cycles.count = PPU_RP2C02_HVSYNCBOOT;
+					frame = PPU_RP2C02_HVSYNCBOOT;
+				}
+				break;
 
-				case PPU_RP2C07:
+			case PPU_RP2C07:
 
-					if (cycles.hClock == HCLOCK_DUMMY)
-					{
-						cycles.vClock = PPU_RP2C07_HVINT / PPU_RP2C07_CC - HCLOCK_DUMMY;
-						cycles.count = PPU_RP2C07_HVINT;
-						frame = PPU_RP2C07_HVSYNC;
-					}
-					else
-					{
-						cycles.vClock = PPU_RP2C07_HVSYNCBOOT / PPU_RP2C07_CC - HCLOCK_BOOT;
-						cycles.count = PPU_RP2C07_HVSYNCBOOT;
-						frame = PPU_RP2C07_HVSYNCBOOT;
-					}
-					break;
+				if (cycles.hClock == HCLOCK_DUMMY)
+				{
+					cycles.vClock = PPU_RP2C07_HVINT / PPU_RP2C07_CC - HCLOCK_DUMMY;
+					cycles.count = PPU_RP2C07_HVINT;
+					frame = PPU_RP2C07_HVSYNC;
+				}
+				else
+				{
+					cycles.vClock = PPU_RP2C07_HVSYNCBOOT / PPU_RP2C07_CC - HCLOCK_BOOT;
+					cycles.count = PPU_RP2C07_HVSYNCBOOT;
+					frame = PPU_RP2C07_HVSYNCBOOT;
+				}
+				break;
 
-				case PPU_DENDY:
+			case PPU_DENDY:
 
-					if (cycles.hClock == HCLOCK_DUMMY)
-					{
-						cycles.vClock = PPU_DENDY_HVINT / PPU_DENDY_CC - HCLOCK_DUMMY;
-						cycles.count = PPU_DENDY_HVINT;
-						frame = PPU_DENDY_HVSYNC;
-					}
-					else
-					{
-						cycles.vClock = PPU_DENDY_HVSYNCBOOT / PPU_DENDY_CC - HCLOCK_BOOT;
-						cycles.count = PPU_DENDY_HVSYNCBOOT;
-						frame = PPU_DENDY_HVSYNCBOOT;
-					}
-					break;
+				if (cycles.hClock == HCLOCK_DUMMY)
+				{
+					cycles.vClock = PPU_DENDY_HVINT / PPU_DENDY_CC - HCLOCK_DUMMY;
+					cycles.count = PPU_DENDY_HVINT;
+					frame = PPU_DENDY_HVSYNC;
+				}
+				else
+				{
+					cycles.vClock = PPU_DENDY_HVSYNCBOOT / PPU_DENDY_CC - HCLOCK_BOOT;
+					cycles.count = PPU_DENDY_HVSYNCBOOT;
+					frame = PPU_DENDY_HVSYNCBOOT;
+				}
+				break;
 			}
 
-			cpu.SetFrameCycles( frame );
+			cpu.SetFrameCycles(frame);
 		}
 
-		NES_HOOK(Ppu,Sync)
+		NES_HOOK(Ppu, Sync)
 		{
 			const Cycle elapsed = cpu.GetCycles();
 
 			if (cycles.count < elapsed)
 			{
-				cycles.count = GetLocalCycles( elapsed ) - cycles.vClock;
+				cycles.count = GetLocalCycles(elapsed) - cycles.vClock;
 				Run();
 			}
 		}
@@ -574,96 +563,94 @@ namespace Nes
 			}
 		}
 
-		void Ppu::Update(Cycle dataSetup,const uint readAddress)
+		void Ppu::Update(Cycle dataSetup, const uint readAddress)
 		{
-			dataSetup += cpu.Update( readAddress );
+			dataSetup += cpu.Update(readAddress);
 
 			if (cycles.count < dataSetup)
 			{
-				cycles.count = GetLocalCycles( dataSetup ) - cycles.vClock;
+				cycles.count = GetLocalCycles(dataSetup) - cycles.vClock;
 				Run();
 			}
 		}
 
 		void Ppu::SetMirroring(const byte (&banks)[4])
 		{
-			Update( cycles.one );
+			Update(cycles.one);
 
-			NST_ASSERT( banks[0] < 4 && banks[1] < 4 && banks[2] < 4 && banks[3] < 4 );
-			nmt.SwapBanks<SIZE_1K,0x0000>( banks[0], banks[1], banks[2], banks[3] );
+			NST_ASSERT(banks[0] < 4 && banks[1] < 4 && banks[2] < 4 && banks[3] < 4);
+			nmt.SwapBanks<SIZE_1K, 0x0000>(banks[0], banks[1], banks[2], banks[3]);
 		}
 
 		void Ppu::SetMirroring(NmtMirroring mirroring)
 		{
-			Update( cycles.one );
+			Update(cycles.one);
 
-			nmt.SwapBanks<SIZE_1K,0x0000>
-			(
+			nmt.SwapBanks<SIZE_1K, 0x0000>(
 				uint(mirroring) >> 0 & 0x1U,
 				uint(mirroring) >> 1 & 0x1U,
 				uint(mirroring) >> 2 & 0x1U,
-				uint(mirroring) >> 3 & 0x1U
-			);
+				uint(mirroring) >> 3 & 0x1U);
 		}
 
-		NES_ACCESSOR(Ppu::ChrMem,Pattern)
+		NES_ACCESSOR(Ppu::ChrMem, Pattern)
 		{
-			return Peek( address );
+			return Peek(address);
 		}
 
-		NES_ACCESSOR(Ppu::NmtMem,Name_2000)
+		NES_ACCESSOR(Ppu::NmtMem, Name_2000)
 		{
 			return (*this)[0][address];
 		}
 
-		NES_ACCESSOR(Ppu::NmtMem,Name_2400)
+		NES_ACCESSOR(Ppu::NmtMem, Name_2400)
 		{
 			return (*this)[1][address];
 		}
 
-		NES_ACCESSOR(Ppu::NmtMem,Name_2800)
+		NES_ACCESSOR(Ppu::NmtMem, Name_2800)
 		{
 			return (*this)[2][address];
 		}
 
-		NES_ACCESSOR(Ppu::NmtMem,Name_2C00)
+		NES_ACCESSOR(Ppu::NmtMem, Name_2C00)
 		{
 			return (*this)[3][address];
 		}
 
 		NST_FORCE_INLINE uint Ppu::Chr::FetchPattern(uint address) const
 		{
-			return accessor.Fetch( address & 0x1FFF );
+			return accessor.Fetch(address & 0x1FFF);
 		}
 
 		NST_FORCE_INLINE uint Ppu::Nmt::FetchName(uint address) const
 		{
-			return accessors[address >> 10 & 0x3].Fetch( address & 0x3FF );
+			return accessors[address >> 10 & 0x3].Fetch(address & 0x3FF);
 		}
 
 		NST_FORCE_INLINE uint Ppu::Nmt::FetchAttribute(uint address) const
 		{
-			return accessors[address >> 10 & 0x3].Fetch( 0x3C0 | (address & 0x03F) );
+			return accessors[address >> 10 & 0x3].Fetch(0x3C0 | (address & 0x03F));
 		}
 
 		NST_FORCE_INLINE void Ppu::UpdateAddressLine(uint address)
 		{
-			NST_ASSERT( address <= 0x3FFF );
+			NST_ASSERT(address <= 0x3FFF);
 			io.address = address;
 
 			if (io.line)
-				io.line.Toggle( io.address, GetCycles() );
+				io.line.Toggle(io.address, GetCycles());
 		}
 
 		NST_FORCE_INLINE void Ppu::UpdateScrollAddressLine()
 		{
 			if (io.line)
-				io.line.Toggle( scroll.address & 0x3FFF, cpu.GetCycles() );
+				io.line.Toggle(scroll.address & 0x3FFF, cpu.GetCycles());
 		}
 
 		NST_FORCE_INLINE void Ppu::UpdateVramAddress()
 		{
-			if ((scanline != SCANLINE_VBLANK ) && (regs.ctrl[1] & Regs::CTRL1_BG_SP_ENABLED))
+			if ((scanline != SCANLINE_VBLANK) && (regs.ctrl[1] & Regs::CTRL1_BG_SP_ENABLED))
 			{
 				scroll.ClockX();
 				scroll.ClockY();
@@ -676,37 +663,37 @@ namespace Nes
 
 		NST_FORCE_INLINE void Ppu::OpenName()
 		{
-			UpdateAddressLine( 0x2000 | (scroll.address & 0x0FFF) );
+			UpdateAddressLine(0x2000 | (scroll.address & 0x0FFF));
 		}
 
 		NST_FORCE_INLINE void Ppu::FetchName()
 		{
-			io.pattern = nmt.FetchName( io.address ) << 4 | scroll.address >> 12 | (regs.ctrl[0] << 8 & 0x1000);
+			io.pattern = nmt.FetchName(io.address) << 4 | scroll.address >> 12 | (regs.ctrl[0] << 8 & 0x1000);
 		}
 
 		NST_FORCE_INLINE void Ppu::OpenAttribute()
 		{
-			UpdateAddressLine( 0x23C0 | (scroll.address & 0x0C00) | (scroll.address >> 4 & 0x0038) | (scroll.address >> 2 & 0x0007) );
+			UpdateAddressLine(0x23C0 | (scroll.address & 0x0C00) | (scroll.address >> 4 & 0x0038) | (scroll.address >> 2 & 0x0007));
 		}
 
 		NST_FORCE_INLINE void Ppu::FetchAttribute()
 		{
-			tiles.attribute = nmt.FetchAttribute( io.address ) >> ((scroll.address & 0x2) | (scroll.address >> 4 & 0x4));
+			tiles.attribute = nmt.FetchAttribute(io.address) >> ((scroll.address & 0x2) | (scroll.address >> 4 & 0x4));
 		}
 
 		NST_FORCE_INLINE void Ppu::OpenPattern(uint address)
 		{
-			UpdateAddressLine( address );
+			UpdateAddressLine(address);
 		}
 
 		NST_FORCE_INLINE uint Ppu::FetchSpPattern() const
 		{
-			return chr.FetchPattern( io.address );
+			return chr.FetchPattern(io.address);
 		}
 
 		NST_FORCE_INLINE void Ppu::FetchBgPattern0()
 		{
-			const uint pattern = chr.FetchPattern( io.address );
+			const uint pattern = chr.FetchPattern(io.address);
 
 			tiles.pattern[1] = pattern >> 0 & 0x55;
 			tiles.pattern[0] = pattern >> 1 & 0x55;
@@ -714,7 +701,7 @@ namespace Nes
 
 		NST_FORCE_INLINE void Ppu::FetchBgPattern1()
 		{
-			const uint pattern = chr.FetchPattern( io.address );
+			const uint pattern = chr.FetchPattern(io.address);
 
 			tiles.pattern[0] |= pattern << 0 & 0xAA;
 			tiles.pattern[1] |= pattern << 1 & 0xAA;
@@ -722,7 +709,7 @@ namespace Nes
 
 		uint Ppu::GetPixelCycles() const
 		{
-			return (scanline+1)-1U < 240 ? scanline * 256 + NST_MIN(cycles.hClock,255) : ~0U;
+			return (scanline + 1) - 1U < 240 ? scanline * 256 + NST_MIN(cycles.hClock, 255) : ~0U;
 		}
 
 		NST_FORCE_INLINE bool Ppu::IsDead() const
@@ -751,11 +738,11 @@ namespace Nes
 			}
 		}
 
-		NES_POKE_D(Ppu,2000)
+		NES_POKE_D(Ppu, 2000)
 		{
-			Update( cycles.one );
+			Update(cycles.one);
 
-			NST_VERIFY( cpu.GetCycles() >= cycles.reset || !data );
+			NST_VERIFY(cpu.GetCycles() >= cycles.reset || !data);
 
 			if (cpu.GetCycles() >= cycles.reset)
 			{
@@ -765,7 +752,7 @@ namespace Nes
 				io.latch = data;
 				UpdateDecay(0xFF);
 
-				data = regs.ctrl[0] ;
+				data = regs.ctrl[0];
 				regs.ctrl[0] = io.latch;
 
 				if ((regs.ctrl[0] & regs.status & Regs::CTRL0_NMI) > data)
@@ -773,20 +760,20 @@ namespace Nes
 					const Cycle clock = cpu.GetCycles() + cycles.one;
 
 					if (clock < GetHVIntClock())
-						cpu.DoNMI( clock );
+						cpu.DoNMI(clock);
 				}
 			}
 		}
 
-		NES_POKE_D(Ppu,2001)
+		NES_POKE_D(Ppu, 2001)
 		{
-			Update( cycles.one );
+			Update(cycles.one);
 
-			NST_VERIFY( cpu.GetCycles() >= cycles.reset || !data );
+			NST_VERIFY(cpu.GetCycles() >= cycles.reset || !data);
 
 			if (cpu.GetCycles() >= cycles.reset)
 			{
-				if ((regs.ctrl[1] ^ data) & (Regs::CTRL1_BG_ENABLED_NO_CLIP|Regs::CTRL1_SP_ENABLED_NO_CLIP))
+				if ((regs.ctrl[1] ^ data) & (Regs::CTRL1_BG_ENABLED_NO_CLIP | Regs::CTRL1_SP_ENABLED_NO_CLIP))
 				{
 					tiles.show[0] = (data & Regs::CTRL1_BG_ENABLED) ? 0xFF : 0x00;
 					tiles.show[1] = (data & Regs::CTRL1_BG_ENABLED_NO_CLIP) == Regs::CTRL1_BG_ENABLED_NO_CLIP ? 0xFF : 0x00;
@@ -794,7 +781,7 @@ namespace Nes
 					oam.show[0] = (data & Regs::CTRL1_SP_ENABLED) ? 0xFF : 0x00;
 					oam.show[1] = (data & Regs::CTRL1_SP_ENABLED_NO_CLIP) == Regs::CTRL1_SP_ENABLED_NO_CLIP ? 0xFF : 0x00;
 
-					const uint pos = (cycles.hClock - 8) >= (256-16);
+					const uint pos = (cycles.hClock - 8) >= (256 - 16);
 
 					tiles.mask = tiles.show[pos];
 					oam.mask = oam.show[pos];
@@ -806,37 +793,37 @@ namespace Nes
 				io.latch = data;
 				UpdateDecay(0xFF);
 
-				data = (regs.ctrl[1] ^ data) & (Regs::CTRL1_EMPHASIS|Regs::CTRL1_MONOCHROME);
+				data = (regs.ctrl[1] ^ data) & (Regs::CTRL1_EMPHASIS | Regs::CTRL1_MONOCHROME);
 				regs.ctrl[1] = io.latch;
 
 				if (data)
 				{
-					const uint ce[] = { Coloring(), Emphasis() };
+					const uint ce[] = {Coloring(), Emphasis()};
 
-					const byte* const NST_RESTRICT map = rgbMap;
+					const byte *const NST_RESTRICT map = rgbMap;
 
 					if (!map)
 					{
-						for (uint i=0; i < Palette::SIZE; ++i)
+						for (uint i = 0; i < Palette::SIZE; ++i)
 							output.palette[i] = (palette.ram[i] & ce[0]) | ce[1];
 					}
 					else
 					{
-						for (uint i=0; i < Palette::SIZE; ++i)
+						for (uint i = 0; i < Palette::SIZE; ++i)
 							output.palette[i] = (map[palette.ram[i] & Palette::COLOR] & ce[0]) | ce[1];
 					}
 				}
 			}
 		}
 
-		NES_PEEK_A(Ppu,2002)
+		NES_PEEK_A(Ppu, 2002)
 		{
-			Update( cycles.one, address );
+			Update(cycles.one, address);
 
 			byte mask = 0xE0;
 			uint status = regs.status & 0xFF;
 
-			regs.status &= (Regs::STATUS_VBLANK^0xFFU);
+			regs.status &= (Regs::STATUS_VBLANK ^ 0xFFU);
 			scroll.toggle = 0;
 			io.latch = (io.latch & Regs::STATUS_LATCH) | status;
 			UpdateDecay(mask);
@@ -851,36 +838,36 @@ namespace Nes
 			return io.latch & mask;
 		}
 
-		NES_PEEK_A(Ppu,2002_RC2C05_01_04)
+		NES_PEEK_A(Ppu, 2002_RC2C05_01_04)
 		{
-			return (NES_DO_PEEK(2002,address) & 0xC0) | 0x1B;
+			return (NES_DO_PEEK(2002, address) & 0xC0) | 0x1B;
 		}
 
-		NES_PEEK_A(Ppu,2002_RC2C05_02)
+		NES_PEEK_A(Ppu, 2002_RC2C05_02)
 		{
-			return (NES_DO_PEEK(2002,address) & 0xC0) | 0x3D;
+			return (NES_DO_PEEK(2002, address) & 0xC0) | 0x3D;
 		}
 
-		NES_PEEK_A(Ppu,2002_RC2C05_03)
+		NES_PEEK_A(Ppu, 2002_RC2C05_03)
 		{
-			return (NES_DO_PEEK(2002,address) & 0xC0) | 0x1C;
+			return (NES_DO_PEEK(2002, address) & 0xC0) | 0x1C;
 		}
 
-		NES_POKE_D(Ppu,2003)
+		NES_POKE_D(Ppu, 2003)
 		{
-			Update( cycles.one );
+			Update(cycles.one);
 
 			regs.oam = data;
 			io.latch = data;
 			UpdateDecay(0xFF);
 		}
 
-		NES_POKE_D(Ppu,2004)
+		NES_POKE_D(Ppu, 2004)
 		{
-			Update( cycles.one );
+			Update(cycles.one);
 
-			NST_ASSERT( regs.oam < Oam::SIZE );
-			NST_VERIFY( IsDead() );
+			NST_ASSERT(regs.oam < Oam::SIZE);
+			NST_VERIFY(IsDead());
 
 			io.latch = data;
 			UpdateDecay(0xFF);
@@ -895,14 +882,14 @@ namespace Nes
 				data = 0xFF;
 			}
 
-			byte* const NST_RESTRICT value = oam.ram + regs.oam;
+			byte *const NST_RESTRICT value = oam.ram + regs.oam;
 			regs.oam = (regs.oam + 1) & 0xFF;
 			*value = data;
 		}
 
-		NES_PEEK(Ppu,2004)
+		NES_PEEK(Ppu, 2004)
 		{
-			NST_ASSERT( regs.oam <= 0xFF );
+			NST_ASSERT(regs.oam <= 0xFF);
 
 			if (!(regs.ctrl[1] & Regs::CTRL1_BG_SP_ENABLED) || cpu.GetCycles() - (cpu.GetFrameCycles() - (341 * 241) * cycles.one) >= (341 * 240) * cycles.one)
 			{
@@ -911,7 +898,7 @@ namespace Nes
 			}
 			else
 			{
-				Update( cycles.one );
+				Update(cycles.one);
 
 				io.latch = oam.latch;
 				UpdateDecay(0xFF);
@@ -920,11 +907,11 @@ namespace Nes
 			return io.latch;
 		}
 
-		NES_POKE_D(Ppu,2005)
+		NES_POKE_D(Ppu, 2005)
 		{
-			Update( cycles.one );
+			Update(cycles.one);
 
-			NST_VERIFY( cpu.GetCycles() >= cycles.reset || !data );
+			NST_VERIFY(cpu.GetCycles() >= cycles.reset || !data);
 
 			if (cpu.GetCycles() >= cycles.reset)
 			{
@@ -943,11 +930,11 @@ namespace Nes
 			}
 		}
 
-		NES_POKE_D(Ppu,2006)
+		NES_POKE_D(Ppu, 2006)
 		{
-			Update( cycles.one );
+			Update(cycles.one);
 
-			NST_VERIFY( cpu.GetCycles() >= cycles.reset || !data );
+			NST_VERIFY(cpu.GetCycles() >= cycles.reset || !data);
 
 			if (cpu.GetCycles() >= cycles.reset)
 			{
@@ -967,9 +954,9 @@ namespace Nes
 			}
 		}
 
-		NES_POKE_D(Ppu,2007)
+		NES_POKE_D(Ppu, 2007)
 		{
-			Update( cycles.one * 4 );
+			Update(cycles.one * 4);
 
 			uint address = scroll.address;
 
@@ -1005,18 +992,18 @@ namespace Nes
 				address &= 0x3FFF;
 
 				if (address >= 0x2000)
-					nmt.Poke( address & 0xFFF, data );
+					nmt.Poke(address & 0xFFF, data);
 				else
-					chr.Poke( address, data );
+					chr.Poke(address, data);
 			}
 		}
 
-		NES_PEEK_A(Ppu,2007)
+		NES_PEEK_A(Ppu, 2007)
 		{
 			byte mask = 0xFF;
 			byte cache = io.latch;
 
-			Update( cycles.one, address );
+			Update(cycles.one, address);
 
 			Cycle curCyc = cpu.GetCycles();
 			Cycle delta = curCyc - decay.rd2007;
@@ -1042,7 +1029,7 @@ namespace Nes
 
 			UpdateDecay(mask);
 
-			io.buffer = (address >= 0x2000 ? nmt.FetchName( address ) : chr.FetchPattern( address ));
+			io.buffer = (address >= 0x2000 ? nmt.FetchName(address) : chr.FetchPattern(address));
 
 			if (fastread)
 				io.latch = cache;
@@ -1050,13 +1037,13 @@ namespace Nes
 			return io.latch;
 		}
 
-		NES_POKE_D(Ppu,2xxx)
+		NES_POKE_D(Ppu, 2xxx)
 		{
 			io.latch = data;
 			UpdateDecay(0xFF);
 		}
 
-		NES_PEEK(Ppu,2xxx)
+		NES_PEEK(Ppu, 2xxx)
 		{
 			if ((cpu.GetCycles() - decay.timestamp[0]) > 24576)
 				return 0;
@@ -1064,34 +1051,34 @@ namespace Nes
 			return io.latch;
 		}
 
-		NES_PEEK(Ppu,3000)
+		NES_PEEK(Ppu, 3000)
 		{
-			Update( cycles.one );
+			Update(cycles.one);
 
 			return io.latch;
 		}
 
-		NES_POKE_D(Ppu,4014)
+		NES_POKE_D(Ppu, 4014)
 		{
-			Update( cycles.one );
-			cpu.StealCycles( cpu.GetClock() );
+			Update(cycles.one);
+			cpu.StealCycles(cpu.GetClock());
 
-			NST_ASSERT( regs.oam < 0x100 );
+			NST_ASSERT(regs.oam < 0x100);
 
 			data <<= 8;
 
 			if ((regs.oam == 0x00 && data < 0x2000) && (!(regs.ctrl[1] & Regs::CTRL1_BG_SP_ENABLED) || cpu.GetCycles() <= GetHVIntClock() - cpu.GetClock() * 512))
 			{
-				const byte* const NST_RESTRICT cpuRam = cpu.GetRam() + (data & (Cpu::RAM_SIZE-1));
-				byte* const NST_RESTRICT oamRam = oam.ram;
+				const byte *const NST_RESTRICT cpuRam = cpu.GetRam() + (data & (Cpu::RAM_SIZE - 1));
+				byte *const NST_RESTRICT oamRam = oam.ram;
 
 				cpu.SetOamDMA(true);
 
-				for (uint i=0x00; i < 0x100; i++)
+				for (uint i = 0x00; i < 0x100; i++)
 				{
 					cpu.SetOamDMACycle(i);
 
-					cpu.StealCycles( cpu.GetClock() );
+					cpu.StealCycles(cpu.GetClock());
 					cpu.Update();
 
 					oamRam[i] = cpuRam[i];
@@ -1100,7 +1087,7 @@ namespace Nes
 						oamRam[i] &= 0xE3U;
 					}
 
-					cpu.StealCycles( cpu.GetClock() );
+					cpu.StealCycles(cpu.GetClock());
 					cpu.Update();
 				}
 
@@ -1110,36 +1097,36 @@ namespace Nes
 				io.latch = oamRam[0xFF];
 				UpdateDecay(0xFF);
 			}
-			else do
-			{
-				io.latch = cpu.Peek( data++ );
-				UpdateDecay(0xFF);
+			else
+				do
+				{
+					io.latch = cpu.Peek(data++);
+					UpdateDecay(0xFF);
 
-				cpu.StealCycles( cpu.GetClock() );
+					cpu.StealCycles(cpu.GetClock());
 
-				Update( cycles.one );
-				cpu.StealCycles( cpu.GetClock() );
+					Update(cycles.one);
+					cpu.StealCycles(cpu.GetClock());
 
-				NST_VERIFY( IsDead() );
+					NST_VERIFY(IsDead());
 
-				if (IsDead())
-				{
-					if ((regs.oam & 0x03) == 0x02)
-						io.latch &= 0xE3;
-				}
-				else
-				{
-					io.latch = 0xFF;
-				}
+					if (IsDead())
+					{
+						if ((regs.oam & 0x03) == 0x02)
+							io.latch &= 0xE3;
+					}
+					else
+					{
+						io.latch = 0xFF;
+					}
 
-				byte* const NST_RESTRICT out = oam.ram + regs.oam;
-				regs.oam = (regs.oam + 1) & 0xFF;
-				*out = io.latch;
-			}
-			while (data & 0xFF);
+					byte *const NST_RESTRICT out = oam.ram + regs.oam;
+					regs.oam = (regs.oam + 1) & 0xFF;
+					*out = io.latch;
+				} while (data & 0xFF);
 		}
 
-		NES_PEEK(Ppu,4014)
+		NES_PEEK(Ppu, 4014)
 		{
 			return 0x40;
 		}
@@ -1149,12 +1136,12 @@ namespace Nes
 			if ((address & X_TILE) != X_TILE)
 				address++;
 			else
-				address ^= (X_TILE|NAME_LOW);
+				address ^= (X_TILE | NAME_LOW);
 		}
 
 		NST_SINGLE_CALL void Ppu::Scroll::ResetX()
 		{
-			address = (address & ((X_TILE|NAME_LOW) ^ 0x7FFFU)) | (latch & (X_TILE|NAME_LOW));
+			address = (address & ((X_TILE | NAME_LOW) ^ 0x7FFFU)) | (latch & (X_TILE | NAME_LOW));
 		}
 
 		NST_SINGLE_CALL void Ppu::Scroll::ClockY()
@@ -1163,25 +1150,30 @@ namespace Nes
 			{
 				address += (1U << 12);
 			}
-			else switch (address & Y_TILE)
-			{
-				default:         address = (address & (Y_FINE ^ 0x7FFFU)) + (1U << 5); break;
-				case (29U << 5): address ^= NAME_HIGH; // fallthrough
-				case (31U << 5): address &= (Y_FINE|Y_TILE) ^ 0x7FFFU; break;
-			}
+			else
+				switch (address & Y_TILE)
+				{
+				default:
+					address = (address & (Y_FINE ^ 0x7FFFU)) + (1U << 5);
+					break;
+				case (29U << 5):
+					address ^= NAME_HIGH; // fallthrough
+				case (31U << 5):
+					address &= (Y_FINE | Y_TILE) ^ 0x7FFFU;
+					break;
+				}
 		}
 
 		NST_SINGLE_CALL void Ppu::PreLoadTiles()
 		{
-			const byte* const NST_RESTRICT src[] =
-			{
-				tileLut.block[tiles.pattern[0] | (tiles.attribute & 0x3U) << 8],
-				tileLut.block[tiles.pattern[1] | (tiles.attribute & 0x3U) << 8]
-			};
+			const byte *const NST_RESTRICT src[] =
+				{
+					tileLut.block[tiles.pattern[0] | (tiles.attribute & 0x3U) << 8],
+					tileLut.block[tiles.pattern[1] | (tiles.attribute & 0x3U) << 8]};
 
-			NST_ASSERT( tiles.index == 8 );
+			NST_ASSERT(tiles.index == 8);
 
-			byte* const NST_RESTRICT dst = tiles.pixels;
+			byte *const NST_RESTRICT dst = tiles.pixels;
 
 			dst[0] = src[0][0];
 			dst[1] = src[1][0];
@@ -1195,15 +1187,14 @@ namespace Nes
 
 		NST_SINGLE_CALL void Ppu::LoadTiles()
 		{
-			const byte* const NST_RESTRICT src[] =
-			{
-				tileLut.block[tiles.pattern[0] | (tiles.attribute & 0x3U) << 8],
-				tileLut.block[tiles.pattern[1] | (tiles.attribute & 0x3U) << 8]
-			};
+			const byte *const NST_RESTRICT src[] =
+				{
+					tileLut.block[tiles.pattern[0] | (tiles.attribute & 0x3U) << 8],
+					tileLut.block[tiles.pattern[1] | (tiles.attribute & 0x3U) << 8]};
 
-			NST_ASSERT( tiles.index == 0 || tiles.index == 8 );
+			NST_ASSERT(tiles.index == 0 || tiles.index == 8);
 
-			byte* const NST_RESTRICT dst = tiles.pixels + tiles.index;
+			byte *const NST_RESTRICT dst = tiles.pixels + tiles.index;
 			tiles.index ^= 8U;
 
 			dst[0] = src[0][0];
@@ -1345,50 +1336,56 @@ namespace Nes
 			oam.address = (oam.address + 4) & 0xFF;
 		}
 
-		void Ppu::DrawInputDisplay(uint buttons, uint fc) 
+		void Ppu::DrawInputDisplay(uint buttons, uint fc)
 		{
-			int start = 55298; //index of top left pixel
+			int start = 55298; // index of top left pixel
 			int w = 38;
 			int h = 13;
 			DrawRectangle(start, 0, 0, w, h, 0x10);
-			for (int i = 0; i < 13; i++) {
+			for (int i = 0; i < 13; i++)
+			{
 				DrawPixel(start, i, 0, 0x1D);
 			}
 
-			for (int i = 0; i < h - 1; i++) {
+			for (int i = 0; i < h - 1; i++)
+			{
 				DrawPixel(start, 0, i, (cpu.sessionID >> i) % 2 ? (cpu.isClean ? 0x01 : 0x06) : 0x1D);
 			}
 
-			for (int i = 0; i < w - 1; i++) {
+			for (int i = 0; i < w - 1; i++)
+			{
 				DrawPixel(start, i, h - 1, 0x1D);
 			}
 
-			for (int i = 6; i < h; i++) {
+			for (int i = 6; i < h; i++)
+			{
 				DrawPixel(start, w - 1, i, 0x1D);
 			}
 			DrawRectangle(start, 5, 5, 3, 3, 0x1D);
-			if (buttons & 0x80 && buttons & 0x40) {
+			if (buttons & 0x80 && buttons & 0x40)
+			{
 				buttons -= 0xC0;
 			}
-			int buttonColor = buttons&0x80 ? 0x20 : 0x1D; //right
+			int buttonColor = buttons & 0x80 ? 0x20 : 0x1D; // right
 			DrawRectangle(start, 8, 5, 3, 3, buttonColor);
-			buttonColor = buttons&0x40 ? 0x20 : 0x1D; //left
+			buttonColor = buttons & 0x40 ? 0x20 : 0x1D; // left
 			DrawRectangle(start, 2, 5, 3, 3, buttonColor);
-			if (buttons & 0x20 && buttons & 0x10) {
+			if (buttons & 0x20 && buttons & 0x10)
+			{
 				buttons -= 0x30;
 			}
-			buttonColor = buttons&0x20 ? 0x20 : 0x1D; //down
+			buttonColor = buttons & 0x20 ? 0x20 : 0x1D; // down
 			DrawRectangle(start, 5, 8, 3, 3, buttonColor);
-			buttonColor = buttons&0x10 ? 0x20 : 0x1D; //up
+			buttonColor = buttons & 0x10 ? 0x20 : 0x1D; // up
 			DrawRectangle(start, 5, 2, 3, 3, buttonColor);
-			buttonColor = buttons&0x08 ? 0x20 : 0x1D; //start
+			buttonColor = buttons & 0x08 ? 0x20 : 0x1D; // start
 			DrawRectangle(start, 20, 8, 4, 2, buttonColor);
-			buttonColor = buttons&0x04 ? 0x20 : 0x1D; //select
+			buttonColor = buttons & 0x04 ? 0x20 : 0x1D; // select
 			DrawRectangle(start, 15, 8, 4, 2, buttonColor);
-			buttonColor = buttons&0x02 ? 0x20 : 0x1D; //B
+			buttonColor = buttons & 0x02 ? 0x20 : 0x1D; // B
 			DrawRectangle(start, 28, 6, 2, 4, buttonColor);
 			DrawRectangle(start, 27, 7, 4, 2, buttonColor);
-			buttonColor = buttons&0x01 ? 0x20 : 0x1D; //A
+			buttonColor = buttons & 0x01 ? 0x20 : 0x1D; // A
 			DrawRectangle(start, 33, 6, 2, 4, buttonColor);
 			DrawRectangle(start, 32, 7, 4, 2, buttonColor);
 
@@ -1399,14 +1396,17 @@ namespace Nes
 			DrawNumber(start, fc / 10000 % 10, 14);
 		}
 
-		void Ppu::DrawPixel(int start, int x, int y, int color) 
+		void Ppu::DrawPixel(int start, int x, int y, int color)
 		{
 			output.pixels[start + x + y * 256] = color;
 		}
 
-		void Ppu::DrawRectangle(int start, int x, int y, int w, int h, int color) {
-			for (int i = x; i < w + x; i++) {
-				for (int j = y; j < h + y; j++) {
+		void Ppu::DrawRectangle(int start, int x, int y, int w, int h, int color)
+		{
+			for (int i = x; i < w + x; i++)
+			{
+				for (int j = y; j < h + y; j++)
+				{
 					DrawPixel(start, i, j, color);
 				}
 			}
@@ -1414,75 +1414,98 @@ namespace Nes
 
 		void Ppu::DrawNumber(int start, int n, int x)
 		{
+			int numColor = 0x1D;
+			if (n < 0) {
+				numColor = 0x16;
+				n *= -1;
+			}
+			DrawRectangle(start, x, 0, 4, 5, numColor);
+			int bgColor = 0x10;
+			switch (n)
+			{
+			case 0:
+				DrawRectangle(start, x + 1, 1, 2, 3, bgColor);
+				break;
+
+			case 1:
+				DrawRectangle(start, x, 0, 1, 5, bgColor);
+				DrawRectangle(start, x + 1, 1, 1, 3, bgColor);
+				DrawRectangle(start, x + 3, 0, 1, 4, bgColor);
+				break;
+
+			case 2:
+				DrawRectangle(start, x, 1, 3, 1, bgColor);
+				DrawRectangle(start, x + 1, 3, 3, 1, bgColor);
+				break;
+
+			case 3:
+				DrawRectangle(start, x, 1, 3, 1, bgColor);
+				DrawRectangle(start, x, 3, 3, 1, bgColor);
+				break;
+
+			case 4:
+				DrawRectangle(start, x, 3, 3, 2, bgColor);
+				DrawRectangle(start, x + 1, 0, 2, 2, bgColor);
+				break;
+
+			case 5:
+				DrawRectangle(start, x + 1, 1, 3, 1, bgColor);
+				DrawRectangle(start, x, 3, 3, 1, bgColor);
+				break;
+
+			case 6:
+				DrawRectangle(start, x + 1, 1, 3, 1, bgColor);
+				DrawRectangle(start, x + 1, 3, 2, 1, bgColor);
+				break;
+
+			case 7:
+				DrawRectangle(start, x, 2, 1, 3, bgColor);
+				DrawRectangle(start, x + 1, 1, 2, 4, bgColor);
+				break;
+
+			case 8:
+				DrawRectangle(start, x + 1, 3, 2, 1, bgColor);
+				DrawRectangle(start, x + 1, 1, 2, 1, bgColor);
+				break;
+
+			case 9:
+				DrawRectangle(start, x, 3, 3, 2, bgColor);
+				DrawRectangle(start, x + 1, 1, 2, 1, bgColor);
+				break;
+
+			default:
+				break;
+			}
+		}
 
-	int numColor = 0x1D;
-	// if(_emu->GetConsole()->GetControlManager()->IsLagFrame()) {
-	// 	numColor = 0x00BB1111;
-	// }
-	DrawRectangle(start, x, 0, 4, 5, numColor);
-	int bgColor = 0x10;
-	switch(n) {
-		case 0:
-			DrawRectangle(start, x + 1, 1, 2, 3, bgColor);
-			break;
-
-		case 1:
-			DrawRectangle(start, x, 0, 1, 5, bgColor);
-			DrawRectangle(start, x + 1, 1, 1, 3, bgColor);
-			DrawRectangle(start, x + 3, 0, 1, 4, bgColor);
-			break;
-
-		case 2:
-			DrawRectangle(start, x,1, 3, 1, bgColor);
-			DrawRectangle(start, x + 1, 3, 3, 1, bgColor);
-			break;
-
-		case 3:
-			DrawRectangle(start, x, 1, 3, 1, bgColor);
-			DrawRectangle(start, x, 3, 3, 1, bgColor);
-			break;
-
-		case 4:
-			DrawRectangle(start, x, 3, 3, 2, bgColor);
-			DrawRectangle(start, x + 1, 0, 2, 2, bgColor);
-			break;
-
-		case 5:
-			DrawRectangle(start, x + 1, 1, 3, 1, bgColor);
-			DrawRectangle(start, x, 3, 3, 1, bgColor);
-			break;
-
-		case 6:
-			DrawRectangle(start, x + 1, 1, 3, 1, bgColor);
-			DrawRectangle(start, x + 1, 3, 2, 1, bgColor);
-			break;
-
-		case 7:
-			DrawRectangle(start, x, 2, 1, 3, bgColor);
-			DrawRectangle(start, x + 1, 1, 2, 4, bgColor);
-			break;
-
-		case 8:
-			DrawRectangle(start, x + 1, 3, 2, 1, bgColor);
-			DrawRectangle(start, x + 1, 1, 2, 1, bgColor);
-			break;
-
-		case 9:
-			DrawRectangle(start, x, 3, 3, 2, bgColor);
-			DrawRectangle(start, x + 1, 1, 2, 1, bgColor);
-			break;
-
-		default:
-			break;
-	}
+		void Ppu::DrawTimer(int frameCount, bool isNTSC) {
+			double time = frameCount * (isNTSC ? 655171.0 / 39375000 : 6448.0 / 322445);
+			int start = 56361; // index of top left pixel
+			DrawRectangle(start, 0, 0, 42, 9, 0x1D);
+			DrawRectangle(start, 1, 1, 40, 7, 0x10);
+			int mins = (int)time / 60;
+			double secs = time - mins * 60;
+			secs = floor(secs * 1000.0 + 0.5) / 1000.0;
+
+			start += 512;
+			DrawNumber(start, mins % 10, 7);
+			DrawNumber(start, mins / 10 % 10, 2);
+			DrawPixel(start, 12, 1, 0x1D);
+			DrawPixel(start, 12, 3, 0x1D);
+			DrawNumber(start, int(secs) % 10, 19);
+			DrawNumber(start, int(secs) / 10 % 10, 14);
+			DrawPixel(start, 24, 4, 0x1D);
+			DrawNumber(start, int(secs * 10) % 10, 26);
+			DrawNumber(start, int(secs * 100) % 10, 31);
+			DrawNumber(start, int(secs * 1000) % 10, 36);
 		}
 
 		NST_FORCE_INLINE uint Ppu::OpenSprite() const
 		{
-			return (regs.ctrl[0] & (Regs::CTRL0_SP_OFFSET|Regs::CTRL0_SP8X16)) ? 0x1FF0 : 0x0FF0;
+			return (regs.ctrl[0] & (Regs::CTRL0_SP_OFFSET | Regs::CTRL0_SP8X16)) ? 0x1FF0 : 0x0FF0;
 		}
 
-		NST_FORCE_INLINE uint Ppu::OpenSprite(const byte* const NST_RESTRICT buffer) const
+		NST_FORCE_INLINE uint Ppu::OpenSprite(const byte *const NST_RESTRICT buffer) const
 		{
 			uint address;
 			const uint comparitor = (uint(scanline) - buffer[0]) ^ ((buffer[2] & uint(Oam::Y_FLIP)) ? 0xF : 0x0);
@@ -1490,11 +1513,9 @@ namespace Nes
 			if (regs.ctrl[0] & Regs::CTRL0_SP8X16)
 			{
 				address =
-				(
-					((buffer[1] & uint(Oam::TILE_LSB)) << 12) |
-					((buffer[1] & (Oam::TILE_LSB ^ 0xFFU)) << 4) |
-					((comparitor & Oam::RANGE_MSB) << 1)
-				);
+					(((buffer[1] & uint(Oam::TILE_LSB)) << 12) |
+					 ((buffer[1] & (Oam::TILE_LSB ^ 0xFFU)) << 4) |
+					 ((comparitor & Oam::RANGE_MSB) << 1));
 			}
 			else
 			{
@@ -1504,65 +1525,61 @@ namespace Nes
 			return address | (comparitor & Oam::XFINE);
 		}
 
-		NST_FORCE_INLINE void Ppu::LoadSprite(const uint pattern0,const uint pattern1,const byte* const NST_RESTRICT buffer)
+		NST_FORCE_INLINE void Ppu::LoadSprite(const uint pattern0, const uint pattern1, const byte *const NST_RESTRICT buffer)
 		{
 			if (pattern0 | pattern1)
 			{
 				uint a = (buffer[2] & uint(Oam::X_FLIP)) ? 7 : 0;
 
 				uint p =
-				(
-					(pattern0 >> 1 & 0x0055) | (pattern1 << 0 & 0x00AA) |
-					(pattern0 << 8 & 0x5500) | (pattern1 << 9 & 0xAA00)
-				);
-
-				Oam::Output* const NST_RESTRICT entry = oam.visible++;
-
-				entry->pixels[( a^=6 )] = ( p       ) & 0x3;
-				entry->pixels[( a^=2 )] = ( p >>= 2 ) & 0x3;
-				entry->pixels[( a^=6 )] = ( p >>= 2 ) & 0x3;
-				entry->pixels[( a^=2 )] = ( p >>= 2 ) & 0x3;
-				entry->pixels[( a^=7 )] = ( p >>= 2 ) & 0x3;
-				entry->pixels[( a^=2 )] = ( p >>= 2 ) & 0x3;
-				entry->pixels[( a^=6 )] = ( p >>= 2 ) & 0x3;
-				entry->pixels[( a^=2 )] = ( p >>= 2 );
+					((pattern0 >> 1 & 0x0055) | (pattern1 << 0 & 0x00AA) |
+					 (pattern0 << 8 & 0x5500) | (pattern1 << 9 & 0xAA00));
+
+				Oam::Output *const NST_RESTRICT entry = oam.visible++;
+
+				entry->pixels[(a ^= 6)] = (p) & 0x3;
+				entry->pixels[(a ^= 2)] = (p >>= 2) & 0x3;
+				entry->pixels[(a ^= 6)] = (p >>= 2) & 0x3;
+				entry->pixels[(a ^= 2)] = (p >>= 2) & 0x3;
+				entry->pixels[(a ^= 7)] = (p >>= 2) & 0x3;
+				entry->pixels[(a ^= 2)] = (p >>= 2) & 0x3;
+				entry->pixels[(a ^= 6)] = (p >>= 2) & 0x3;
+				entry->pixels[(a ^= 2)] = (p >>= 2);
 
 				const uint attribute = buffer[2];
 
-				entry->x       = buffer[3];
+				entry->x = buffer[3];
 				entry->palette = Palette::SPRITE_OFFSET + ((attribute & Oam::COLOR) << 2);
-				entry->behind  = (attribute & Oam::BEHIND) ? 0x3 : 0x0;
-				entry->zero    = (buffer == oam.buffer && oam.spriteZeroInLine) ? 0x3 : 0x0;
+				entry->behind = (attribute & Oam::BEHIND) ? 0x3 : 0x0;
+				entry->zero = (buffer == oam.buffer && oam.spriteZeroInLine) ? 0x3 : 0x0;
 			}
 		}
 
 		void Ppu::LoadExtendedSprites()
 		{
-			const byte* NST_RESTRICT buffer = oam.buffer + (8*4);
-			NST_ASSERT( buffer < oam.buffered );
+			const byte *NST_RESTRICT buffer = oam.buffer + (8 * 4);
+			NST_ASSERT(buffer < oam.buffered);
 
 			do
 			{
-				const uint address = OpenSprite( buffer );
+				const uint address = OpenSprite(buffer);
 
 				const uint patterns[2] =
-				{
-					chr.FetchPattern( address | 0x0 ),
-					chr.FetchPattern( address | 0x8 )
-				};
+					{
+						chr.FetchPattern(address | 0x0),
+						chr.FetchPattern(address | 0x8)};
 
-				LoadSprite( patterns[0], patterns[1], buffer );
+				LoadSprite(patterns[0], patterns[1], buffer);
 				buffer += 4;
-			}
-			while (buffer != oam.buffered);
+			} while (buffer != oam.buffered);
 		}
 
 		NST_FORCE_INLINE void Ppu::RenderPixel()
 		{
 			uint clock;
-			uint pixel = tiles.pixels[((clock=cycles.hClock++) + scroll.xFine) & 15] & tiles.mask;
+			uint pixel = tiles.pixels[((clock = cycles.hClock++) + scroll.xFine) & 15] & tiles.mask;
 
-			for (const Oam::Output* NST_RESTRICT sprite=oam.output, *const end=oam.visible; sprite != end; ++sprite)
+			for (const Oam::Output *NST_RESTRICT sprite = oam.output, *const end = oam.visible; sprite != end; ++sprite)
 			{
 				uint x = clock - sprite->x;
 
@@ -1582,7 +1599,7 @@ namespace Nes
 					break;
 				}
 			}
-			Video::Screen::Pixel* const NST_RESTRICT target = output.target++;
+			Video::Screen::Pixel *const NST_RESTRICT target = output.target++;
 			*target = output.palette[pixel];
 		}
 
@@ -1591,7 +1608,7 @@ namespace Nes
 			cycles.hClock = 256;
 			uint pixel = tiles.pixels[(255 + scroll.xFine) & 15] & tiles.mask;
 
-			for (const Oam::Output* NST_RESTRICT sprite=oam.output, *const end=oam.visible; sprite != end; ++sprite)
+			for (const Oam::Output *NST_RESTRICT sprite = oam.output, *const end = oam.visible; sprite != end; ++sprite)
 			{
 				uint x = 255U - sprite->x;
 
@@ -1609,1838 +1626,1853 @@ namespace Nes
 				}
 			}
 
-			Video::Screen::Pixel* const NST_RESTRICT target = output.target++;
+			Video::Screen::Pixel *const NST_RESTRICT target = output.target++;
 			*target = output.palette[pixel];
 		}
 
 		NST_NO_INLINE void Ppu::Run()
 		{
-			NST_VERIFY( cycles.count != cycles.hClock );
+			NST_VERIFY(cycles.count != cycles.hClock);
 
 			if (scanline_sleep) // Extra lines between VBLANK and NMI in Dendy mode
 			{
 				switch (cycles.hClock)
 				{
-					case 0:
-					case 1:
-					case 2:
-					case 3:
-					case 4:
-					case 5:
-					case 6:
-					case 7:
-					case 8:
-					case 9:
-					case 10:
-					case 11:
-					case 12:
-					case 13:
-					case 14:
-					case 15:
-					case 16:
-					case 17:
-					case 18:
-					case 19:
-					case 20:
-					case 21:
-					case 22:
-					case 23:
-					case 24:
-					case 25:
-					case 26:
-					case 27:
-					case 28:
-					case 29:
-					case 30:
-					case 31:
-					case 32:
-					case 33:
-					case 34:
-					case 35:
-					case 36:
-					case 37:
-					case 38:
-					case 39:
-					case 40:
-					case 41:
-					case 42:
-					case 43:
-					case 44:
-					case 45:
-					case 46:
-					case 47:
-					case 48:
-					case 49:
-					case 50:
-					case 51:
-					case 52:
-					case 53:
-					case 54:
-					case 55:
-					case 56:
-					case 57:
-					case 58:
-					case 59:
-					case 60:
-					case 61:
-					case 62:
-					case 63:
-					case 64:
-					case 65:
-					case 66:
-					case 67:
-					case 68:
-					case 69:
-					case 70:
-					case 71:
-					case 72:
-					case 73:
-					case 74:
-					case 75:
-					case 76:
-					case 77:
-					case 78:
-					case 79:
-					case 80:
-					case 81:
-					case 82:
-					case 83:
-					case 84:
-					case 85:
-					case 86:
-					case 87:
-					case 88:
-					case 89:
-					case 90:
-					case 91:
-					case 92:
-					case 93:
-					case 94:
-					case 95:
-					case 96:
-					case 97:
-					case 98:
-					case 99:
-					case 100:
-					case 101:
-					case 102:
-					case 103:
-					case 104:
-					case 105:
-					case 106:
-					case 107:
-					case 108:
-					case 109:
-					case 110:
-					case 111:
-					case 112:
-					case 113:
-					case 114:
-					case 115:
-					case 116:
-					case 117:
-					case 118:
-					case 119:
-					case 120:
-					case 121:
-					case 122:
-					case 123:
-					case 124:
-					case 125:
-					case 126:
-					case 127:
-					case 128:
-					case 129:
-					case 130:
-					case 131:
-					case 132:
-					case 133:
-					case 134:
-					case 135:
-					case 136:
-					case 137:
-					case 138:
-					case 139:
-					case 140:
-					case 141:
-					case 142:
-					case 143:
-					case 144:
-					case 145:
-					case 146:
-					case 147:
-					case 148:
-					case 149:
-					case 150:
-					case 151:
-					case 152:
-					case 153:
-					case 154:
-					case 155:
-					case 156:
-					case 157:
-					case 158:
-					case 159:
-					case 160:
-					case 161:
-					case 162:
-					case 163:
-					case 164:
-					case 165:
-					case 166:
-					case 167:
-					case 168:
-					case 169:
-					case 170:
-					case 171:
-					case 172:
-					case 173:
-					case 174:
-					case 175:
-					case 176:
-					case 177:
-					case 178:
-					case 179:
-					case 180:
-					case 181:
-					case 182:
-					case 183:
-					case 184:
-					case 185:
-					case 186:
-					case 187:
-					case 188:
-					case 189:
-					case 190:
-					case 191:
-					case 192:
-					case 193:
-					case 194:
-					case 195:
-					case 196:
-					case 197:
-					case 198:
-					case 199:
-					case 200:
-					case 201:
-					case 202:
-					case 203:
-					case 204:
-					case 205:
-					case 206:
-					case 207:
-					case 208:
-					case 209:
-					case 210:
-					case 211:
-					case 212:
-					case 213:
-					case 214:
-					case 215:
-					case 216:
-					case 217:
-					case 218:
-					case 219:
-					case 220:
-					case 221:
-					case 222:
-					case 223:
-					case 224:
-					case 225:
-					case 226:
-					case 227:
-					case 228:
-					case 229:
-					case 230:
-					case 231:
-					case 232:
-					case 233:
-					case 234:
-					case 235:
-					case 236:
-					case 237:
-					case 238:
-					case 239:
-					case 240:
-					case 241:
-					case 242:
-					case 243:
-					case 244:
-					case 245:
-					case 246:
-					case 247:
-					case 248:
-					case 249:
-					case 250:
-					case 251:
-					case 252:
-					case 253:
-					case 254:
-					case 255:
-					case 256:
-					case 257:
-					case 258:
-					case 260:
-					case 261:
-					case 262:
-					case 263:
-					case 264:
-					case 266:
-					case 267:
-					case 268:
-					case 269:
-					case 270:
-					case 271:
-					case 272:
-					case 273:
-					case 274:
-					case 275:
-					case 276:
-					case 277:
-					case 278:
-					case 279:
-					case 280:
-					case 281:
-					case 282:
-					case 283:
-					case 284:
-					case 285:
-					case 286:
-					case 287:
-					case 288:
-					case 289:
-					case 290:
-					case 291:
-					case 292:
-					case 293:
-					case 294:
-					case 295:
-					case 296:
-					case 297:
-					case 298:
-					case 299:
-					case 300:
-					case 301:
-					case 302:
-					case 303:
-					case 304:
-					case 305:
-					case 306:
-					case 307:
-					case 308:
-					case 309:
-					case 310:
-					case 311:
-					case 312:
-					case 313:
-					case 314:
-					case 315:
-					case 316:
-					case 317:
-					case 318:
-					case 319:
-					case 320:
-					case 321:
-					case 322:
-					case 323:
-					case 324:
-					case 325:
-					case 326:
-					case 327:
-					case 328:
-					case 329:
-					case 330:
-					case 331:
-					case 332:
-					case 333:
-					case 334:
-					case 335:
-					case 336:
-					case 337:
-					HActiveSleep:
-
-						cycles.hClock = 338;
-
-						if (cycles.count <= 338)
-							break;
-						// fallthrough
+				case 0:
+				case 1:
+				case 2:
+				case 3:
+				case 4:
+				case 5:
+				case 6:
+				case 7:
+				case 8:
+				case 9:
+				case 10:
+				case 11:
+				case 12:
+				case 13:
+				case 14:
+				case 15:
+				case 16:
+				case 17:
+				case 18:
+				case 19:
+				case 20:
+				case 21:
+				case 22:
+				case 23:
+				case 24:
+				case 25:
+				case 26:
+				case 27:
+				case 28:
+				case 29:
+				case 30:
+				case 31:
+				case 32:
+				case 33:
+				case 34:
+				case 35:
+				case 36:
+				case 37:
+				case 38:
+				case 39:
+				case 40:
+				case 41:
+				case 42:
+				case 43:
+				case 44:
+				case 45:
+				case 46:
+				case 47:
+				case 48:
+				case 49:
+				case 50:
+				case 51:
+				case 52:
+				case 53:
+				case 54:
+				case 55:
+				case 56:
+				case 57:
+				case 58:
+				case 59:
+				case 60:
+				case 61:
+				case 62:
+				case 63:
+				case 64:
+				case 65:
+				case 66:
+				case 67:
+				case 68:
+				case 69:
+				case 70:
+				case 71:
+				case 72:
+				case 73:
+				case 74:
+				case 75:
+				case 76:
+				case 77:
+				case 78:
+				case 79:
+				case 80:
+				case 81:
+				case 82:
+				case 83:
+				case 84:
+				case 85:
+				case 86:
+				case 87:
+				case 88:
+				case 89:
+				case 90:
+				case 91:
+				case 92:
+				case 93:
+				case 94:
+				case 95:
+				case 96:
+				case 97:
+				case 98:
+				case 99:
+				case 100:
+				case 101:
+				case 102:
+				case 103:
+				case 104:
+				case 105:
+				case 106:
+				case 107:
+				case 108:
+				case 109:
+				case 110:
+				case 111:
+				case 112:
+				case 113:
+				case 114:
+				case 115:
+				case 116:
+				case 117:
+				case 118:
+				case 119:
+				case 120:
+				case 121:
+				case 122:
+				case 123:
+				case 124:
+				case 125:
+				case 126:
+				case 127:
+				case 128:
+				case 129:
+				case 130:
+				case 131:
+				case 132:
+				case 133:
+				case 134:
+				case 135:
+				case 136:
+				case 137:
+				case 138:
+				case 139:
+				case 140:
+				case 141:
+				case 142:
+				case 143:
+				case 144:
+				case 145:
+				case 146:
+				case 147:
+				case 148:
+				case 149:
+				case 150:
+				case 151:
+				case 152:
+				case 153:
+				case 154:
+				case 155:
+				case 156:
+				case 157:
+				case 158:
+				case 159:
+				case 160:
+				case 161:
+				case 162:
+				case 163:
+				case 164:
+				case 165:
+				case 166:
+				case 167:
+				case 168:
+				case 169:
+				case 170:
+				case 171:
+				case 172:
+				case 173:
+				case 174:
+				case 175:
+				case 176:
+				case 177:
+				case 178:
+				case 179:
+				case 180:
+				case 181:
+				case 182:
+				case 183:
+				case 184:
+				case 185:
+				case 186:
+				case 187:
+				case 188:
+				case 189:
+				case 190:
+				case 191:
+				case 192:
+				case 193:
+				case 194:
+				case 195:
+				case 196:
+				case 197:
+				case 198:
+				case 199:
+				case 200:
+				case 201:
+				case 202:
+				case 203:
+				case 204:
+				case 205:
+				case 206:
+				case 207:
+				case 208:
+				case 209:
+				case 210:
+				case 211:
+				case 212:
+				case 213:
+				case 214:
+				case 215:
+				case 216:
+				case 217:
+				case 218:
+				case 219:
+				case 220:
+				case 221:
+				case 222:
+				case 223:
+				case 224:
+				case 225:
+				case 226:
+				case 227:
+				case 228:
+				case 229:
+				case 230:
+				case 231:
+				case 232:
+				case 233:
+				case 234:
+				case 235:
+				case 236:
+				case 237:
+				case 238:
+				case 239:
+				case 240:
+				case 241:
+				case 242:
+				case 243:
+				case 244:
+				case 245:
+				case 246:
+				case 247:
+				case 248:
+				case 249:
+				case 250:
+				case 251:
+				case 252:
+				case 253:
+				case 254:
+				case 255:
+				case 256:
+				case 257:
+				case 258:
+				case 260:
+				case 261:
+				case 262:
+				case 263:
+				case 264:
+				case 266:
+				case 267:
+				case 268:
+				case 269:
+				case 270:
+				case 271:
+				case 272:
+				case 273:
+				case 274:
+				case 275:
+				case 276:
+				case 277:
+				case 278:
+				case 279:
+				case 280:
+				case 281:
+				case 282:
+				case 283:
+				case 284:
+				case 285:
+				case 286:
+				case 287:
+				case 288:
+				case 289:
+				case 290:
+				case 291:
+				case 292:
+				case 293:
+				case 294:
+				case 295:
+				case 296:
+				case 297:
+				case 298:
+				case 299:
+				case 300:
+				case 301:
+				case 302:
+				case 303:
+				case 304:
+				case 305:
+				case 306:
+				case 307:
+				case 308:
+				case 309:
+				case 310:
+				case 311:
+				case 312:
+				case 313:
+				case 314:
+				case 315:
+				case 316:
+				case 317:
+				case 318:
+				case 319:
+				case 320:
+				case 321:
+				case 322:
+				case 323:
+				case 324:
+				case 325:
+				case 326:
+				case 327:
+				case 328:
+				case 329:
+				case 330:
+				case 331:
+				case 332:
+				case 333:
+				case 334:
+				case 335:
+				case 336:
+				case 337:
+				HActiveSleep:
+
+					cycles.hClock = 338;
+
+					if (cycles.count <= 338)
+						break;
+					// fallthrough
 
-					case 338:
+				case 338:
 
-						if (++scanline_sleep < PPU_DENDY_VSLEEP)
-						{
-							cycles.hClock = 0;
-							cycles.vClock += HCLOCK_DUMMY;
+					if (++scanline_sleep < PPU_DENDY_VSLEEP)
+					{
+						cycles.hClock = 0;
+						cycles.vClock += HCLOCK_DUMMY;
 
-							if (cycles.count <= HCLOCK_DUMMY)
-								break;
+						if (cycles.count <= HCLOCK_DUMMY)
+							break;
 
-							cycles.count -= HCLOCK_DUMMY;
+						cycles.count -= HCLOCK_DUMMY;
 
-							goto HActiveSleep;
-						}
-						else
-						{
-							cycles.hClock = HCLOCK_VBLANK_0;
+						goto HActiveSleep;
+					}
+					else
+					{
+						cycles.hClock = HCLOCK_VBLANK_0;
 
-							if (cycles.count <= HCLOCK_VBLANK_0)
-								break;
-						}
-						// fallthrough
+						if (cycles.count <= HCLOCK_VBLANK_0)
+							break;
+					}
+					// fallthrough
 
-					case HCLOCK_VBLANK_0:
-						goto VBlank0;
+				case HCLOCK_VBLANK_0:
+					goto VBlank0;
 
-					case HCLOCK_VBLANK_1:
-						goto VBlank1;
+				case HCLOCK_VBLANK_1:
+					goto VBlank1;
 
-					case HCLOCK_VBLANK_2:
-						goto VBlank2;
+				case HCLOCK_VBLANK_2:
+					goto VBlank2;
 				}
 			}
 			else if (regs.ctrl[1] & Regs::CTRL1_BG_SP_ENABLED)
 			{
 				switch (cycles.hClock)
 				{
-					case 0:
-					case 8:
-					case 16:
-					case 24:
-					case 32:
-					case 40:
-					case 48:
-					case 56:
-					case 72:
-					case 80:
-					case 88:
-					case 96:
-					case 104:
-					case 112:
-					case 120:
-					case 128:
-					case 136:
-					case 144:
-					case 152:
-					case 160:
-					case 168:
-					case 176:
-					case 184:
-					case 192:
-					case 200:
-					case 208:
-					case 216:
-					case 224:
-					case 232:
-					case 240:
-					case 248:
-					HActive:
-
-						LoadTiles();
-						EvaluateSpritesEven();
-						OpenName();
-						RenderPixel();
+				case 0:
+				case 8:
+				case 16:
+				case 24:
+				case 32:
+				case 40:
+				case 48:
+				case 56:
+				case 72:
+				case 80:
+				case 88:
+				case 96:
+				case 104:
+				case 112:
+				case 120:
+				case 128:
+				case 136:
+				case 144:
+				case 152:
+				case 160:
+				case 168:
+				case 176:
+				case 184:
+				case 192:
+				case 200:
+				case 208:
+				case 216:
+				case 224:
+				case 232:
+				case 240:
+				case 248:
+				HActive:
+
+					LoadTiles();
+					EvaluateSpritesEven();
+					OpenName();
+					RenderPixel();
+
+					if (cycles.count <= cycles.hClock)
+						break;
+					// fallthrough
 
-						if (cycles.count <= cycles.hClock)
-							break;
-						// fallthrough
-
-					case 1:
-					case 9:
-					case 17:
-					case 25:
-					case 33:
-					case 41:
-					case 49:
-					case 57:
-					case 65:
-					case 73:
-					case 81:
-					case 89:
-					case 97:
-					case 105:
-					case 113:
-					case 121:
-					case 129:
-					case 137:
-					case 145:
-					case 153:
-					case 161:
-					case 169:
-					case 177:
-					case 185:
-					case 193:
-					case 201:
-					case 209:
-					case 217:
-					case 225:
-					case 233:
-					case 241:
-					case 249:
-
-						FetchName();
-						EvaluateSpritesOdd();
-						RenderPixel();
+				case 1:
+				case 9:
+				case 17:
+				case 25:
+				case 33:
+				case 41:
+				case 49:
+				case 57:
+				case 65:
+				case 73:
+				case 81:
+				case 89:
+				case 97:
+				case 105:
+				case 113:
+				case 121:
+				case 129:
+				case 137:
+				case 145:
+				case 153:
+				case 161:
+				case 169:
+				case 177:
+				case 185:
+				case 193:
+				case 201:
+				case 209:
+				case 217:
+				case 225:
+				case 233:
+				case 241:
+				case 249:
+
+					FetchName();
+					EvaluateSpritesOdd();
+					RenderPixel();
+
+					if (cycles.count <= cycles.hClock)
+						break;
+					// fallthrough
 
-						if (cycles.count <= cycles.hClock)
-							break;
-						// fallthrough
-
-					case 2:
-					case 10:
-					case 18:
-					case 26:
-					case 34:
-					case 42:
-					case 50:
-					case 58:
-					case 66:
-					case 74:
-					case 82:
-					case 90:
-					case 98:
-					case 106:
-					case 114:
-					case 122:
-					case 130:
-					case 138:
-					case 146:
-					case 154:
-					case 162:
-					case 170:
-					case 178:
-					case 186:
-					case 194:
-					case 202:
-					case 210:
-					case 218:
-					case 226:
-					case 234:
-					case 242:
-					case 250:
-
-						EvaluateSpritesEven();
-						OpenAttribute();
-						RenderPixel();
+				case 2:
+				case 10:
+				case 18:
+				case 26:
+				case 34:
+				case 42:
+				case 50:
+				case 58:
+				case 66:
+				case 74:
+				case 82:
+				case 90:
+				case 98:
+				case 106:
+				case 114:
+				case 122:
+				case 130:
+				case 138:
+				case 146:
+				case 154:
+				case 162:
+				case 170:
+				case 178:
+				case 186:
+				case 194:
+				case 202:
+				case 210:
+				case 218:
+				case 226:
+				case 234:
+				case 242:
+				case 250:
+
+					EvaluateSpritesEven();
+					OpenAttribute();
+					RenderPixel();
+
+					if (cycles.count <= cycles.hClock)
+						break;
+					// fallthrough
 
-						if (cycles.count <= cycles.hClock)
-							break;
-						// fallthrough
-
-					case 3:
-					case 11:
-					case 19:
-					case 27:
-					case 35:
-					case 43:
-					case 51:
-					case 59:
-					case 67:
-					case 75:
-					case 83:
-					case 91:
-					case 99:
-					case 107:
-					case 115:
-					case 123:
-					case 131:
-					case 139:
-					case 147:
-					case 155:
-					case 163:
-					case 171:
-					case 179:
-					case 187:
-					case 195:
-					case 203:
-					case 211:
-					case 219:
-					case 227:
-					case 235:
-					case 243:
-					case 251:
-
-						FetchAttribute();
-						EvaluateSpritesOdd();
-
-						if (cycles.hClock == 251)
-							scroll.ClockY();
-
-						scroll.ClockX();
-						RenderPixel();
+				case 3:
+				case 11:
+				case 19:
+				case 27:
+				case 35:
+				case 43:
+				case 51:
+				case 59:
+				case 67:
+				case 75:
+				case 83:
+				case 91:
+				case 99:
+				case 107:
+				case 115:
+				case 123:
+				case 131:
+				case 139:
+				case 147:
+				case 155:
+				case 163:
+				case 171:
+				case 179:
+				case 187:
+				case 195:
+				case 203:
+				case 211:
+				case 219:
+				case 227:
+				case 235:
+				case 243:
+				case 251:
+
+					FetchAttribute();
+					EvaluateSpritesOdd();
+
+					if (cycles.hClock == 251)
+						scroll.ClockY();
+
+					scroll.ClockX();
+					RenderPixel();
+
+					if (cycles.count <= cycles.hClock)
+						break;
+					// fallthrough
 
-						if (cycles.count <= cycles.hClock)
-							break;
-						// fallthrough
-
-					case 4:
-					case 12:
-					case 20:
-					case 28:
-					case 36:
-					case 44:
-					case 52:
-					case 60:
-					case 68:
-					case 76:
-					case 84:
-					case 92:
-					case 100:
-					case 108:
-					case 116:
-					case 124:
-					case 132:
-					case 140:
-					case 148:
-					case 156:
-					case 164:
-					case 172:
-					case 180:
-					case 188:
-					case 196:
-					case 204:
-					case 212:
-					case 220:
-					case 228:
-					case 236:
-					case 244:
-					case 252:
-
-						EvaluateSpritesEven();
-						OpenPattern( io.pattern | 0x0 );
-						RenderPixel();
+				case 4:
+				case 12:
+				case 20:
+				case 28:
+				case 36:
+				case 44:
+				case 52:
+				case 60:
+				case 68:
+				case 76:
+				case 84:
+				case 92:
+				case 100:
+				case 108:
+				case 116:
+				case 124:
+				case 132:
+				case 140:
+				case 148:
+				case 156:
+				case 164:
+				case 172:
+				case 180:
+				case 188:
+				case 196:
+				case 204:
+				case 212:
+				case 220:
+				case 228:
+				case 236:
+				case 244:
+				case 252:
+
+					EvaluateSpritesEven();
+					OpenPattern(io.pattern | 0x0);
+					RenderPixel();
+
+					if (cycles.count <= cycles.hClock)
+						break;
+					// fallthrough
 
-						if (cycles.count <= cycles.hClock)
-							break;
-						// fallthrough
-
-					case 5:
-					case 13:
-					case 21:
-					case 29:
-					case 37:
-					case 45:
-					case 53:
-					case 61:
-					case 69:
-					case 77:
-					case 85:
-					case 93:
-					case 101:
-					case 109:
-					case 117:
-					case 125:
-					case 133:
-					case 141:
-					case 149:
-					case 157:
-					case 165:
-					case 173:
-					case 181:
-					case 189:
-					case 197:
-					case 205:
-					case 213:
-					case 221:
-					case 229:
-					case 237:
-					case 245:
-					case 253:
-
-						FetchBgPattern0();
-						EvaluateSpritesOdd();
-						RenderPixel();
+				case 5:
+				case 13:
+				case 21:
+				case 29:
+				case 37:
+				case 45:
+				case 53:
+				case 61:
+				case 69:
+				case 77:
+				case 85:
+				case 93:
+				case 101:
+				case 109:
+				case 117:
+				case 125:
+				case 133:
+				case 141:
+				case 149:
+				case 157:
+				case 165:
+				case 173:
+				case 181:
+				case 189:
+				case 197:
+				case 205:
+				case 213:
+				case 221:
+				case 229:
+				case 237:
+				case 245:
+				case 253:
+
+					FetchBgPattern0();
+					EvaluateSpritesOdd();
+					RenderPixel();
+
+					if (cycles.count <= cycles.hClock)
+						break;
+					// fallthrough
 
-						if (cycles.count <= cycles.hClock)
-							break;
-						// fallthrough
-
-					case 6:
-					case 14:
-					case 22:
-					case 30:
-					case 38:
-					case 46:
-					case 54:
-					case 62:
-					case 70:
-					case 78:
-					case 86:
-					case 94:
-					case 102:
-					case 110:
-					case 118:
-					case 126:
-					case 134:
-					case 142:
-					case 150:
-					case 158:
-					case 166:
-					case 174:
-					case 182:
-					case 190:
-					case 198:
-					case 206:
-					case 214:
-					case 222:
-					case 230:
-					case 238:
-					case 246:
-					case 254:
-
-						EvaluateSpritesEven();
-						OpenPattern( io.pattern | 0x8 );
-						RenderPixel();
+				case 6:
+				case 14:
+				case 22:
+				case 30:
+				case 38:
+				case 46:
+				case 54:
+				case 62:
+				case 70:
+				case 78:
+				case 86:
+				case 94:
+				case 102:
+				case 110:
+				case 118:
+				case 126:
+				case 134:
+				case 142:
+				case 150:
+				case 158:
+				case 166:
+				case 174:
+				case 182:
+				case 190:
+				case 198:
+				case 206:
+				case 214:
+				case 222:
+				case 230:
+				case 238:
+				case 246:
+				case 254:
+
+					EvaluateSpritesEven();
+					OpenPattern(io.pattern | 0x8);
+					RenderPixel();
+
+					if (cycles.count <= cycles.hClock)
+						break;
 
-						if (cycles.count <= cycles.hClock)
-							break;
+					if (cycles.hClock == 255)
+						goto HActive255;
+					// fallthrough
 
-						if (cycles.hClock == 255)
-							goto HActive255;
-						// fallthrough
-
-					case 7:
-					case 15:
-					case 23:
-					case 31:
-					case 39:
-					case 47:
-					case 55:
-					case 63:
-					case 71:
-					case 79:
-					case 87:
-					case 95:
-					case 103:
-					case 111:
-					case 119:
-					case 127:
-					case 135:
-					case 143:
-					case 151:
-					case 159:
-					case 167:
-					case 175:
-					case 183:
-					case 191:
-					case 199:
-					case 207:
-					case 215:
-					case 223:
-					case 231:
-					case 239:
-					case 247:
-
-						FetchBgPattern1();
-						EvaluateSpritesOdd();
-						RenderPixel();
-						tiles.mask = tiles.show[0];
-						oam.mask = oam.show[0];
+				case 7:
+				case 15:
+				case 23:
+				case 31:
+				case 39:
+				case 47:
+				case 55:
+				case 63:
+				case 71:
+				case 79:
+				case 87:
+				case 95:
+				case 103:
+				case 111:
+				case 119:
+				case 127:
+				case 135:
+				case 143:
+				case 151:
+				case 159:
+				case 167:
+				case 175:
+				case 183:
+				case 191:
+				case 199:
+				case 207:
+				case 215:
+				case 223:
+				case 231:
+				case 239:
+				case 247:
+
+					FetchBgPattern1();
+					EvaluateSpritesOdd();
+					RenderPixel();
+					tiles.mask = tiles.show[0];
+					oam.mask = oam.show[0];
+
+					if (cycles.count <= cycles.hClock)
+						break;
 
-						if (cycles.count <= cycles.hClock)
-							break;
+					if (cycles.hClock != 64)
+						goto HActive;
+					// fallthrough
 
-						if (cycles.hClock != 64)
-							goto HActive;
-						// fallthrough
+				case 64:
 
-					case 64:
+					NST_VERIFY(regs.oam == 0);
+					oam.address = regs.oam & Oam::OFFSET_TO_0_1;
+					oam.phase = &Ppu::EvaluateSpritesPhase1;
+					oam.latch = 0xFF;
+					goto HActive;
 
-						NST_VERIFY( regs.oam == 0 );
-						oam.address = regs.oam & Oam::OFFSET_TO_0_1;
-						oam.phase = &Ppu::EvaluateSpritesPhase1;
-						oam.latch = 0xFF;
-						goto HActive;
+				case 255:
+				HActive255:
 
-					case 255:
-					HActive255:
+					FetchBgPattern1();
+					EvaluateSpritesOdd();
+					RenderPixel255();
 
-						FetchBgPattern1();
-						EvaluateSpritesOdd();
-						RenderPixel255();
+					if (cycles.count <= 256)
+						break;
+					// fallthrough
 
-						if (cycles.count <= 256)
-							break;
-						// fallthrough
+				case 256:
+
+					OpenName();
+					oam.latch = 0xFF;
+					cycles.hClock = 257;
 
-					case 256:
+					if (cycles.count <= 257)
+						break;
+					// fallthrough
 
-						OpenName();
-						oam.latch = 0xFF;
-						cycles.hClock = 257;
+				case 257:
 
-						if (cycles.count <= 257)
-							break;
-						// fallthrough
+					if (hBlankHook)
+						hBlankHook.Execute();
 
-					case 257:
+					scroll.ResetX();
+					oam.visible = oam.output;
+					cycles.hClock = 258;
 
-						if (hBlankHook)
-							hBlankHook.Execute();
+					if (cycles.count <= 258)
+						break;
+					// fallthrough
 
-						scroll.ResetX();
-						oam.visible = oam.output;
-						cycles.hClock = 258;
+				case 258:
+				case 266:
+				case 274:
+				case 282:
+				case 290:
+				case 298:
+				case 306:
+				case 314:
+				HBlankSp:
 
-						if (cycles.count <= 258)
-							break;
-						// fallthrough
-
-					case 258:
-					case 266:
-					case 274:
-					case 282:
-					case 290:
-					case 298:
-					case 306:
-					case 314:
-					HBlankSp:
-
-						OpenName();
-						cycles.hClock += 2;
+					OpenName();
+					cycles.hClock += 2;
 
-						if (cycles.count <= cycles.hClock)
-							break;
-						// fallthrough
-
-					case 260:
-					case 268:
-					case 276:
-					case 284:
-					case 292:
-					case 300:
-					case 308:
-					case 316:
-					{
-						const byte* const buffer = oam.buffer + ((cycles.hClock - 260) / 2);
-						OpenPattern( buffer >= oam.buffered ? OpenSprite() : OpenSprite(buffer) );
+					if (cycles.count <= cycles.hClock)
+						break;
+					// fallthrough
 
-						if (scanline == 238 && cycles.hClock == 316)
-							regs.oam = 0;
+				case 260:
+				case 268:
+				case 276:
+				case 284:
+				case 292:
+				case 300:
+				case 308:
+				case 316:
+				{
+					const byte *const buffer = oam.buffer + ((cycles.hClock - 260) / 2);
+					OpenPattern(buffer >= oam.buffered ? OpenSprite() : OpenSprite(buffer));
 
-						if (cycles.count <= ++cycles.hClock)
-							break;
-					}
+					if (scanline == 238 && cycles.hClock == 316)
+						regs.oam = 0;
+
+					if (cycles.count <= ++cycles.hClock)
+						break;
+				}
 					// fallthrough
 
-					case 261:
-					case 269:
-					case 277:
-					case 285:
-					case 293:
-					case 301:
-					case 309:
-					case 317:
+				case 261:
+				case 269:
+				case 277:
+				case 285:
+				case 293:
+				case 301:
+				case 309:
+				case 317:
 
-						if (oam.buffer + ((cycles.hClock - 261) / 2) < oam.buffered)
-							io.pattern = FetchSpPattern();
+					if (oam.buffer + ((cycles.hClock - 261) / 2) < oam.buffered)
+						io.pattern = FetchSpPattern();
 
-						if (cycles.count <= ++cycles.hClock)
-							break;
-						// fallthrough
+					if (cycles.count <= ++cycles.hClock)
+						break;
+					// fallthrough
 
-					case 262:
-					case 270:
-					case 278:
-					case 286:
-					case 294:
-					case 302:
-					case 310:
-					case 318:
+				case 262:
+				case 270:
+				case 278:
+				case 286:
+				case 294:
+				case 302:
+				case 310:
+				case 318:
 
-						OpenPattern( io.address | 0x8 );
+					OpenPattern(io.address | 0x8);
 
-						if (cycles.count <= ++cycles.hClock)
-							break;
-						// fallthrough
-
-					case 263:
-					case 271:
-					case 279:
-					case 287:
-					case 295:
-					case 303:
-					case 311:
-					case 319:
-					{
-						const byte* const buffer = oam.buffer + ((cycles.hClock - 263) / 2);
+					if (cycles.count <= ++cycles.hClock)
+						break;
+					// fallthrough
 
-						if (buffer < oam.buffered)
-							LoadSprite( io.pattern, FetchSpPattern(), buffer );
+				case 263:
+				case 271:
+				case 279:
+				case 287:
+				case 295:
+				case 303:
+				case 311:
+				case 319:
+				{
+					const byte *const buffer = oam.buffer + ((cycles.hClock - 263) / 2);
 
-						if (cycles.count <= ++cycles.hClock)
-							break;
+					if (buffer < oam.buffered)
+						LoadSprite(io.pattern, FetchSpPattern(), buffer);
 
-						if (cycles.hClock == 320)
-							goto HBlankBg;
-					}
+					if (cycles.count <= ++cycles.hClock)
+						break;
+
+					if (cycles.hClock == 320)
+						goto HBlankBg;
+				}
 					// fallthrough
 
-					case 264:
-					case 272:
-					case 280:
-					case 288:
-					case 296:
-					case 304:
-					case 312:
+				case 264:
+				case 272:
+				case 280:
+				case 288:
+				case 296:
+				case 304:
+				case 312:
 
-						OpenName();
-						cycles.hClock += 2;
+					OpenName();
+					cycles.hClock += 2;
 
-						if (cycles.count <= cycles.hClock)
-							break;
+					if (cycles.count <= cycles.hClock)
+						break;
 
-						goto HBlankSp;
-						// fallthrough
+					goto HBlankSp;
+					// fallthrough
 
-					case 320:
-					HBlankBg:
+				case 320:
+				HBlankBg:
 
-						if (oam.buffer + (8*4) < oam.buffered)
-							LoadExtendedSprites();
+					if (oam.buffer + (8 * 4) < oam.buffered)
+						LoadExtendedSprites();
 
-						OpenName();
+					OpenName();
 
-						if (hActiveHook)
-							hActiveHook.Execute();
+					if (hActiveHook)
+						hActiveHook.Execute();
 
-						oam.latch = oam.ram[0];
-						oam.buffered = oam.buffer;
-						oam.spriteZeroInLine = false;
-						oam.index = 0;
-						oam.phase = &Ppu::EvaluateSpritesPhase0;
-						cycles.hClock = 321;
+					oam.latch = oam.ram[0];
+					oam.buffered = oam.buffer;
+					oam.spriteZeroInLine = false;
+					oam.index = 0;
+					oam.phase = &Ppu::EvaluateSpritesPhase0;
+					cycles.hClock = 321;
 
-						if (cycles.count <= 321)
-							break;
-						// fallthrough
+					if (cycles.count <= 321)
+						break;
+					// fallthrough
 
-					case 321:
+				case 321:
 
-						FetchName();
-						cycles.hClock = 322;
+					FetchName();
+					cycles.hClock = 322;
 
-						if (cycles.count <= 322)
-							break;
-						// fallthrough
+					if (cycles.count <= 322)
+						break;
+					// fallthrough
 
-					case 322:
+				case 322:
 
-						OpenAttribute();
-						cycles.hClock = 323;
+					OpenAttribute();
+					cycles.hClock = 323;
 
-						if (cycles.count <= 323)
-							break;
-						// fallthrough
+					if (cycles.count <= 323)
+						break;
+					// fallthrough
 
-					case 323:
+				case 323:
 
-						FetchAttribute();
-						scroll.ClockX();
-						cycles.hClock = 324;
+					FetchAttribute();
+					scroll.ClockX();
+					cycles.hClock = 324;
 
-						if (cycles.count <= 324)
-							break;
-						// fallthrough
+					if (cycles.count <= 324)
+						break;
+					// fallthrough
 
-					case 324:
+				case 324:
 
-						OpenPattern( io.pattern | 0x0 );
-						cycles.hClock = 325;
+					OpenPattern(io.pattern | 0x0);
+					cycles.hClock = 325;
 
-						if (cycles.count <= 325)
-							break;
-						// fallthrough
+					if (cycles.count <= 325)
+						break;
+					// fallthrough
 
-					case 325:
+				case 325:
 
-						FetchBgPattern0();
-						cycles.hClock = 326;
+					FetchBgPattern0();
+					cycles.hClock = 326;
 
-						if (cycles.count <= 326)
-							break;
-						// fallthrough
+					if (cycles.count <= 326)
+						break;
+					// fallthrough
 
-					case 326:
+				case 326:
 
-						OpenPattern( io.pattern | 0x8 );
-						cycles.hClock = 327;
+					OpenPattern(io.pattern | 0x8);
+					cycles.hClock = 327;
 
-						if (cycles.count <= 327)
-							break;
-						// fallthrough
+					if (cycles.count <= 327)
+						break;
+					// fallthrough
 
-					case 327:
+				case 327:
 
-						FetchBgPattern1();
-						cycles.hClock = 328;
+					FetchBgPattern1();
+					cycles.hClock = 328;
 
-						if (cycles.count <= 328)
-							break;
-						// fallthrough
+					if (cycles.count <= 328)
+						break;
+					// fallthrough
 
-					case 328:
+				case 328:
 
-						PreLoadTiles();
-						OpenName();
-						cycles.hClock = 329;
+					PreLoadTiles();
+					OpenName();
+					cycles.hClock = 329;
 
-						if (cycles.count <= 329)
-							break;
-						// fallthrough
+					if (cycles.count <= 329)
+						break;
+					// fallthrough
 
-					case 329:
+				case 329:
 
-						FetchName();
-						cycles.hClock = 330;
+					FetchName();
+					cycles.hClock = 330;
 
-						if (cycles.count <= 330)
-							break;
-						// fallthrough
+					if (cycles.count <= 330)
+						break;
+					// fallthrough
 
-					case 330:
+				case 330:
 
-						OpenAttribute();
-						cycles.hClock = 331;
+					OpenAttribute();
+					cycles.hClock = 331;
 
-						if (cycles.count <= 331)
-							break;
-						// fallthrough
+					if (cycles.count <= 331)
+						break;
+					// fallthrough
 
-					case 331:
+				case 331:
 
-						FetchAttribute();
-						scroll.ClockX();
-						cycles.hClock = 332;
+					FetchAttribute();
+					scroll.ClockX();
+					cycles.hClock = 332;
 
-						if (cycles.count <= 332)
-							break;
-						// fallthrough
+					if (cycles.count <= 332)
+						break;
+					// fallthrough
 
-					case 332:
+				case 332:
 
-						OpenPattern( io.pattern | 0x0 );
-						cycles.hClock = 333;
+					OpenPattern(io.pattern | 0x0);
+					cycles.hClock = 333;
 
-						if (cycles.count <= 333)
-							break;
-						// fallthrough
+					if (cycles.count <= 333)
+						break;
+					// fallthrough
 
-					case 333:
+				case 333:
 
-						FetchBgPattern0();
-						cycles.hClock = 334;
+					FetchBgPattern0();
+					cycles.hClock = 334;
 
-						if (cycles.count <= 334)
-							break;
-						// fallthrough
+					if (cycles.count <= 334)
+						break;
+					// fallthrough
 
-					case 334:
+				case 334:
 
-						OpenPattern( io.pattern | 0x8 );
-						cycles.hClock = 335;
+					OpenPattern(io.pattern | 0x8);
+					cycles.hClock = 335;
 
-						if (cycles.count <= 335)
-							break;
-						// fallthrough
+					if (cycles.count <= 335)
+						break;
+					// fallthrough
 
-					case 335:
+				case 335:
 
-						FetchBgPattern1();
-						cycles.hClock = 336;
+					FetchBgPattern1();
+					cycles.hClock = 336;
 
-						if (cycles.count <= 336)
-							break;
-						// fallthrough
+					if (cycles.count <= 336)
+						break;
+					// fallthrough
 
-					case 336:
+				case 336:
 
-						OpenName();
-						cycles.hClock = 337;
+					OpenName();
+					cycles.hClock = 337;
 
-						if (cycles.count <= 337)
-							break;
-						// fallthrough
+					if (cycles.count <= 337)
+						break;
+					// fallthrough
 
-					case 337:
+				case 337:
 
-						tiles.mask = tiles.show[1];
-						oam.mask = oam.show[1];
+					tiles.mask = tiles.show[1];
+					oam.mask = oam.show[1];
 
-						if (scanline == SCANLINE_HDUMMY && model == PPU_RP2C02)
+					if (scanline == SCANLINE_HDUMMY && model == PPU_RP2C02)
+					{
+						if (regs.frame)
+						{
+							output.burstPhase = (output.burstPhase + 2) % 3;
+							cpu.SetFrameCycles(PPU_RP2C02_HVSYNC_1);
+						}
+						else
 						{
-							if (regs.frame)
-							{
-								output.burstPhase = (output.burstPhase + 2) % 3;
-								cpu.SetFrameCycles( PPU_RP2C02_HVSYNC_1 );
-							}
-							else
-							{
-								output.burstPhase = (output.burstPhase + 1) % 3;
-							}
+							output.burstPhase = (output.burstPhase + 1) % 3;
 						}
+					}
 
-						cycles.hClock = 338;
+					cycles.hClock = 338;
 
-						if (cycles.count <= 338)
-							break;
-						// fallthrough
+					if (cycles.count <= 338)
+						break;
+					// fallthrough
+
+				case 338:
 
-					case 338:
+					OpenName();
 
-						OpenName();
+					if (scanline++ != 239)
+					{
+						const uint line = (scanline != 0 || model != PPU_RP2C02 || !regs.frame ? HCLOCK_DUMMY : (HCLOCK_DUMMY - 1));
+
+						cycles.hClock = 0;
+						cycles.vClock += line;
+
+						if (cycles.count <= line)
+							break;
 
-						if (scanline++ != 239)
+						cycles.count -= line;
+
+						goto HActive;
+					}
+					else
+					{
+						if (model == PPU_DENDY)
 						{
-							const uint line = (scanline != 0 || model != PPU_RP2C02 || !regs.frame ? HCLOCK_DUMMY : (HCLOCK_DUMMY - 1));
+							scanline_sleep = 1;
 
 							cycles.hClock = 0;
-							cycles.vClock += line;
+							cycles.vClock += HCLOCK_DUMMY;
 
-							if (cycles.count <= line)
+							if (cycles.count <= HCLOCK_DUMMY)
 								break;
 
-							cycles.count -= line;
+							cycles.count -= HCLOCK_DUMMY;
 
-							goto HActive;
+							goto HActiveSleep;
 						}
 						else
 						{
-							if (model == PPU_DENDY)
-							{
-								scanline_sleep = 1;
+							cycles.hClock = HCLOCK_VBLANK_0;
 
-								cycles.hClock = 0;
-								cycles.vClock += HCLOCK_DUMMY;
+							if (cycles.count <= HCLOCK_VBLANK_0)
+								break;
+						}
+					}
+					// fallthrough
 
-								if (cycles.count <= HCLOCK_DUMMY)
-									break;
+				case HCLOCK_VBLANK_0:
+				VBlank0:
 
-								cycles.count -= HCLOCK_DUMMY;
+					regs.status |= Regs::STATUS_VBLANKING;
+					cycles.hClock = HCLOCK_VBLANK_1;
 
-								goto HActiveSleep;
-							}
-							else
-							{
-								cycles.hClock = HCLOCK_VBLANK_0;
+					if (cycles.count <= HCLOCK_VBLANK_1)
+						break;
+					// fallthrough
 
-								if (cycles.count <= HCLOCK_VBLANK_0)
-									break;
-							}
-						}
-						// fallthrough
+				case HCLOCK_VBLANK_1:
+				VBlank1:
 
-					case HCLOCK_VBLANK_0:
-					VBlank0:
+					regs.status = (regs.status & 0xFF) | (regs.status >> 1 & Regs::STATUS_VBLANK);
+					oam.visible = oam.output;
+					cycles.hClock = HCLOCK_VBLANK_2;
 
-						regs.status |= Regs::STATUS_VBLANKING;
-						cycles.hClock = HCLOCK_VBLANK_1;
+					if (cycles.count <= HCLOCK_VBLANK_2)
+						break;
+					// fallthrough
 
-						if (cycles.count <= HCLOCK_VBLANK_1)
-							break;
-						// fallthrough
+				case HCLOCK_VBLANK_2:
+				VBlank2:
 
-					case HCLOCK_VBLANK_1:
-					VBlank1:
+					scanline_sleep = 0;
 
-						regs.status = (regs.status & 0xFF) | (regs.status >> 1 & Regs::STATUS_VBLANK);
-						oam.visible = oam.output;
-						cycles.hClock = HCLOCK_VBLANK_2;
+					cycles.hClock = HCLOCK_DUMMY;
+					cycles.count = Cpu::CYCLE_MAX;
+					cycles.reset = 0;
 
-						if (cycles.count <= HCLOCK_VBLANK_2)
-							break;
-						// fallthrough
-
-					case HCLOCK_VBLANK_2:
-					VBlank2:
-
-						scanline_sleep = 0;
-
-						cycles.hClock = HCLOCK_DUMMY;
-						cycles.count = Cpu::CYCLE_MAX;
-						cycles.reset = 0;
-
-						if (regs.ctrl[0] & regs.status & Regs::CTRL0_NMI)
-							cpu.DoNMI( cpu.GetFrameCycles() );
-
-						return;
-
-					case HCLOCK_BOOT:
-						goto Boot;
-
-					case HCLOCK_DUMMY+0:
-
-						regs.status = 0;
-						scanline = SCANLINE_HDUMMY;
-						// fallthrough
-
-					case HCLOCK_DUMMY+8:
-					case HCLOCK_DUMMY+16:
-					case HCLOCK_DUMMY+24:
-					case HCLOCK_DUMMY+32:
-					case HCLOCK_DUMMY+40:
-					case HCLOCK_DUMMY+48:
-					case HCLOCK_DUMMY+56:
-					case HCLOCK_DUMMY+64:
-					case HCLOCK_DUMMY+72:
-					case HCLOCK_DUMMY+80:
-					case HCLOCK_DUMMY+88:
-					case HCLOCK_DUMMY+96:
-					case HCLOCK_DUMMY+104:
-					case HCLOCK_DUMMY+112:
-					case HCLOCK_DUMMY+120:
-					case HCLOCK_DUMMY+128:
-					case HCLOCK_DUMMY+136:
-					case HCLOCK_DUMMY+144:
-					case HCLOCK_DUMMY+152:
-					case HCLOCK_DUMMY+160:
-					case HCLOCK_DUMMY+168:
-					case HCLOCK_DUMMY+176:
-					case HCLOCK_DUMMY+184:
-					case HCLOCK_DUMMY+192:
-					case HCLOCK_DUMMY+200:
-					case HCLOCK_DUMMY+208:
-					case HCLOCK_DUMMY+216:
-					case HCLOCK_DUMMY+224:
-					case HCLOCK_DUMMY+232:
-					case HCLOCK_DUMMY+240:
-					case HCLOCK_DUMMY+248:
-					HDummyBg:
-
-						OpenName();
-						cycles.hClock += 2;
+					if (regs.ctrl[0] & regs.status & Regs::CTRL0_NMI)
+						cpu.DoNMI(cpu.GetFrameCycles());
 
-						if (cycles.count <= cycles.hClock)
-							break;
-						// fallthrough
-
-					case HCLOCK_DUMMY+2:
-					case HCLOCK_DUMMY+10:
-					case HCLOCK_DUMMY+18:
-					case HCLOCK_DUMMY+26:
-					case HCLOCK_DUMMY+34:
-					case HCLOCK_DUMMY+42:
-					case HCLOCK_DUMMY+50:
-					case HCLOCK_DUMMY+58:
-					case HCLOCK_DUMMY+66:
-					case HCLOCK_DUMMY+74:
-					case HCLOCK_DUMMY+82:
-					case HCLOCK_DUMMY+90:
-					case HCLOCK_DUMMY+98:
-					case HCLOCK_DUMMY+106:
-					case HCLOCK_DUMMY+114:
-					case HCLOCK_DUMMY+122:
-					case HCLOCK_DUMMY+130:
-					case HCLOCK_DUMMY+138:
-					case HCLOCK_DUMMY+146:
-					case HCLOCK_DUMMY+154:
-					case HCLOCK_DUMMY+162:
-					case HCLOCK_DUMMY+170:
-					case HCLOCK_DUMMY+178:
-					case HCLOCK_DUMMY+186:
-					case HCLOCK_DUMMY+194:
-					case HCLOCK_DUMMY+202:
-					case HCLOCK_DUMMY+210:
-					case HCLOCK_DUMMY+218:
-					case HCLOCK_DUMMY+226:
-					case HCLOCK_DUMMY+234:
-					case HCLOCK_DUMMY+242:
-					case HCLOCK_DUMMY+250:
-
-						OpenAttribute();
-						cycles.hClock += 2;
+					return;
 
-						if (cycles.count <= cycles.hClock)
-							break;
-						// fallthrough
-
-					case HCLOCK_DUMMY+4:
-					case HCLOCK_DUMMY+12:
-					case HCLOCK_DUMMY+20:
-					case HCLOCK_DUMMY+28:
-					case HCLOCK_DUMMY+36:
-					case HCLOCK_DUMMY+44:
-					case HCLOCK_DUMMY+52:
-					case HCLOCK_DUMMY+60:
-					case HCLOCK_DUMMY+68:
-					case HCLOCK_DUMMY+76:
-					case HCLOCK_DUMMY+84:
-					case HCLOCK_DUMMY+92:
-					case HCLOCK_DUMMY+100:
-					case HCLOCK_DUMMY+108:
-					case HCLOCK_DUMMY+116:
-					case HCLOCK_DUMMY+124:
-					case HCLOCK_DUMMY+132:
-					case HCLOCK_DUMMY+140:
-					case HCLOCK_DUMMY+148:
-					case HCLOCK_DUMMY+156:
-					case HCLOCK_DUMMY+164:
-					case HCLOCK_DUMMY+172:
-					case HCLOCK_DUMMY+180:
-					case HCLOCK_DUMMY+188:
-					case HCLOCK_DUMMY+196:
-					case HCLOCK_DUMMY+204:
-					case HCLOCK_DUMMY+212:
-					case HCLOCK_DUMMY+220:
-					case HCLOCK_DUMMY+228:
-					case HCLOCK_DUMMY+236:
-					case HCLOCK_DUMMY+244:
-					case HCLOCK_DUMMY+252:
-
-						OpenPattern( regs.ctrl[0] << 8 & 0x1000 );
-						cycles.hClock += 2;
+				case HCLOCK_BOOT:
+					goto Boot;
 
-						if (cycles.count <= cycles.hClock)
-							break;
-						// fallthrough
-
-					case HCLOCK_DUMMY+6:
-					case HCLOCK_DUMMY+14:
-					case HCLOCK_DUMMY+22:
-					case HCLOCK_DUMMY+30:
-					case HCLOCK_DUMMY+38:
-					case HCLOCK_DUMMY+46:
-					case HCLOCK_DUMMY+54:
-					case HCLOCK_DUMMY+62:
-					case HCLOCK_DUMMY+70:
-					case HCLOCK_DUMMY+78:
-					case HCLOCK_DUMMY+86:
-					case HCLOCK_DUMMY+94:
-					case HCLOCK_DUMMY+102:
-					case HCLOCK_DUMMY+110:
-					case HCLOCK_DUMMY+118:
-					case HCLOCK_DUMMY+126:
-					case HCLOCK_DUMMY+134:
-					case HCLOCK_DUMMY+142:
-					case HCLOCK_DUMMY+150:
-					case HCLOCK_DUMMY+158:
-					case HCLOCK_DUMMY+166:
-					case HCLOCK_DUMMY+174:
-					case HCLOCK_DUMMY+182:
-					case HCLOCK_DUMMY+190:
-					case HCLOCK_DUMMY+198:
-					case HCLOCK_DUMMY+206:
-					case HCLOCK_DUMMY+214:
-					case HCLOCK_DUMMY+222:
-					case HCLOCK_DUMMY+230:
-					case HCLOCK_DUMMY+238:
-					case HCLOCK_DUMMY+246:
-					case HCLOCK_DUMMY+254:
-
-						OpenPattern( io.address | 0x8 );
-						cycles.hClock += 2;
+				case HCLOCK_DUMMY + 0:
 
-						if (cycles.count <= cycles.hClock)
-							break;
+					regs.status = 0;
+					scanline = SCANLINE_HDUMMY;
+					// fallthrough
 
-						if (cycles.hClock != HCLOCK_DUMMY+256)
-							goto HDummyBg;
-						// fallthrough
+				case HCLOCK_DUMMY + 8:
+				case HCLOCK_DUMMY + 16:
+				case HCLOCK_DUMMY + 24:
+				case HCLOCK_DUMMY + 32:
+				case HCLOCK_DUMMY + 40:
+				case HCLOCK_DUMMY + 48:
+				case HCLOCK_DUMMY + 56:
+				case HCLOCK_DUMMY + 64:
+				case HCLOCK_DUMMY + 72:
+				case HCLOCK_DUMMY + 80:
+				case HCLOCK_DUMMY + 88:
+				case HCLOCK_DUMMY + 96:
+				case HCLOCK_DUMMY + 104:
+				case HCLOCK_DUMMY + 112:
+				case HCLOCK_DUMMY + 120:
+				case HCLOCK_DUMMY + 128:
+				case HCLOCK_DUMMY + 136:
+				case HCLOCK_DUMMY + 144:
+				case HCLOCK_DUMMY + 152:
+				case HCLOCK_DUMMY + 160:
+				case HCLOCK_DUMMY + 168:
+				case HCLOCK_DUMMY + 176:
+				case HCLOCK_DUMMY + 184:
+				case HCLOCK_DUMMY + 192:
+				case HCLOCK_DUMMY + 200:
+				case HCLOCK_DUMMY + 208:
+				case HCLOCK_DUMMY + 216:
+				case HCLOCK_DUMMY + 224:
+				case HCLOCK_DUMMY + 232:
+				case HCLOCK_DUMMY + 240:
+				case HCLOCK_DUMMY + 248:
+				HDummyBg:
+
+					OpenName();
+					cycles.hClock += 2;
+
+					if (cycles.count <= cycles.hClock)
+						break;
+					// fallthrough
 
-					case HCLOCK_DUMMY+256:
-					case HCLOCK_DUMMY+264:
-					case HCLOCK_DUMMY+272:
-					case HCLOCK_DUMMY+280:
-					case HCLOCK_DUMMY+288:
-					case HCLOCK_DUMMY+296:
-					case HCLOCK_DUMMY+312:
-					HDummySp:
+				case HCLOCK_DUMMY + 2:
+				case HCLOCK_DUMMY + 10:
+				case HCLOCK_DUMMY + 18:
+				case HCLOCK_DUMMY + 26:
+				case HCLOCK_DUMMY + 34:
+				case HCLOCK_DUMMY + 42:
+				case HCLOCK_DUMMY + 50:
+				case HCLOCK_DUMMY + 58:
+				case HCLOCK_DUMMY + 66:
+				case HCLOCK_DUMMY + 74:
+				case HCLOCK_DUMMY + 82:
+				case HCLOCK_DUMMY + 90:
+				case HCLOCK_DUMMY + 98:
+				case HCLOCK_DUMMY + 106:
+				case HCLOCK_DUMMY + 114:
+				case HCLOCK_DUMMY + 122:
+				case HCLOCK_DUMMY + 130:
+				case HCLOCK_DUMMY + 138:
+				case HCLOCK_DUMMY + 146:
+				case HCLOCK_DUMMY + 154:
+				case HCLOCK_DUMMY + 162:
+				case HCLOCK_DUMMY + 170:
+				case HCLOCK_DUMMY + 178:
+				case HCLOCK_DUMMY + 186:
+				case HCLOCK_DUMMY + 194:
+				case HCLOCK_DUMMY + 202:
+				case HCLOCK_DUMMY + 210:
+				case HCLOCK_DUMMY + 218:
+				case HCLOCK_DUMMY + 226:
+				case HCLOCK_DUMMY + 234:
+				case HCLOCK_DUMMY + 242:
+				case HCLOCK_DUMMY + 250:
+
+					OpenAttribute();
+					cycles.hClock += 2;
+
+					if (cycles.count <= cycles.hClock)
+						break;
+					// fallthrough
 
-						OpenName();
-						cycles.hClock += 2;
+				case HCLOCK_DUMMY + 4:
+				case HCLOCK_DUMMY + 12:
+				case HCLOCK_DUMMY + 20:
+				case HCLOCK_DUMMY + 28:
+				case HCLOCK_DUMMY + 36:
+				case HCLOCK_DUMMY + 44:
+				case HCLOCK_DUMMY + 52:
+				case HCLOCK_DUMMY + 60:
+				case HCLOCK_DUMMY + 68:
+				case HCLOCK_DUMMY + 76:
+				case HCLOCK_DUMMY + 84:
+				case HCLOCK_DUMMY + 92:
+				case HCLOCK_DUMMY + 100:
+				case HCLOCK_DUMMY + 108:
+				case HCLOCK_DUMMY + 116:
+				case HCLOCK_DUMMY + 124:
+				case HCLOCK_DUMMY + 132:
+				case HCLOCK_DUMMY + 140:
+				case HCLOCK_DUMMY + 148:
+				case HCLOCK_DUMMY + 156:
+				case HCLOCK_DUMMY + 164:
+				case HCLOCK_DUMMY + 172:
+				case HCLOCK_DUMMY + 180:
+				case HCLOCK_DUMMY + 188:
+				case HCLOCK_DUMMY + 196:
+				case HCLOCK_DUMMY + 204:
+				case HCLOCK_DUMMY + 212:
+				case HCLOCK_DUMMY + 220:
+				case HCLOCK_DUMMY + 228:
+				case HCLOCK_DUMMY + 236:
+				case HCLOCK_DUMMY + 244:
+				case HCLOCK_DUMMY + 252:
+
+					OpenPattern(regs.ctrl[0] << 8 & 0x1000);
+					cycles.hClock += 2;
+
+					if (cycles.count <= cycles.hClock)
+						break;
+					// fallthrough
 
-						if (cycles.count <= cycles.hClock)
-							break;
-						// fallthrough
-
-					case HCLOCK_DUMMY+258:
-					case HCLOCK_DUMMY+266:
-					case HCLOCK_DUMMY+274:
-					case HCLOCK_DUMMY+282:
-					case HCLOCK_DUMMY+290:
-					case HCLOCK_DUMMY+298:
-					case HCLOCK_DUMMY+306:
-					case HCLOCK_DUMMY+314:
-
-						OpenName();
-						cycles.hClock += 2;
+				case HCLOCK_DUMMY + 6:
+				case HCLOCK_DUMMY + 14:
+				case HCLOCK_DUMMY + 22:
+				case HCLOCK_DUMMY + 30:
+				case HCLOCK_DUMMY + 38:
+				case HCLOCK_DUMMY + 46:
+				case HCLOCK_DUMMY + 54:
+				case HCLOCK_DUMMY + 62:
+				case HCLOCK_DUMMY + 70:
+				case HCLOCK_DUMMY + 78:
+				case HCLOCK_DUMMY + 86:
+				case HCLOCK_DUMMY + 94:
+				case HCLOCK_DUMMY + 102:
+				case HCLOCK_DUMMY + 110:
+				case HCLOCK_DUMMY + 118:
+				case HCLOCK_DUMMY + 126:
+				case HCLOCK_DUMMY + 134:
+				case HCLOCK_DUMMY + 142:
+				case HCLOCK_DUMMY + 150:
+				case HCLOCK_DUMMY + 158:
+				case HCLOCK_DUMMY + 166:
+				case HCLOCK_DUMMY + 174:
+				case HCLOCK_DUMMY + 182:
+				case HCLOCK_DUMMY + 190:
+				case HCLOCK_DUMMY + 198:
+				case HCLOCK_DUMMY + 206:
+				case HCLOCK_DUMMY + 214:
+				case HCLOCK_DUMMY + 222:
+				case HCLOCK_DUMMY + 230:
+				case HCLOCK_DUMMY + 238:
+				case HCLOCK_DUMMY + 246:
+				case HCLOCK_DUMMY + 254:
+
+					OpenPattern(io.address | 0x8);
+					cycles.hClock += 2;
+
+					if (cycles.count <= cycles.hClock)
+						break;
 
-						if (cycles.count <= cycles.hClock)
-							break;
-						// fallthrough
-
-					case HCLOCK_DUMMY+260:
-					case HCLOCK_DUMMY+268:
-					case HCLOCK_DUMMY+276:
-					case HCLOCK_DUMMY+284:
-					case HCLOCK_DUMMY+292:
-					case HCLOCK_DUMMY+300:
-					case HCLOCK_DUMMY+308:
-					case HCLOCK_DUMMY+316:
-
-						OpenPattern( OpenSprite() );
-						cycles.hClock += 2;
+					if (cycles.hClock != HCLOCK_DUMMY + 256)
+						goto HDummyBg;
+					// fallthrough
 
-						if (cycles.count <= cycles.hClock)
-							break;
-						// fallthrough
+				case HCLOCK_DUMMY + 256:
+				case HCLOCK_DUMMY + 264:
+				case HCLOCK_DUMMY + 272:
+				case HCLOCK_DUMMY + 280:
+				case HCLOCK_DUMMY + 288:
+				case HCLOCK_DUMMY + 296:
+				case HCLOCK_DUMMY + 312:
+				HDummySp:
 
-					case HCLOCK_DUMMY+262:
-					case HCLOCK_DUMMY+270:
-					case HCLOCK_DUMMY+278:
-					case HCLOCK_DUMMY+286:
-					case HCLOCK_DUMMY+294:
-					case HCLOCK_DUMMY+302:
-					case HCLOCK_DUMMY+310:
-					case HCLOCK_DUMMY+318:
+					OpenName();
+					cycles.hClock += 2;
 
-						OpenPattern( io.address | 0x8 );
+					if (cycles.count <= cycles.hClock)
+						break;
+					// fallthrough
 
-						if (cycles.hClock != HCLOCK_DUMMY+318)
-						{
-							cycles.hClock += 2;
+				case HCLOCK_DUMMY + 258:
+				case HCLOCK_DUMMY + 266:
+				case HCLOCK_DUMMY + 274:
+				case HCLOCK_DUMMY + 282:
+				case HCLOCK_DUMMY + 290:
+				case HCLOCK_DUMMY + 298:
+				case HCLOCK_DUMMY + 306:
+				case HCLOCK_DUMMY + 314:
 
-							if (cycles.count <= cycles.hClock)
-								break;
+					OpenName();
+					cycles.hClock += 2;
 
-							if (cycles.hClock != HCLOCK_DUMMY+304)
-								goto HDummySp;
-						}
-						else
-						{
-							cycles.hClock = 320;
-							cycles.vClock += HCLOCK_DUMMY;
-							cycles.count -= HCLOCK_DUMMY;
+					if (cycles.count <= cycles.hClock)
+						break;
+					// fallthrough
 
-							if (cycles.count <= cycles.hClock)
-								break;
+				case HCLOCK_DUMMY + 260:
+				case HCLOCK_DUMMY + 268:
+				case HCLOCK_DUMMY + 276:
+				case HCLOCK_DUMMY + 284:
+				case HCLOCK_DUMMY + 292:
+				case HCLOCK_DUMMY + 300:
+				case HCLOCK_DUMMY + 308:
+				case HCLOCK_DUMMY + 316:
 
-							goto HBlankBg;
-						}
-						// fallthrough
+					OpenPattern(OpenSprite());
+					cycles.hClock += 2;
+
+					if (cycles.count <= cycles.hClock)
+						break;
+					// fallthrough
+
+				case HCLOCK_DUMMY + 262:
+				case HCLOCK_DUMMY + 270:
+				case HCLOCK_DUMMY + 278:
+				case HCLOCK_DUMMY + 286:
+				case HCLOCK_DUMMY + 294:
+				case HCLOCK_DUMMY + 302:
+				case HCLOCK_DUMMY + 310:
+				case HCLOCK_DUMMY + 318:
+
+					OpenPattern(io.address | 0x8);
+
+					if (cycles.hClock != HCLOCK_DUMMY + 318)
+					{
+						cycles.hClock += 2;
+
+						if (cycles.count <= cycles.hClock)
+							break;
+
+						if (cycles.hClock != HCLOCK_DUMMY + 304)
+							goto HDummySp;
+					}
+					else
+					{
+						cycles.hClock = 320;
+						cycles.vClock += HCLOCK_DUMMY;
+						cycles.count -= HCLOCK_DUMMY;
+
+						if (cycles.count <= cycles.hClock)
+							break;
+
+						goto HBlankBg;
+					}
+					// fallthrough
 
-					case HCLOCK_DUMMY+304:
+				case HCLOCK_DUMMY + 304:
 
-						scroll.address = scroll.latch;
-						goto HDummySp;
+					scroll.address = scroll.latch;
+					goto HDummySp;
 
-					default:
+				default:
 
-						NST_UNREACHABLE();
+					NST_UNREACHABLE();
 				}
 			}
 			else
 			{
 				switch (cycles.hClock)
 				{
-					case 0:
-					case 1:
-					case 2:
-					case 3:
-					case 4:
-					case 5:
-					case 6:
-					case 7:
-					case 8:
-					case 9:
-					case 10:
-					case 11:
-					case 12:
-					case 13:
-					case 14:
-					case 15:
-					case 16:
-					case 17:
-					case 18:
-					case 19:
-					case 20:
-					case 21:
-					case 22:
-					case 23:
-					case 24:
-					case 25:
-					case 26:
-					case 27:
-					case 28:
-					case 29:
-					case 30:
-					case 31:
-					case 32:
-					case 33:
-					case 34:
-					case 35:
-					case 36:
-					case 37:
-					case 38:
-					case 39:
-					case 40:
-					case 41:
-					case 42:
-					case 43:
-					case 44:
-					case 45:
-					case 46:
-					case 47:
-					case 48:
-					case 49:
-					case 50:
-					case 51:
-					case 52:
-					case 53:
-					case 54:
-					case 55:
-					case 56:
-					case 57:
-					case 58:
-					case 59:
-					case 60:
-					case 61:
-					case 62:
-					case 63:
-					case 64:
-					case 65:
-					case 66:
-					case 67:
-					case 68:
-					case 69:
-					case 70:
-					case 71:
-					case 72:
-					case 73:
-					case 74:
-					case 75:
-					case 76:
-					case 77:
-					case 78:
-					case 79:
-					case 80:
-					case 81:
-					case 82:
-					case 83:
-					case 84:
-					case 85:
-					case 86:
-					case 87:
-					case 88:
-					case 89:
-					case 90:
-					case 91:
-					case 92:
-					case 93:
-					case 94:
-					case 95:
-					case 96:
-					case 97:
-					case 98:
-					case 99:
-					case 100:
-					case 101:
-					case 102:
-					case 103:
-					case 104:
-					case 105:
-					case 106:
-					case 107:
-					case 108:
-					case 109:
-					case 110:
-					case 111:
-					case 112:
-					case 113:
-					case 114:
-					case 115:
-					case 116:
-					case 117:
-					case 118:
-					case 119:
-					case 120:
-					case 121:
-					case 122:
-					case 123:
-					case 124:
-					case 125:
-					case 126:
-					case 127:
-					case 128:
-					case 129:
-					case 130:
-					case 131:
-					case 132:
-					case 133:
-					case 134:
-					case 135:
-					case 136:
-					case 137:
-					case 138:
-					case 139:
-					case 140:
-					case 141:
-					case 142:
-					case 143:
-					case 144:
-					case 145:
-					case 146:
-					case 147:
-					case 148:
-					case 149:
-					case 150:
-					case 151:
-					case 152:
-					case 153:
-					case 154:
-					case 155:
-					case 156:
-					case 157:
-					case 158:
-					case 159:
-					case 160:
-					case 161:
-					case 162:
-					case 163:
-					case 164:
-					case 165:
-					case 166:
-					case 167:
-					case 168:
-					case 169:
-					case 170:
-					case 171:
-					case 172:
-					case 173:
-					case 174:
-					case 175:
-					case 176:
-					case 177:
-					case 178:
-					case 179:
-					case 180:
-					case 181:
-					case 182:
-					case 183:
-					case 184:
-					case 185:
-					case 186:
-					case 187:
-					case 188:
-					case 189:
-					case 190:
-					case 191:
-					case 192:
-					case 193:
-					case 194:
-					case 195:
-					case 196:
-					case 197:
-					case 198:
-					case 199:
-					case 200:
-					case 201:
-					case 202:
-					case 203:
-					case 204:
-					case 205:
-					case 206:
-					case 207:
-					case 208:
-					case 209:
-					case 210:
-					case 211:
-					case 212:
-					case 213:
-					case 214:
-					case 215:
-					case 216:
-					case 217:
-					case 218:
-					case 219:
-					case 220:
-					case 221:
-					case 222:
-					case 223:
-					case 224:
-					case 225:
-					case 226:
-					case 227:
-					case 228:
-					case 229:
-					case 230:
-					case 231:
-					case 232:
-					case 233:
-					case 234:
-					case 235:
-					case 236:
-					case 237:
-					case 238:
-					case 239:
-					case 240:
-					case 241:
-					case 242:
-					case 243:
-					case 244:
-					case 245:
-					case 246:
-					case 247:
-					case 248:
-					case 249:
-					case 250:
-					case 251:
-					case 252:
-					case 253:
-					case 254:
-					case 255:
-					HActiveOff:
+				case 0:
+				case 1:
+				case 2:
+				case 3:
+				case 4:
+				case 5:
+				case 6:
+				case 7:
+				case 8:
+				case 9:
+				case 10:
+				case 11:
+				case 12:
+				case 13:
+				case 14:
+				case 15:
+				case 16:
+				case 17:
+				case 18:
+				case 19:
+				case 20:
+				case 21:
+				case 22:
+				case 23:
+				case 24:
+				case 25:
+				case 26:
+				case 27:
+				case 28:
+				case 29:
+				case 30:
+				case 31:
+				case 32:
+				case 33:
+				case 34:
+				case 35:
+				case 36:
+				case 37:
+				case 38:
+				case 39:
+				case 40:
+				case 41:
+				case 42:
+				case 43:
+				case 44:
+				case 45:
+				case 46:
+				case 47:
+				case 48:
+				case 49:
+				case 50:
+				case 51:
+				case 52:
+				case 53:
+				case 54:
+				case 55:
+				case 56:
+				case 57:
+				case 58:
+				case 59:
+				case 60:
+				case 61:
+				case 62:
+				case 63:
+				case 64:
+				case 65:
+				case 66:
+				case 67:
+				case 68:
+				case 69:
+				case 70:
+				case 71:
+				case 72:
+				case 73:
+				case 74:
+				case 75:
+				case 76:
+				case 77:
+				case 78:
+				case 79:
+				case 80:
+				case 81:
+				case 82:
+				case 83:
+				case 84:
+				case 85:
+				case 86:
+				case 87:
+				case 88:
+				case 89:
+				case 90:
+				case 91:
+				case 92:
+				case 93:
+				case 94:
+				case 95:
+				case 96:
+				case 97:
+				case 98:
+				case 99:
+				case 100:
+				case 101:
+				case 102:
+				case 103:
+				case 104:
+				case 105:
+				case 106:
+				case 107:
+				case 108:
+				case 109:
+				case 110:
+				case 111:
+				case 112:
+				case 113:
+				case 114:
+				case 115:
+				case 116:
+				case 117:
+				case 118:
+				case 119:
+				case 120:
+				case 121:
+				case 122:
+				case 123:
+				case 124:
+				case 125:
+				case 126:
+				case 127:
+				case 128:
+				case 129:
+				case 130:
+				case 131:
+				case 132:
+				case 133:
+				case 134:
+				case 135:
+				case 136:
+				case 137:
+				case 138:
+				case 139:
+				case 140:
+				case 141:
+				case 142:
+				case 143:
+				case 144:
+				case 145:
+				case 146:
+				case 147:
+				case 148:
+				case 149:
+				case 150:
+				case 151:
+				case 152:
+				case 153:
+				case 154:
+				case 155:
+				case 156:
+				case 157:
+				case 158:
+				case 159:
+				case 160:
+				case 161:
+				case 162:
+				case 163:
+				case 164:
+				case 165:
+				case 166:
+				case 167:
+				case 168:
+				case 169:
+				case 170:
+				case 171:
+				case 172:
+				case 173:
+				case 174:
+				case 175:
+				case 176:
+				case 177:
+				case 178:
+				case 179:
+				case 180:
+				case 181:
+				case 182:
+				case 183:
+				case 184:
+				case 185:
+				case 186:
+				case 187:
+				case 188:
+				case 189:
+				case 190:
+				case 191:
+				case 192:
+				case 193:
+				case 194:
+				case 195:
+				case 196:
+				case 197:
+				case 198:
+				case 199:
+				case 200:
+				case 201:
+				case 202:
+				case 203:
+				case 204:
+				case 205:
+				case 206:
+				case 207:
+				case 208:
+				case 209:
+				case 210:
+				case 211:
+				case 212:
+				case 213:
+				case 214:
+				case 215:
+				case 216:
+				case 217:
+				case 218:
+				case 219:
+				case 220:
+				case 221:
+				case 222:
+				case 223:
+				case 224:
+				case 225:
+				case 226:
+				case 227:
+				case 228:
+				case 229:
+				case 230:
+				case 231:
+				case 232:
+				case 233:
+				case 234:
+				case 235:
+				case 236:
+				case 237:
+				case 238:
+				case 239:
+				case 240:
+				case 241:
+				case 242:
+				case 243:
+				case 244:
+				case 245:
+				case 246:
+				case 247:
+				case 248:
+				case 249:
+				case 250:
+				case 251:
+				case 252:
+				case 253:
+				case 254:
+				case 255:
+				HActiveOff:
+				{
+					const uint pixel = output.palette[(scroll.address & 0x3F00) == 0x3F00 ? (scroll.address & 0x001F) : 0];
+
+					uint i = cycles.hClock;
+					const uint hClock = NST_MIN(cycles.count, 256);
+					NST_ASSERT(i < hClock);
+
+					cycles.hClock = hClock;
+					tiles.index = (hClock - 1) & 8;
+
+					byte *const NST_RESTRICT tile = tiles.pixels;
+					Video::Screen::Pixel *NST_RESTRICT target = output.target;
+
+					do
 					{
-						const uint pixel = output.palette[(scroll.address & 0x3F00) == 0x3F00 ? (scroll.address & 0x001F) : 0];
+						tile[i++ & 15] = 0;
+						*target++ = pixel;
+					} while (i != hClock);
 
-						uint i = cycles.hClock;
-						const uint hClock = NST_MIN(cycles.count,256);
-						NST_ASSERT( i < hClock );
+					output.target = target;
 
-						cycles.hClock = hClock;
-						tiles.index = (hClock - 1) & 8;
+					if (cycles.count <= 256)
+						break;
+				}
+					// fallthrough
 
-						byte* const NST_RESTRICT tile = tiles.pixels;
-						Video::Screen::Pixel* NST_RESTRICT target = output.target;
+				case 256:
 
-						do
-						{
-							tile[i++ & 15] = 0;
-							*target++ = pixel;
-						}
-						while (i != hClock);
+					cycles.hClock = 257;
 
-						output.target = target;
+					if (cycles.count <= 257)
+						break;
+					// fallthrough
 
-						if (cycles.count <= 256)
-							break;
-					}
+				case 257:
+
+					if (hBlankHook)
+						hBlankHook.Execute();
+
+					oam.visible = oam.output;
+					cycles.hClock = 258;
+
+					if (cycles.count <= 258)
+						break;
 					// fallthrough
 
-					case 256:
+				case 258:
+				case 260:
+				case 261:
+				case 262:
+				case 263:
+				case 264:
+				case 266:
+				case 268:
+				case 269:
+				case 270:
+				case 271:
+				case 272:
+				case 274:
+				case 276:
+				case 277:
+				case 278:
+				case 279:
+				case 280:
+				case 282:
+				case 284:
+				case 285:
+				case 286:
+				case 287:
+				case 288:
+				case 290:
+				case 292:
+				case 293:
+				case 294:
+				case 295:
+				case 296:
+				case 298:
+				case 300:
+				case 301:
+				case 302:
+				case 303:
+				case 304:
+				case 306:
+				case 308:
+				case 309:
+				case 310:
+				case 311:
+				case 312:
+				case 314:
+				case 316:
+				case 317:
+				case 318:
+				case 319:
+
+					if (cycles.count <= 320)
+					{
+						cycles.hClock = cycles.count + ((cycles.count & 0x7) == 3 || (cycles.count & 0x7) == 1);
+						break;
+					}
+					// fallthrough
 
-						cycles.hClock = 257;
+				case 320:
+				HBlankOff:
 
-						if (cycles.count <= 257)
-							break;
-						// fallthrough
+					cycles.hClock = 321;
 
-					case 257:
+					if (hActiveHook)
+						hActiveHook.Execute();
 
-						if (hBlankHook)
-							hBlankHook.Execute();
+					oam.buffered = oam.buffer;
+					oam.spriteZeroInLine = false;
+					oam.index = 0;
+					oam.phase = &Ppu::EvaluateSpritesPhase0;
 
-						oam.visible = oam.output;
-						cycles.hClock = 258;
+					if (cycles.count <= 321)
+						break;
+					// fallthrough
 
-						if (cycles.count <= 258)
-							break;
-						// fallthrough
-
-					case 258:
-					case 260:
-					case 261:
-					case 262:
-					case 263:
-					case 264:
-					case 266:
-					case 268:
-					case 269:
-					case 270:
-					case 271:
-					case 272:
-					case 274:
-					case 276:
-					case 277:
-					case 278:
-					case 279:
-					case 280:
-					case 282:
-					case 284:
-					case 285:
-					case 286:
-					case 287:
-					case 288:
-					case 290:
-					case 292:
-					case 293:
-					case 294:
-					case 295:
-					case 296:
-					case 298:
-					case 300:
-					case 301:
-					case 302:
-					case 303:
-					case 304:
-					case 306:
-					case 308:
-					case 309:
-					case 310:
-					case 311:
-					case 312:
-					case 314:
-					case 316:
-					case 317:
-					case 318:
-					case 319:
-
-						if (cycles.count <= 320)
-						{
-							cycles.hClock = cycles.count + ((cycles.count & 0x7) == 3 || (cycles.count & 0x7) == 1);
-							break;
-						}
-						// fallthrough
+				case 321:
+				case 322:
+				case 323:
+				case 324:
+				case 325:
+				case 326:
+				case 327:
+				case 328:
+				case 329:
+				case 330:
+				case 331:
+				case 332:
+				case 333:
+				case 334:
+				case 335:
+				case 336:
+				case 337:
+
+					cycles.hClock = cycles.count;
+
+					if (cycles.count <= 338)
+						break;
+					// fallthrough
 
-					case 320:
-					HBlankOff:
+				case 338:
 
-						cycles.hClock = 321;
+					if (scanline++ != 239)
+					{
+						tiles.mask = tiles.show[1];
+						oam.mask = oam.show[1];
 
-						if (hActiveHook)
-							hActiveHook.Execute();
+						if (scanline == 0 && model == PPU_RP2C02)
+							output.burstPhase = (output.burstPhase + 1) % 3;
 
-						oam.buffered = oam.buffer;
-						oam.spriteZeroInLine = false;
-						oam.index = 0;
-						oam.phase = &Ppu::EvaluateSpritesPhase0;
+						cycles.vClock += HCLOCK_DUMMY;
+						cycles.hClock = 0;
 
-						if (cycles.count <= 321)
+						if (cycles.count <= HCLOCK_DUMMY)
 							break;
-						// fallthrough
-
-					case 321:
-					case 322:
-					case 323:
-					case 324:
-					case 325:
-					case 326:
-					case 327:
-					case 328:
-					case 329:
-					case 330:
-					case 331:
-					case 332:
-					case 333:
-					case 334:
-					case 335:
-					case 336:
-					case 337:
-
-						cycles.hClock = cycles.count;
-
-						if (cycles.count <= 338)
-							break;
-						// fallthrough
 
-					case 338:
+						cycles.count -= HCLOCK_DUMMY;
 
-						if (scanline++ != 239)
+						goto HActiveOff;
+					}
+					else
+					{
+						if (model == PPU_DENDY)
 						{
-							tiles.mask = tiles.show[1];
-							oam.mask = oam.show[1];
-
-							if (scanline == 0 && model == PPU_RP2C02)
-								output.burstPhase = (output.burstPhase + 1) % 3;
+							scanline_sleep = 1;
 
 							cycles.vClock += HCLOCK_DUMMY;
 							cycles.hClock = 0;
@@ -3450,249 +3482,239 @@ namespace Nes
 
 							cycles.count -= HCLOCK_DUMMY;
 
-							goto HActiveOff;
+							goto HActiveSleep;
 						}
 						else
 						{
-							if (model == PPU_DENDY)
-							{
-								scanline_sleep = 1;
-
-								cycles.vClock += HCLOCK_DUMMY;
-								cycles.hClock = 0;
-
-								if (cycles.count <= HCLOCK_DUMMY)
-									break;
-
-								cycles.count -= HCLOCK_DUMMY;
-
-								goto HActiveSleep;
-							}
-							else
-							{
-								cycles.hClock = HCLOCK_VBLANK_0;
+							cycles.hClock = HCLOCK_VBLANK_0;
 
-								if (cycles.count <= HCLOCK_VBLANK_0)
-									break;
-							}
+							if (cycles.count <= HCLOCK_VBLANK_0)
+								break;
 						}
-						// fallthrough
+					}
+					// fallthrough
 
-					case HCLOCK_VBLANK_0:
-						goto VBlank0;
+				case HCLOCK_VBLANK_0:
+					goto VBlank0;
 
-					case HCLOCK_VBLANK_1:
-						goto VBlank1;
+				case HCLOCK_VBLANK_1:
+					goto VBlank1;
 
-					case HCLOCK_VBLANK_2:
-						goto VBlank2;
+				case HCLOCK_VBLANK_2:
+					goto VBlank2;
 
-					case HCLOCK_BOOT:
-					Boot:
+				case HCLOCK_BOOT:
+				Boot:
 
-						regs.status |= Regs::STATUS_VBLANK;
-						cycles.hClock = HCLOCK_DUMMY;
-						cycles.count = Cpu::CYCLE_MAX;
+					regs.status |= Regs::STATUS_VBLANK;
+					cycles.hClock = HCLOCK_DUMMY;
+					cycles.count = Cpu::CYCLE_MAX;
 
-						if (cycles.reset)
+					if (cycles.reset)
+					{
+						switch (model)
 						{
-							switch (model)
-							{
-								case PPU_RP2C07: cycles.reset = PPU_RP2C07_HVREGBOOT - PPU_RP2C07_HVSYNCBOOT; break;
-								case PPU_DENDY:  cycles.reset = PPU_DENDY_HVREGBOOT  - PPU_DENDY_HVSYNCBOOT;  break;
-								default:         cycles.reset = PPU_RP2C02_HVREGBOOT - PPU_RP2C02_HVSYNCBOOT; break;
-							}
+						case PPU_RP2C07:
+							cycles.reset = PPU_RP2C07_HVREGBOOT - PPU_RP2C07_HVSYNCBOOT;
+							break;
+						case PPU_DENDY:
+							cycles.reset = PPU_DENDY_HVREGBOOT - PPU_DENDY_HVSYNCBOOT;
+							break;
+						default:
+							cycles.reset = PPU_RP2C02_HVREGBOOT - PPU_RP2C02_HVSYNCBOOT;
+							break;
 						}
-						return;
-
-					case HCLOCK_DUMMY+0:
-
-						regs.status = 0;
-						scanline = SCANLINE_HDUMMY;
-						// fallthrough
-
-					case HCLOCK_DUMMY+2:
-					case HCLOCK_DUMMY+4:
-					case HCLOCK_DUMMY+6:
-					case HCLOCK_DUMMY+8:
-					case HCLOCK_DUMMY+10:
-					case HCLOCK_DUMMY+12:
-					case HCLOCK_DUMMY+14:
-					case HCLOCK_DUMMY+16:
-					case HCLOCK_DUMMY+18:
-					case HCLOCK_DUMMY+20:
-					case HCLOCK_DUMMY+22:
-					case HCLOCK_DUMMY+24:
-					case HCLOCK_DUMMY+26:
-					case HCLOCK_DUMMY+28:
-					case HCLOCK_DUMMY+30:
-					case HCLOCK_DUMMY+32:
-					case HCLOCK_DUMMY+34:
-					case HCLOCK_DUMMY+36:
-					case HCLOCK_DUMMY+38:
-					case HCLOCK_DUMMY+40:
-					case HCLOCK_DUMMY+42:
-					case HCLOCK_DUMMY+44:
-					case HCLOCK_DUMMY+46:
-					case HCLOCK_DUMMY+48:
-					case HCLOCK_DUMMY+50:
-					case HCLOCK_DUMMY+52:
-					case HCLOCK_DUMMY+54:
-					case HCLOCK_DUMMY+56:
-					case HCLOCK_DUMMY+58:
-					case HCLOCK_DUMMY+60:
-					case HCLOCK_DUMMY+62:
-					case HCLOCK_DUMMY+64:
-					case HCLOCK_DUMMY+66:
-					case HCLOCK_DUMMY+68:
-					case HCLOCK_DUMMY+70:
-					case HCLOCK_DUMMY+72:
-					case HCLOCK_DUMMY+74:
-					case HCLOCK_DUMMY+76:
-					case HCLOCK_DUMMY+78:
-					case HCLOCK_DUMMY+80:
-					case HCLOCK_DUMMY+82:
-					case HCLOCK_DUMMY+84:
-					case HCLOCK_DUMMY+86:
-					case HCLOCK_DUMMY+88:
-					case HCLOCK_DUMMY+90:
-					case HCLOCK_DUMMY+92:
-					case HCLOCK_DUMMY+94:
-					case HCLOCK_DUMMY+96:
-					case HCLOCK_DUMMY+98:
-					case HCLOCK_DUMMY+100:
-					case HCLOCK_DUMMY+102:
-					case HCLOCK_DUMMY+104:
-					case HCLOCK_DUMMY+106:
-					case HCLOCK_DUMMY+108:
-					case HCLOCK_DUMMY+110:
-					case HCLOCK_DUMMY+112:
-					case HCLOCK_DUMMY+114:
-					case HCLOCK_DUMMY+116:
-					case HCLOCK_DUMMY+118:
-					case HCLOCK_DUMMY+120:
-					case HCLOCK_DUMMY+122:
-					case HCLOCK_DUMMY+124:
-					case HCLOCK_DUMMY+126:
-					case HCLOCK_DUMMY+128:
-					case HCLOCK_DUMMY+130:
-					case HCLOCK_DUMMY+132:
-					case HCLOCK_DUMMY+134:
-					case HCLOCK_DUMMY+136:
-					case HCLOCK_DUMMY+138:
-					case HCLOCK_DUMMY+140:
-					case HCLOCK_DUMMY+142:
-					case HCLOCK_DUMMY+144:
-					case HCLOCK_DUMMY+146:
-					case HCLOCK_DUMMY+148:
-					case HCLOCK_DUMMY+150:
-					case HCLOCK_DUMMY+152:
-					case HCLOCK_DUMMY+154:
-					case HCLOCK_DUMMY+156:
-					case HCLOCK_DUMMY+158:
-					case HCLOCK_DUMMY+160:
-					case HCLOCK_DUMMY+162:
-					case HCLOCK_DUMMY+164:
-					case HCLOCK_DUMMY+166:
-					case HCLOCK_DUMMY+168:
-					case HCLOCK_DUMMY+170:
-					case HCLOCK_DUMMY+172:
-					case HCLOCK_DUMMY+174:
-					case HCLOCK_DUMMY+176:
-					case HCLOCK_DUMMY+178:
-					case HCLOCK_DUMMY+180:
-					case HCLOCK_DUMMY+182:
-					case HCLOCK_DUMMY+184:
-					case HCLOCK_DUMMY+186:
-					case HCLOCK_DUMMY+188:
-					case HCLOCK_DUMMY+190:
-					case HCLOCK_DUMMY+192:
-					case HCLOCK_DUMMY+194:
-					case HCLOCK_DUMMY+196:
-					case HCLOCK_DUMMY+198:
-					case HCLOCK_DUMMY+200:
-					case HCLOCK_DUMMY+202:
-					case HCLOCK_DUMMY+204:
-					case HCLOCK_DUMMY+206:
-					case HCLOCK_DUMMY+208:
-					case HCLOCK_DUMMY+210:
-					case HCLOCK_DUMMY+212:
-					case HCLOCK_DUMMY+214:
-					case HCLOCK_DUMMY+216:
-					case HCLOCK_DUMMY+218:
-					case HCLOCK_DUMMY+220:
-					case HCLOCK_DUMMY+222:
-					case HCLOCK_DUMMY+224:
-					case HCLOCK_DUMMY+226:
-					case HCLOCK_DUMMY+228:
-					case HCLOCK_DUMMY+230:
-					case HCLOCK_DUMMY+232:
-					case HCLOCK_DUMMY+234:
-					case HCLOCK_DUMMY+236:
-					case HCLOCK_DUMMY+238:
-					case HCLOCK_DUMMY+240:
-					case HCLOCK_DUMMY+242:
-					case HCLOCK_DUMMY+244:
-					case HCLOCK_DUMMY+246:
-					case HCLOCK_DUMMY+248:
-					case HCLOCK_DUMMY+250:
-					case HCLOCK_DUMMY+252:
-					case HCLOCK_DUMMY+254:
-					case HCLOCK_DUMMY+256:
-					case HCLOCK_DUMMY+258:
-					case HCLOCK_DUMMY+260:
-					case HCLOCK_DUMMY+262:
-					case HCLOCK_DUMMY+264:
-					case HCLOCK_DUMMY+266:
-					case HCLOCK_DUMMY+268:
-					case HCLOCK_DUMMY+270:
-					case HCLOCK_DUMMY+272:
-					case HCLOCK_DUMMY+274:
-					case HCLOCK_DUMMY+276:
-					case HCLOCK_DUMMY+278:
-					case HCLOCK_DUMMY+280:
-					case HCLOCK_DUMMY+282:
-					case HCLOCK_DUMMY+284:
-					case HCLOCK_DUMMY+286:
-					case HCLOCK_DUMMY+288:
-					case HCLOCK_DUMMY+290:
-					case HCLOCK_DUMMY+292:
-					case HCLOCK_DUMMY+294:
-					case HCLOCK_DUMMY+296:
-					case HCLOCK_DUMMY+298:
-					case HCLOCK_DUMMY+300:
-					case HCLOCK_DUMMY+302:
-					case HCLOCK_DUMMY+304:
-					case HCLOCK_DUMMY+306:
-					case HCLOCK_DUMMY+308:
-					case HCLOCK_DUMMY+310:
-					case HCLOCK_DUMMY+312:
-					case HCLOCK_DUMMY+314:
-					case HCLOCK_DUMMY+316:
-					{
-						NST_COMPILE_ASSERT( HCLOCK_DUMMY & 1 );
+					}
+					return;
 
-						cycles.hClock = cycles.count | 1;
+				case HCLOCK_DUMMY + 0:
 
-						if (cycles.count <= HCLOCK_DUMMY+318)
-							break;
-					}
+					regs.status = 0;
+					scanline = SCANLINE_HDUMMY;
 					// fallthrough
 
-					case HCLOCK_DUMMY+318:
+				case HCLOCK_DUMMY + 2:
+				case HCLOCK_DUMMY + 4:
+				case HCLOCK_DUMMY + 6:
+				case HCLOCK_DUMMY + 8:
+				case HCLOCK_DUMMY + 10:
+				case HCLOCK_DUMMY + 12:
+				case HCLOCK_DUMMY + 14:
+				case HCLOCK_DUMMY + 16:
+				case HCLOCK_DUMMY + 18:
+				case HCLOCK_DUMMY + 20:
+				case HCLOCK_DUMMY + 22:
+				case HCLOCK_DUMMY + 24:
+				case HCLOCK_DUMMY + 26:
+				case HCLOCK_DUMMY + 28:
+				case HCLOCK_DUMMY + 30:
+				case HCLOCK_DUMMY + 32:
+				case HCLOCK_DUMMY + 34:
+				case HCLOCK_DUMMY + 36:
+				case HCLOCK_DUMMY + 38:
+				case HCLOCK_DUMMY + 40:
+				case HCLOCK_DUMMY + 42:
+				case HCLOCK_DUMMY + 44:
+				case HCLOCK_DUMMY + 46:
+				case HCLOCK_DUMMY + 48:
+				case HCLOCK_DUMMY + 50:
+				case HCLOCK_DUMMY + 52:
+				case HCLOCK_DUMMY + 54:
+				case HCLOCK_DUMMY + 56:
+				case HCLOCK_DUMMY + 58:
+				case HCLOCK_DUMMY + 60:
+				case HCLOCK_DUMMY + 62:
+				case HCLOCK_DUMMY + 64:
+				case HCLOCK_DUMMY + 66:
+				case HCLOCK_DUMMY + 68:
+				case HCLOCK_DUMMY + 70:
+				case HCLOCK_DUMMY + 72:
+				case HCLOCK_DUMMY + 74:
+				case HCLOCK_DUMMY + 76:
+				case HCLOCK_DUMMY + 78:
+				case HCLOCK_DUMMY + 80:
+				case HCLOCK_DUMMY + 82:
+				case HCLOCK_DUMMY + 84:
+				case HCLOCK_DUMMY + 86:
+				case HCLOCK_DUMMY + 88:
+				case HCLOCK_DUMMY + 90:
+				case HCLOCK_DUMMY + 92:
+				case HCLOCK_DUMMY + 94:
+				case HCLOCK_DUMMY + 96:
+				case HCLOCK_DUMMY + 98:
+				case HCLOCK_DUMMY + 100:
+				case HCLOCK_DUMMY + 102:
+				case HCLOCK_DUMMY + 104:
+				case HCLOCK_DUMMY + 106:
+				case HCLOCK_DUMMY + 108:
+				case HCLOCK_DUMMY + 110:
+				case HCLOCK_DUMMY + 112:
+				case HCLOCK_DUMMY + 114:
+				case HCLOCK_DUMMY + 116:
+				case HCLOCK_DUMMY + 118:
+				case HCLOCK_DUMMY + 120:
+				case HCLOCK_DUMMY + 122:
+				case HCLOCK_DUMMY + 124:
+				case HCLOCK_DUMMY + 126:
+				case HCLOCK_DUMMY + 128:
+				case HCLOCK_DUMMY + 130:
+				case HCLOCK_DUMMY + 132:
+				case HCLOCK_DUMMY + 134:
+				case HCLOCK_DUMMY + 136:
+				case HCLOCK_DUMMY + 138:
+				case HCLOCK_DUMMY + 140:
+				case HCLOCK_DUMMY + 142:
+				case HCLOCK_DUMMY + 144:
+				case HCLOCK_DUMMY + 146:
+				case HCLOCK_DUMMY + 148:
+				case HCLOCK_DUMMY + 150:
+				case HCLOCK_DUMMY + 152:
+				case HCLOCK_DUMMY + 154:
+				case HCLOCK_DUMMY + 156:
+				case HCLOCK_DUMMY + 158:
+				case HCLOCK_DUMMY + 160:
+				case HCLOCK_DUMMY + 162:
+				case HCLOCK_DUMMY + 164:
+				case HCLOCK_DUMMY + 166:
+				case HCLOCK_DUMMY + 168:
+				case HCLOCK_DUMMY + 170:
+				case HCLOCK_DUMMY + 172:
+				case HCLOCK_DUMMY + 174:
+				case HCLOCK_DUMMY + 176:
+				case HCLOCK_DUMMY + 178:
+				case HCLOCK_DUMMY + 180:
+				case HCLOCK_DUMMY + 182:
+				case HCLOCK_DUMMY + 184:
+				case HCLOCK_DUMMY + 186:
+				case HCLOCK_DUMMY + 188:
+				case HCLOCK_DUMMY + 190:
+				case HCLOCK_DUMMY + 192:
+				case HCLOCK_DUMMY + 194:
+				case HCLOCK_DUMMY + 196:
+				case HCLOCK_DUMMY + 198:
+				case HCLOCK_DUMMY + 200:
+				case HCLOCK_DUMMY + 202:
+				case HCLOCK_DUMMY + 204:
+				case HCLOCK_DUMMY + 206:
+				case HCLOCK_DUMMY + 208:
+				case HCLOCK_DUMMY + 210:
+				case HCLOCK_DUMMY + 212:
+				case HCLOCK_DUMMY + 214:
+				case HCLOCK_DUMMY + 216:
+				case HCLOCK_DUMMY + 218:
+				case HCLOCK_DUMMY + 220:
+				case HCLOCK_DUMMY + 222:
+				case HCLOCK_DUMMY + 224:
+				case HCLOCK_DUMMY + 226:
+				case HCLOCK_DUMMY + 228:
+				case HCLOCK_DUMMY + 230:
+				case HCLOCK_DUMMY + 232:
+				case HCLOCK_DUMMY + 234:
+				case HCLOCK_DUMMY + 236:
+				case HCLOCK_DUMMY + 238:
+				case HCLOCK_DUMMY + 240:
+				case HCLOCK_DUMMY + 242:
+				case HCLOCK_DUMMY + 244:
+				case HCLOCK_DUMMY + 246:
+				case HCLOCK_DUMMY + 248:
+				case HCLOCK_DUMMY + 250:
+				case HCLOCK_DUMMY + 252:
+				case HCLOCK_DUMMY + 254:
+				case HCLOCK_DUMMY + 256:
+				case HCLOCK_DUMMY + 258:
+				case HCLOCK_DUMMY + 260:
+				case HCLOCK_DUMMY + 262:
+				case HCLOCK_DUMMY + 264:
+				case HCLOCK_DUMMY + 266:
+				case HCLOCK_DUMMY + 268:
+				case HCLOCK_DUMMY + 270:
+				case HCLOCK_DUMMY + 272:
+				case HCLOCK_DUMMY + 274:
+				case HCLOCK_DUMMY + 276:
+				case HCLOCK_DUMMY + 278:
+				case HCLOCK_DUMMY + 280:
+				case HCLOCK_DUMMY + 282:
+				case HCLOCK_DUMMY + 284:
+				case HCLOCK_DUMMY + 286:
+				case HCLOCK_DUMMY + 288:
+				case HCLOCK_DUMMY + 290:
+				case HCLOCK_DUMMY + 292:
+				case HCLOCK_DUMMY + 294:
+				case HCLOCK_DUMMY + 296:
+				case HCLOCK_DUMMY + 298:
+				case HCLOCK_DUMMY + 300:
+				case HCLOCK_DUMMY + 302:
+				case HCLOCK_DUMMY + 304:
+				case HCLOCK_DUMMY + 306:
+				case HCLOCK_DUMMY + 308:
+				case HCLOCK_DUMMY + 310:
+				case HCLOCK_DUMMY + 312:
+				case HCLOCK_DUMMY + 314:
+				case HCLOCK_DUMMY + 316:
+				{
+					NST_COMPILE_ASSERT(HCLOCK_DUMMY & 1);
 
-						cycles.hClock = 320;
-						cycles.vClock += HCLOCK_DUMMY;
-						cycles.count -= HCLOCK_DUMMY;
+					cycles.hClock = cycles.count | 1;
 
-						if (cycles.count <= 320)
-							break;
+					if (cycles.count <= HCLOCK_DUMMY + 318)
+						break;
+				}
+					// fallthrough
+
+				case HCLOCK_DUMMY + 318:
+
+					cycles.hClock = 320;
+					cycles.vClock += HCLOCK_DUMMY;
+					cycles.count -= HCLOCK_DUMMY;
 
-						goto HBlankOff;
+					if (cycles.count <= 320)
+						break;
+
+					goto HBlankOff;
 
-					default:
+				default:
 
-						NST_UNREACHABLE();
+					NST_UNREACHABLE();
 				}
 			}
 
diff --git a/source/core/NstPpu.hpp b/source/core/NstPpu.hpp
index b4fc88e..2d05ae5 100644
--- a/source/core/NstPpu.hpp
+++ b/source/core/NstPpu.hpp
@@ -555,6 +555,7 @@ namespace Nes
 			void DrawPixel(int start, int x, int y, int color);
 			void DrawRectangle(int start, int x, int y, int w, int h, int color);
 			void DrawNumber(int start, int n, int x);
+			void DrawTimer(int frameCount, bool isNTSC);
 		};
 	}
 }
diff --git a/source/core/NstRunTimer.cpp b/source/core/NstRunTimer.cpp
new file mode 100644
index 0000000..11dffa0
--- /dev/null
+++ b/source/core/NstRunTimer.cpp
@@ -0,0 +1,286 @@
+#include "NstRunTimer.hpp"
+
+namespace Nes
+{
+	namespace Core
+	{
+#ifdef NST_MSVC_OPTIMIZE
+#pragma optimize("s", on)
+#endif
+		RunTimer::RunTimer(Cpu* cpu)
+		{
+			_cpu = cpu;
+			timerState = 0;
+			vpauseTime = 0;
+			isValid = Init();
+		}
+
+		bool RunTimer::Init()
+		{
+			std::ifstream file("timer.txt");
+			if (!file.is_open())
+			{
+				return false;
+			}
+			char ch;
+			std::vector<Token> tokens;
+			while (file.get(ch)) {
+				if (isspace(ch)) {
+					continue;
+				}
+				if (ch == '{') {
+					Token t = { 1, '{' };
+					tokens.push_back(t);
+				}
+				else if (ch == '}') {
+					Token t = { 2, '}' };
+					tokens.push_back(t);
+				}
+				else if (ch == '>') {
+					Token t = { 3, '>' };
+					tokens.push_back(t);
+				}
+				else if (ch == '<') {
+					Token t = { 3, '<' };
+					tokens.push_back(t);
+				}
+				else if (ch == '=') {
+					Token t = { 3, '=' };
+					tokens.push_back(t);
+				}
+				else if (ch == '!') {
+					if (!file.get(ch)) {
+						return false;
+					}
+					if (ch != '=') {
+						return false;
+					}
+					Token t = { 3, '!' };
+					tokens.push_back(t);
+				}
+				else if (isalnum(ch)) {
+					std::string word = "";
+					while (std::isalnum(ch)) {
+						word += ch;
+						if (!file.get(ch)) {
+							break;
+						}
+					}
+					file.putback(ch);
+					if (word == "start") {
+						Token t = { 0, 't' };
+						tokens.push_back(t);
+					}
+					else if (word == "stop") {
+						Token t = { 0,'p' }; 
+						tokens.push_back(t);
+					}
+					else if (word == "reset") {
+						Token t = { 0,'r' };
+						tokens.push_back(t);
+					}
+					else if (word == "vpause") {
+						Token t = { 0,'v' };
+						tokens.push_back(t);
+					}
+					else if (word == "end") {
+						Token t = { 0, 'e' };
+						tokens.push_back(t);
+					}
+					else if (word == "delay") {
+						Token t = { 5,'d' }; 
+						tokens.push_back(t);
+					}
+					else {
+						int base = 10;
+						if (word.size() > 2 && word[0] == '0' && (word[1] == 'x' || word[1] == 'X')) {
+							base = 16;
+						}
+						try {
+							size_t idx;
+							int value = std::stoi(word, &idx, base);
+							if (idx != word.size()) {
+								return false;
+							}
+							Token t = { 4,value };
+							tokens.push_back(t);
+						}
+						catch (const std::invalid_argument& e) {
+							return false;
+						}
+						catch (const std::out_of_range& e) {
+							return false;
+						}
+					}
+				}
+				else {
+					return false;
+				}
+			}
+			for (int i = 0; i < tokens.size(); ++i) {
+				if (tokens[i].type == 5) {
+					++i;
+					if (tokens[i].type != 4) {
+						return false;
+					}
+					startFrame = tokens[i].value * -1;
+					continue;
+				}
+				if (tokens[i].type != 0) {
+					return false;
+				}
+				char condType = tokens[i].value;
+				++i;
+				if (tokens[i].type != 1) {
+					return false;
+				}
+				++i;
+				std::vector<TimerCondition> conditions;
+				while (tokens[i].type != 2) {
+					if (tokens[i].type != 4) {
+						return false;
+					}
+					int addr = tokens[i].value;
+					++i;
+					if (tokens[i].type != 3) {
+						return false;
+					}
+					char op = tokens[i].value;
+					++i;
+					if (tokens[i].type != 4) {
+						return false;
+					}
+					int value = tokens[i].value;
+					++i;
+					TimerCondition tc = { addr,op,value };
+					conditions.push_back(tc);
+				}
+				if (condType == 't') {
+					startConds.push_back(conditions);
+				}
+				else if (condType == 'p') {
+					stopConds.push_back(conditions);
+				}
+				else if (condType == 'r') {
+					resetConds.push_back(conditions);
+				}
+				else if (condType == 'v') {
+					vpauseConds.push_back(conditions);
+				} 
+				else if (condType == 'e') {
+					endConds.push_back(conditions);
+				}
+				else {
+					return false;
+				}
+			}
+			return true;
+		}
+
+		void RunTimer::UpdateTimer()
+		{
+			if (CheckConditions(resetConds)) {
+				Reset();
+				return;
+			}
+			if (timerState == 1) //running
+			{
+				++frameCount;
+				if (CheckConditions(endConds)) {
+					timerState = -1;
+				}
+				else if (CheckConditions(stopConds)) {
+					timerState = 0;
+				}
+				else if (CheckConditions(vpauseConds)) {
+					timerState = 2;
+					vpauseTime = 60;
+				}
+			}
+			else if (timerState == 0) //stopped
+			{
+				if (CheckConditions(startConds)) {
+					timerState = 1;
+				}
+			}
+			else if (timerState == 2) //vpause
+			{
+				if (CheckConditions(stopConds)) {
+					timerState = 0;
+					frameCount += 61 - vpauseTime;
+				}
+				else if (CheckConditions(endConds)) {
+					timerState = -1;
+					frameCount += 61 - vpauseTime;
+				}
+				else if (vpauseTime == 0) {
+					timerState = 1;
+					frameCount += 61;
+				}
+				else {
+					vpauseTime--;
+				}
+			}
+		}
+
+		const double RunTimer::GetTime()
+		{
+			return frameCount;
+		}
+
+		const bool RunTimer::IsValid()
+		{
+			return isValid;
+		}
+
+		void RunTimer::Reset()
+		{
+			frameCount = startFrame;
+			timerState = 0;
+		}
+
+		bool RunTimer::CheckConditions(std::vector<std::vector<TimerCondition>>& conds)
+		{
+			for (size_t i = 0; i < conds.size(); ++i) {
+				const std::vector<TimerCondition>& test = conds[i];
+				bool passes = true;
+				for (size_t j = 0; j < test.size(); ++j) {
+					const TimerCondition& cond = test[j];
+					byte ramValue = _cpu->GetRam()[cond.address];
+					if (cond.comparison == '=') {
+						if (ramValue != cond.value) {
+							passes = false;
+							break;
+						}
+					}
+					else if (cond.comparison == '<') {
+						if (ramValue >= cond.value) {
+							passes = false;
+							break;
+						}
+					}
+					else if (cond.comparison == '>') {
+						if (ramValue <= cond.value) {
+							passes = false;
+							break;
+						}
+					}
+					else if (cond.comparison == '!') {
+						if (ramValue == cond.value) {
+							passes = false;
+							break;
+						}
+					}
+					else {
+						isValid = false;
+						return false;
+					}
+				}
+				if (passes) {
+					return true;
+				}
+			}
+			return false;
+		}
+	}
+}
\ No newline at end of file
diff --git a/source/core/NstRunTimer.hpp b/source/core/NstRunTimer.hpp
new file mode 100644
index 0000000..fd31d9a
--- /dev/null
+++ b/source/core/NstRunTimer.hpp
@@ -0,0 +1,62 @@
+#ifndef NST_RUNTIMER_H
+#define NST_RUNTIMER_H
+
+#include "NstCpu.hpp"
+#include <fstream>
+#include <sstream>
+#include <string>
+#include <vector>
+#include <cctype>
+
+
+#ifdef NST_PRAGMA_ONCE
+#pragma once
+#endif
+
+namespace Nes
+{
+    namespace Core
+    {
+
+        struct TimerCondition
+        {
+            int address;
+            char comparison;
+            int value;
+        };
+
+        struct Token
+        {
+            int type;
+            int value;
+        };
+
+        class RunTimer
+        {
+        public:
+            RunTimer(Cpu *cpu);
+            const double GetTime();
+            const bool IsValid();
+            void UpdateTimer();
+            void Reset();
+
+        private:
+            int frameCount;
+            int timerState; //0=stopped 1=running 2=vpause
+            int startFrame;
+            int vpauseTime;
+            bool isValid;
+            Cpu *_cpu;
+            std::vector<std::vector<TimerCondition>> startConds;
+            std::vector<std::vector<TimerCondition>> stopConds;
+            std::vector<std::vector<TimerCondition>> vpauseConds;
+            std::vector<std::vector<TimerCondition>> resetConds;
+            std::vector<std::vector<TimerCondition>> endConds;
+            bool Init();
+            bool CheckConditions(std::vector<std::vector<TimerCondition>> & conds);
+        };
+
+    }
+}
+
+#endif
diff --git a/source/core/input/NstInpTurboFile.cpp b/source/core/input/NstInpTurboFile.cpp
index c1841e0..b7c5e0b 100644
--- a/source/core/input/NstInpTurboFile.cpp
+++ b/source/core/input/NstInpTurboFile.cpp
@@ -42,7 +42,6 @@ namespace Nes
 				std::memset( ram, 0, SIZE );
 				file.Load( File::TURBOFILE, ram, SIZE );
 			}
-
 			TurboFile::~TurboFile()
 			{
 				file.Save( File::TURBOFILE, ram, SIZE );
diff --git a/source/core/ioapi.h b/source/core/ioapi.h
new file mode 100644
index 0000000..7d457ba
--- /dev/null
+++ b/source/core/ioapi.h
@@ -0,0 +1,75 @@
+/* ioapi.h -- IO base function header for compress/uncompress .zip
+   files using zlib + zip or unzip API
+
+   Version 1.01e, February 12th, 2005
+
+   Copyright (C) 1998-2005 Gilles Vollant
+*/
+
+#ifndef _ZLIBIOAPI_H
+#define _ZLIBIOAPI_H
+
+
+#define ZLIB_FILEFUNC_SEEK_CUR (1)
+#define ZLIB_FILEFUNC_SEEK_END (2)
+#define ZLIB_FILEFUNC_SEEK_SET (0)
+
+#define ZLIB_FILEFUNC_MODE_READ      (1)
+#define ZLIB_FILEFUNC_MODE_WRITE     (2)
+#define ZLIB_FILEFUNC_MODE_READWRITEFILTER (3)
+
+#define ZLIB_FILEFUNC_MODE_EXISTING (4)
+#define ZLIB_FILEFUNC_MODE_CREATE   (8)
+
+
+#ifndef ZCALLBACK
+
+#if (defined(WIN32) || defined (WINDOWS) || defined (_WINDOWS)) && defined(CALLBACK) && defined (USEWINDOWS_CALLBACK)
+#define ZCALLBACK CALLBACK
+#else
+#define ZCALLBACK
+#endif
+#endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+typedef voidpf (ZCALLBACK *open_file_func) OF((voidpf opaque, const char* filename, int mode));
+typedef uLong  (ZCALLBACK *read_file_func) OF((voidpf opaque, voidpf stream, void* buf, uLong size));
+typedef uLong  (ZCALLBACK *write_file_func) OF((voidpf opaque, voidpf stream, const void* buf, uLong size));
+typedef long   (ZCALLBACK *tell_file_func) OF((voidpf opaque, voidpf stream));
+typedef long   (ZCALLBACK *seek_file_func) OF((voidpf opaque, voidpf stream, uLong offset, int origin));
+typedef int    (ZCALLBACK *close_file_func) OF((voidpf opaque, voidpf stream));
+typedef int    (ZCALLBACK *testerror_file_func) OF((voidpf opaque, voidpf stream));
+
+typedef struct zlib_filefunc_def_s
+{
+    open_file_func      zopen_file;
+    read_file_func      zread_file;
+    write_file_func     zwrite_file;
+    tell_file_func      ztell_file;
+    seek_file_func      zseek_file;
+    close_file_func     zclose_file;
+    testerror_file_func zerror_file;
+    voidpf              opaque;
+} zlib_filefunc_def;
+
+
+
+void fill_fopen_filefunc OF((zlib_filefunc_def* pzlib_filefunc_def));
+
+#define ZREAD(filefunc,filestream,buf,size) ((*((filefunc).zread_file))((filefunc).opaque,filestream,buf,size))
+#define ZWRITE(filefunc,filestream,buf,size) ((*((filefunc).zwrite_file))((filefunc).opaque,filestream,buf,size))
+#define ZTELL(filefunc,filestream) ((*((filefunc).ztell_file))((filefunc).opaque,filestream))
+#define ZSEEK(filefunc,filestream,pos,mode) ((*((filefunc).zseek_file))((filefunc).opaque,filestream,pos,mode))
+#define ZCLOSE(filefunc,filestream) ((*((filefunc).zclose_file))((filefunc).opaque,filestream))
+#define ZERROR(filefunc,filestream) ((*((filefunc).zerror_file))((filefunc).opaque,filestream))
+
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif
+
diff --git a/source/core/unzip.h b/source/core/unzip.h
new file mode 100644
index 0000000..b247937
--- /dev/null
+++ b/source/core/unzip.h
@@ -0,0 +1,354 @@
+/* unzip.h -- IO for uncompress .zip files using zlib
+   Version 1.01e, February 12th, 2005
+
+   Copyright (C) 1998-2005 Gilles Vollant
+
+   This unzip package allow extract file from .ZIP file, compatible with PKZip 2.04g
+     WinZip, InfoZip tools and compatible.
+
+   Multi volume ZipFile (span) are not supported.
+   Encryption compatible with pkzip 2.04g only supported
+   Old compressions used by old PKZip 1.x are not supported
+
+
+   I WAIT FEEDBACK at mail info@winimage.com
+   Visit also http://www.winimage.com/zLibDll/unzip.htm for evolution
+
+   Condition of use and distribution are the same than zlib :
+
+  This software is provided 'as-is', without any express or implied
+  warranty.  In no event will the authors be held liable for any damages
+  arising from the use of this software.
+
+  Permission is granted to anyone to use this software for any purpose,
+  including commercial applications, and to alter it and redistribute it
+  freely, subject to the following restrictions:
+
+  1. The origin of this software must not be misrepresented; you must not
+     claim that you wrote the original software. If you use this software
+     in a product, an acknowledgment in the product documentation would be
+     appreciated but is not required.
+  2. Altered source versions must be plainly marked as such, and must not be
+     misrepresented as being the original software.
+  3. This notice may not be removed or altered from any source distribution.
+
+
+*/
+
+/* for more info about .ZIP format, see
+      http://www.info-zip.org/pub/infozip/doc/appnote-981119-iz.zip
+      http://www.info-zip.org/pub/infozip/doc/
+   PkWare has also a specification at :
+      ftp://ftp.pkware.com/probdesc.zip
+*/
+
+#ifndef _unz_H
+#define _unz_H
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+#ifndef _ZLIB_H
+#include "zlib.h"
+#endif
+
+#ifndef _ZLIBIOAPI_H
+#include "ioapi.h"
+#endif
+
+#if defined(STRICTUNZIP) || defined(STRICTZIPUNZIP)
+/* like the STRICT of WIN32, we define a pointer that cannot be converted
+    from (void*) without cast */
+typedef struct TagunzFile__ { int unused; } unzFile__;
+typedef unzFile__ *unzFile;
+#else
+typedef voidp unzFile;
+#endif
+
+
+#define UNZ_OK                          (0)
+#define UNZ_END_OF_LIST_OF_FILE         (-100)
+#define UNZ_ERRNO                       (Z_ERRNO)
+#define UNZ_EOF                         (0)
+#define UNZ_PARAMERROR                  (-102)
+#define UNZ_BADZIPFILE                  (-103)
+#define UNZ_INTERNALERROR               (-104)
+#define UNZ_CRCERROR                    (-105)
+
+/* tm_unz contain date/time info */
+typedef struct tm_unz_s
+{
+    uInt tm_sec;            /* seconds after the minute - [0,59] */
+    uInt tm_min;            /* minutes after the hour - [0,59] */
+    uInt tm_hour;           /* hours since midnight - [0,23] */
+    uInt tm_mday;           /* day of the month - [1,31] */
+    uInt tm_mon;            /* months since January - [0,11] */
+    uInt tm_year;           /* years - [1980..2044] */
+} tm_unz;
+
+/* unz_global_info structure contain global data about the ZIPfile
+   These data comes from the end of central dir */
+typedef struct unz_global_info_s
+{
+    uLong number_entry;         /* total number of entries in
+                       the central dir on this disk */
+    uLong size_comment;         /* size of the global comment of the zipfile */
+} unz_global_info;
+
+
+/* unz_file_info contain information about a file in the zipfile */
+typedef struct unz_file_info_s
+{
+    uLong version;              /* version made by                 2 bytes */
+    uLong version_needed;       /* version needed to extract       2 bytes */
+    uLong flag;                 /* general purpose bit flag        2 bytes */
+    uLong compression_method;   /* compression method              2 bytes */
+    uLong dosDate;              /* last mod file date in Dos fmt   4 bytes */
+    uLong crc;                  /* crc-32                          4 bytes */
+    uLong compressed_size;      /* compressed size                 4 bytes */
+    uLong uncompressed_size;    /* uncompressed size               4 bytes */
+    uLong size_filename;        /* filename length                 2 bytes */
+    uLong size_file_extra;      /* extra field length              2 bytes */
+    uLong size_file_comment;    /* file comment length             2 bytes */
+
+    uLong disk_num_start;       /* disk number start               2 bytes */
+    uLong internal_fa;          /* internal file attributes        2 bytes */
+    uLong external_fa;          /* external file attributes        4 bytes */
+
+    tm_unz tmu_date;
+} unz_file_info;
+
+extern int ZEXPORT unzStringFileNameCompare OF ((const char* fileName1,
+                                                 const char* fileName2,
+                                                 int iCaseSensitivity));
+/*
+   Compare two filename (fileName1,fileName2).
+   If iCaseSenisivity = 1, comparision is case sensitivity (like strcmp)
+   If iCaseSenisivity = 2, comparision is not case sensitivity (like strcmpi
+                                or strcasecmp)
+   If iCaseSenisivity = 0, case sensitivity is defaut of your operating system
+    (like 1 on Unix, 2 on Windows)
+*/
+
+
+extern unzFile ZEXPORT unzOpen OF((const char *path));
+/*
+  Open a Zip file. path contain the full pathname (by example,
+     on a Windows XP computer "c:\\zlib\\zlib113.zip" or on an Unix computer
+     "zlib/zlib113.zip".
+     If the zipfile cannot be opened (file don't exist or in not valid), the
+       return value is NULL.
+     Else, the return value is a unzFile Handle, usable with other function
+       of this unzip package.
+*/
+
+extern unzFile ZEXPORT unzOpen2 OF((const char *path,
+                                    zlib_filefunc_def* pzlib_filefunc_def));
+/*
+   Open a Zip file, like unzOpen, but provide a set of file low level API
+      for read/write the zip file (see ioapi.h)
+*/
+
+extern int ZEXPORT unzClose OF((unzFile file));
+/*
+  Close a ZipFile opened with unzipOpen.
+  If there is files inside the .Zip opened with unzOpenCurrentFile (see later),
+    these files MUST be closed with unzipCloseCurrentFile before call unzipClose.
+  return UNZ_OK if there is no problem. */
+
+extern int ZEXPORT unzGetGlobalInfo OF((unzFile file,
+                                        unz_global_info *pglobal_info));
+/*
+  Write info about the ZipFile in the *pglobal_info structure.
+  No preparation of the structure is needed
+  return UNZ_OK if there is no problem. */
+
+
+extern int ZEXPORT unzGetGlobalComment OF((unzFile file,
+                                           char *szComment,
+                                           uLong uSizeBuf));
+/*
+  Get the global comment string of the ZipFile, in the szComment buffer.
+  uSizeBuf is the size of the szComment buffer.
+  return the number of byte copied or an error code <0
+*/
+
+
+/***************************************************************************/
+/* Unzip package allow you browse the directory of the zipfile */
+
+extern int ZEXPORT unzGoToFirstFile OF((unzFile file));
+/*
+  Set the current file of the zipfile to the first file.
+  return UNZ_OK if there is no problem
+*/
+
+extern int ZEXPORT unzGoToNextFile OF((unzFile file));
+/*
+  Set the current file of the zipfile to the next file.
+  return UNZ_OK if there is no problem
+  return UNZ_END_OF_LIST_OF_FILE if the actual file was the latest.
+*/
+
+extern int ZEXPORT unzLocateFile OF((unzFile file,
+                     const char *szFileName,
+                     int iCaseSensitivity));
+/*
+  Try locate the file szFileName in the zipfile.
+  For the iCaseSensitivity signification, see unzStringFileNameCompare
+
+  return value :
+  UNZ_OK if the file is found. It becomes the current file.
+  UNZ_END_OF_LIST_OF_FILE if the file is not found
+*/
+
+
+/* ****************************************** */
+/* Ryan supplied functions */
+/* unz_file_info contain information about a file in the zipfile */
+typedef struct unz_file_pos_s
+{
+    uLong pos_in_zip_directory;   /* offset in zip file directory */
+    uLong num_of_file;            /* # of file */
+} unz_file_pos;
+
+extern int ZEXPORT unzGetFilePos(
+    unzFile file,
+    unz_file_pos* file_pos);
+
+extern int ZEXPORT unzGoToFilePos(
+    unzFile file,
+    unz_file_pos* file_pos);
+
+/* ****************************************** */
+
+extern int ZEXPORT unzGetCurrentFileInfo OF((unzFile file,
+                         unz_file_info *pfile_info,
+                         char *szFileName,
+                         uLong fileNameBufferSize,
+                         void *extraField,
+                         uLong extraFieldBufferSize,
+                         char *szComment,
+                         uLong commentBufferSize));
+/*
+  Get Info about the current file
+  if pfile_info!=NULL, the *pfile_info structure will contain somes info about
+        the current file
+  if szFileName!=NULL, the filemane string will be copied in szFileName
+            (fileNameBufferSize is the size of the buffer)
+  if extraField!=NULL, the extra field information will be copied in extraField
+            (extraFieldBufferSize is the size of the buffer).
+            This is the Central-header version of the extra field
+  if szComment!=NULL, the comment string of the file will be copied in szComment
+            (commentBufferSize is the size of the buffer)
+*/
+
+/***************************************************************************/
+/* for reading the content of the current zipfile, you can open it, read data
+   from it, and close it (you can close it before reading all the file)
+   */
+
+extern int ZEXPORT unzOpenCurrentFile OF((unzFile file));
+/*
+  Open for reading data the current file in the zipfile.
+  If there is no error, the return value is UNZ_OK.
+*/
+
+extern int ZEXPORT unzOpenCurrentFilePassword OF((unzFile file,
+                                                  const char* password));
+/*
+  Open for reading data the current file in the zipfile.
+  password is a crypting password
+  If there is no error, the return value is UNZ_OK.
+*/
+
+extern int ZEXPORT unzOpenCurrentFile2 OF((unzFile file,
+                                           int* method,
+                                           int* level,
+                                           int raw));
+/*
+  Same than unzOpenCurrentFile, but open for read raw the file (not uncompress)
+    if raw==1
+  *method will receive method of compression, *level will receive level of
+     compression
+  note : you can set level parameter as NULL (if you did not want known level,
+         but you CANNOT set method parameter as NULL
+*/
+
+extern int ZEXPORT unzOpenCurrentFile3 OF((unzFile file,
+                                           int* method,
+                                           int* level,
+                                           int raw,
+                                           const char* password));
+/*
+  Same than unzOpenCurrentFile, but open for read raw the file (not uncompress)
+    if raw==1
+  *method will receive method of compression, *level will receive level of
+     compression
+  note : you can set level parameter as NULL (if you did not want known level,
+         but you CANNOT set method parameter as NULL
+*/
+
+
+extern int ZEXPORT unzCloseCurrentFile OF((unzFile file));
+/*
+  Close the file in zip opened with unzOpenCurrentFile
+  Return UNZ_CRCERROR if all the file was read but the CRC is not good
+*/
+
+extern int ZEXPORT unzReadCurrentFile OF((unzFile file,
+                      voidp buf,
+                      unsigned len));
+/*
+  Read bytes from the current file (opened by unzOpenCurrentFile)
+  buf contain buffer where data must be copied
+  len the size of buf.
+
+  return the number of byte copied if somes bytes are copied
+  return 0 if the end of file was reached
+  return <0 with error code if there is an error
+    (UNZ_ERRNO for IO error, or zLib error for uncompress error)
+*/
+
+extern z_off_t ZEXPORT unztell OF((unzFile file));
+/*
+  Give the current position in uncompressed data
+*/
+
+extern int ZEXPORT unzeof OF((unzFile file));
+/*
+  return 1 if the end of file was reached, 0 elsewhere
+*/
+
+extern int ZEXPORT unzGetLocalExtrafield OF((unzFile file,
+                                             voidp buf,
+                                             unsigned len));
+/*
+  Read extra field from the current file (opened by unzOpenCurrentFile)
+  This is the local-header version of the extra field (sometimes, there is
+    more info in the local-header version than in the central-header)
+
+  if buf==NULL, it return the size of the local extra field
+
+  if buf!=NULL, len is the size of the buffer, the extra header is copied in
+    buf.
+  the return value is the number of bytes copied in buf, or (if <0)
+    the error code
+*/
+
+/***************************************************************************/
+
+/* Get the current file offset */
+extern uLong ZEXPORT unzGetOffset (unzFile file);
+
+/* Set the current file offset */
+extern int ZEXPORT unzSetOffset (unzFile file, uLong pos);
+
+
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif /* _unz_H */
diff --git a/source/core/zconf.h b/source/core/zconf.h
new file mode 100644
index 0000000..03a9431
--- /dev/null
+++ b/source/core/zconf.h
@@ -0,0 +1,332 @@
+/* zconf.h -- configuration of the zlib compression library
+ * Copyright (C) 1995-2005 Jean-loup Gailly.
+ * For conditions of distribution and use, see copyright notice in zlib.h
+ */
+
+/* @(#) $Id$ */
+
+#ifndef ZCONF_H
+#define ZCONF_H
+
+/*
+ * If you *really* need a unique prefix for all types and library functions,
+ * compile with -DZ_PREFIX. The "standard" zlib should be compiled without it.
+ */
+#ifdef Z_PREFIX
+#  define deflateInit_          z_deflateInit_
+#  define deflate               z_deflate
+#  define deflateEnd            z_deflateEnd
+#  define inflateInit_          z_inflateInit_
+#  define inflate               z_inflate
+#  define inflateEnd            z_inflateEnd
+#  define deflateInit2_         z_deflateInit2_
+#  define deflateSetDictionary  z_deflateSetDictionary
+#  define deflateCopy           z_deflateCopy
+#  define deflateReset          z_deflateReset
+#  define deflateParams         z_deflateParams
+#  define deflateBound          z_deflateBound
+#  define deflatePrime          z_deflatePrime
+#  define inflateInit2_         z_inflateInit2_
+#  define inflateSetDictionary  z_inflateSetDictionary
+#  define inflateSync           z_inflateSync
+#  define inflateSyncPoint      z_inflateSyncPoint
+#  define inflateCopy           z_inflateCopy
+#  define inflateReset          z_inflateReset
+#  define inflateBack           z_inflateBack
+#  define inflateBackEnd        z_inflateBackEnd
+#  define compress              z_compress
+#  define compress2             z_compress2
+#  define compressBound         z_compressBound
+#  define uncompress            z_uncompress
+#  define adler32               z_adler32
+#  define crc32                 z_crc32
+#  define get_crc_table         z_get_crc_table
+#  define zError                z_zError
+
+#  define alloc_func            z_alloc_func
+#  define free_func             z_free_func
+#  define in_func               z_in_func
+#  define out_func              z_out_func
+#  define Byte                  z_Byte
+#  define uInt                  z_uInt
+#  define uLong                 z_uLong
+#  define Bytef                 z_Bytef
+#  define charf                 z_charf
+#  define intf                  z_intf
+#  define uIntf                 z_uIntf
+#  define uLongf                z_uLongf
+#  define voidpf                z_voidpf
+#  define voidp                 z_voidp
+#endif
+
+#if defined(__MSDOS__) && !defined(MSDOS)
+#  define MSDOS
+#endif
+#if (defined(OS_2) || defined(__OS2__)) && !defined(OS2)
+#  define OS2
+#endif
+#if defined(_WINDOWS) && !defined(WINDOWS)
+#  define WINDOWS
+#endif
+#if defined(_WIN32) || defined(_WIN32_WCE) || defined(__WIN32__)
+#  ifndef WIN32
+#    define WIN32
+#  endif
+#endif
+#if (defined(MSDOS) || defined(OS2) || defined(WINDOWS)) && !defined(WIN32)
+#  if !defined(__GNUC__) && !defined(__FLAT__) && !defined(__386__)
+#    ifndef SYS16BIT
+#      define SYS16BIT
+#    endif
+#  endif
+#endif
+
+/*
+ * Compile with -DMAXSEG_64K if the alloc function cannot allocate more
+ * than 64k bytes at a time (needed on systems with 16-bit int).
+ */
+#ifdef SYS16BIT
+#  define MAXSEG_64K
+#endif
+#ifdef MSDOS
+#  define UNALIGNED_OK
+#endif
+
+#ifdef __STDC_VERSION__
+#  ifndef STDC
+#    define STDC
+#  endif
+#  if __STDC_VERSION__ >= 199901L
+#    ifndef STDC99
+#      define STDC99
+#    endif
+#  endif
+#endif
+#if !defined(STDC) && (defined(__STDC__) || defined(__cplusplus))
+#  define STDC
+#endif
+#if !defined(STDC) && (defined(__GNUC__) || defined(__BORLANDC__))
+#  define STDC
+#endif
+#if !defined(STDC) && (defined(MSDOS) || defined(WINDOWS) || defined(WIN32))
+#  define STDC
+#endif
+#if !defined(STDC) && (defined(OS2) || defined(__HOS_AIX__))
+#  define STDC
+#endif
+
+#if defined(__OS400__) && !defined(STDC)    /* iSeries (formerly AS/400). */
+#  define STDC
+#endif
+
+#ifndef STDC
+#  ifndef const /* cannot use !defined(STDC) && !defined(const) on Mac */
+#    define const       /* note: need a more gentle solution here */
+#  endif
+#endif
+
+/* Some Mac compilers merge all .h files incorrectly: */
+#if defined(__MWERKS__)||defined(applec)||defined(THINK_C)||defined(__SC__)
+#  define NO_DUMMY_DECL
+#endif
+
+/* Maximum value for memLevel in deflateInit2 */
+#ifndef MAX_MEM_LEVEL
+#  ifdef MAXSEG_64K
+#    define MAX_MEM_LEVEL 8
+#  else
+#    define MAX_MEM_LEVEL 9
+#  endif
+#endif
+
+/* Maximum value for windowBits in deflateInit2 and inflateInit2.
+ * WARNING: reducing MAX_WBITS makes minigzip unable to extract .gz files
+ * created by gzip. (Files created by minigzip can still be extracted by
+ * gzip.)
+ */
+#ifndef MAX_WBITS
+#  define MAX_WBITS   15 /* 32K LZ77 window */
+#endif
+
+/* The memory requirements for deflate are (in bytes):
+            (1 << (windowBits+2)) +  (1 << (memLevel+9))
+ that is: 128K for windowBits=15  +  128K for memLevel = 8  (default values)
+ plus a few kilobytes for small objects. For example, if you want to reduce
+ the default memory requirements from 256K to 128K, compile with
+     make CFLAGS="-O -DMAX_WBITS=14 -DMAX_MEM_LEVEL=7"
+ Of course this will generally degrade compression (there's no free lunch).
+
+   The memory requirements for inflate are (in bytes) 1 << windowBits
+ that is, 32K for windowBits=15 (default value) plus a few kilobytes
+ for small objects.
+*/
+
+                        /* Type declarations */
+
+#ifndef OF /* function prototypes */
+#  ifdef STDC
+#    define OF(args)  args
+#  else
+#    define OF(args)  ()
+#  endif
+#endif
+
+/* The following definitions for FAR are needed only for MSDOS mixed
+ * model programming (small or medium model with some far allocations).
+ * This was tested only with MSC; for other MSDOS compilers you may have
+ * to define NO_MEMCPY in zutil.h.  If you don't need the mixed model,
+ * just define FAR to be empty.
+ */
+#ifdef SYS16BIT
+#  if defined(M_I86SM) || defined(M_I86MM)
+     /* MSC small or medium model */
+#    define SMALL_MEDIUM
+#    ifdef _MSC_VER
+#      define FAR _far
+#    else
+#      define FAR far
+#    endif
+#  endif
+#  if (defined(__SMALL__) || defined(__MEDIUM__))
+     /* Turbo C small or medium model */
+#    define SMALL_MEDIUM
+#    ifdef __BORLANDC__
+#      define FAR _far
+#    else
+#      define FAR far
+#    endif
+#  endif
+#endif
+
+#if defined(WINDOWS) || defined(WIN32)
+   /* If building or using zlib as a DLL, define ZLIB_DLL.
+    * This is not mandatory, but it offers a little performance increase.
+    */
+#  ifdef ZLIB_DLL
+#    if defined(WIN32) && (!defined(__BORLANDC__) || (__BORLANDC__ >= 0x500))
+#      ifdef ZLIB_INTERNAL
+#        define ZEXTERN extern __declspec(dllexport)
+#      else
+#        define ZEXTERN extern __declspec(dllimport)
+#      endif
+#    endif
+#  endif  /* ZLIB_DLL */
+   /* If building or using zlib with the WINAPI/WINAPIV calling convention,
+    * define ZLIB_WINAPI.
+    * Caution: the standard ZLIB1.DLL is NOT compiled using ZLIB_WINAPI.
+    */
+#  ifdef ZLIB_WINAPI
+#    ifdef FAR
+#      undef FAR
+#    endif
+#    include <windows.h>
+     /* No need for _export, use ZLIB.DEF instead. */
+     /* For complete Windows compatibility, use WINAPI, not __stdcall. */
+#    define ZEXPORT WINAPI
+#    ifdef WIN32
+#      define ZEXPORTVA WINAPIV
+#    else
+#      define ZEXPORTVA FAR CDECL
+#    endif
+#  endif
+#endif
+
+#if defined (__BEOS__)
+#  ifdef ZLIB_DLL
+#    ifdef ZLIB_INTERNAL
+#      define ZEXPORT   __declspec(dllexport)
+#      define ZEXPORTVA __declspec(dllexport)
+#    else
+#      define ZEXPORT   __declspec(dllimport)
+#      define ZEXPORTVA __declspec(dllimport)
+#    endif
+#  endif
+#endif
+
+#ifndef ZEXTERN
+#  define ZEXTERN extern
+#endif
+#ifndef ZEXPORT
+#  define ZEXPORT
+#endif
+#ifndef ZEXPORTVA
+#  define ZEXPORTVA
+#endif
+
+#ifndef FAR
+#  define FAR
+#endif
+
+#if !defined(__MACTYPES__)
+typedef unsigned char  Byte;  /* 8 bits */
+#endif
+typedef unsigned int   uInt;  /* 16 bits or more */
+typedef unsigned long  uLong; /* 32 bits or more */
+
+#ifdef SMALL_MEDIUM
+   /* Borland C/C++ and some old MSC versions ignore FAR inside typedef */
+#  define Bytef Byte FAR
+#else
+   typedef Byte  FAR Bytef;
+#endif
+typedef char  FAR charf;
+typedef int   FAR intf;
+typedef uInt  FAR uIntf;
+typedef uLong FAR uLongf;
+
+#ifdef STDC
+   typedef void const *voidpc;
+   typedef void FAR   *voidpf;
+   typedef void       *voidp;
+#else
+   typedef Byte const *voidpc;
+   typedef Byte FAR   *voidpf;
+   typedef Byte       *voidp;
+#endif
+
+#if 0           /* HAVE_UNISTD_H -- this line is updated by ./configure */
+#  include <sys/types.h> /* for off_t */
+#  include <unistd.h>    /* for SEEK_* and off_t */
+#  ifdef VMS
+#    include <unixio.h>   /* for off_t */
+#  endif
+#  define z_off_t off_t
+#endif
+#ifndef SEEK_SET
+#  define SEEK_SET        0       /* Seek from beginning of file.  */
+#  define SEEK_CUR        1       /* Seek from current position.  */
+#  define SEEK_END        2       /* Set file pointer to EOF plus "offset" */
+#endif
+#ifndef z_off_t
+#  define z_off_t long
+#endif
+
+#if defined(__OS400__)
+#  define NO_vsnprintf
+#endif
+
+#if defined(__MVS__)
+#  define NO_vsnprintf
+#  ifdef FAR
+#    undef FAR
+#  endif
+#endif
+
+/* MVS linker does not support external names larger than 8 bytes */
+#if defined(__MVS__)
+#   pragma map(deflateInit_,"DEIN")
+#   pragma map(deflateInit2_,"DEIN2")
+#   pragma map(deflateEnd,"DEEND")
+#   pragma map(deflateBound,"DEBND")
+#   pragma map(inflateInit_,"ININ")
+#   pragma map(inflateInit2_,"ININ2")
+#   pragma map(inflateEnd,"INEND")
+#   pragma map(inflateSync,"INSY")
+#   pragma map(inflateSetDictionary,"INSEDI")
+#   pragma map(compressBound,"CMBND")
+#   pragma map(inflate_table,"INTABL")
+#   pragma map(inflate_fast,"INFA")
+#   pragma map(inflate_copyright,"INCOPY")
+#endif
+
+#endif /* ZCONF_H */
diff --git a/source/core/zip.h b/source/core/zip.h
new file mode 100644
index 0000000..acacce8
--- /dev/null
+++ b/source/core/zip.h
@@ -0,0 +1,235 @@
+/* zip.h -- IO for compress .zip files using zlib
+   Version 1.01e, February 12th, 2005
+
+   Copyright (C) 1998-2005 Gilles Vollant
+
+   This unzip package allow creates .ZIP file, compatible with PKZip 2.04g
+     WinZip, InfoZip tools and compatible.
+   Multi volume ZipFile (span) are not supported.
+   Encryption compatible with pkzip 2.04g only supported
+   Old compressions used by old PKZip 1.x are not supported
+
+  For uncompress .zip file, look at unzip.h
+
+
+   I WAIT FEEDBACK at mail info@winimage.com
+   Visit also http://www.winimage.com/zLibDll/unzip.html for evolution
+
+   Condition of use and distribution are the same than zlib :
+
+  This software is provided 'as-is', without any express or implied
+  warranty.  In no event will the authors be held liable for any damages
+  arising from the use of this software.
+
+  Permission is granted to anyone to use this software for any purpose,
+  including commercial applications, and to alter it and redistribute it
+  freely, subject to the following restrictions:
+
+  1. The origin of this software must not be misrepresented; you must not
+     claim that you wrote the original software. If you use this software
+     in a product, an acknowledgment in the product documentation would be
+     appreciated but is not required.
+  2. Altered source versions must be plainly marked as such, and must not be
+     misrepresented as being the original software.
+  3. This notice may not be removed or altered from any source distribution.
+
+
+*/
+
+/* for more info about .ZIP format, see
+      http://www.info-zip.org/pub/infozip/doc/appnote-981119-iz.zip
+      http://www.info-zip.org/pub/infozip/doc/
+   PkWare has also a specification at :
+      ftp://ftp.pkware.com/probdesc.zip
+*/
+
+#ifndef _zip_H
+#define _zip_H
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+#ifndef _ZLIB_H
+#include "zlib.h"
+#endif
+
+#ifndef _ZLIBIOAPI_H
+#include "ioapi.h"
+#endif
+
+#if defined(STRICTZIP) || defined(STRICTZIPUNZIP)
+/* like the STRICT of WIN32, we define a pointer that cannot be converted
+    from (void*) without cast */
+typedef struct TagzipFile__ { int unused; } zipFile__;
+typedef zipFile__ *zipFile;
+#else
+typedef voidp zipFile;
+#endif
+
+#define ZIP_OK                          (0)
+#define ZIP_EOF                         (0)
+#define ZIP_ERRNO                       (Z_ERRNO)
+#define ZIP_PARAMERROR                  (-102)
+#define ZIP_BADZIPFILE                  (-103)
+#define ZIP_INTERNALERROR               (-104)
+
+#ifndef DEF_MEM_LEVEL
+#  if MAX_MEM_LEVEL >= 8
+#    define DEF_MEM_LEVEL 8
+#  else
+#    define DEF_MEM_LEVEL  MAX_MEM_LEVEL
+#  endif
+#endif
+/* default memLevel */
+
+/* tm_zip contain date/time info */
+typedef struct tm_zip_s
+{
+    uInt tm_sec;            /* seconds after the minute - [0,59] */
+    uInt tm_min;            /* minutes after the hour - [0,59] */
+    uInt tm_hour;           /* hours since midnight - [0,23] */
+    uInt tm_mday;           /* day of the month - [1,31] */
+    uInt tm_mon;            /* months since January - [0,11] */
+    uInt tm_year;           /* years - [1980..2044] */
+} tm_zip;
+
+typedef struct
+{
+    tm_zip      tmz_date;       /* date in understandable format           */
+    uLong       dosDate;       /* if dos_date == 0, tmu_date is used      */
+/*    uLong       flag;        */   /* general purpose bit flag        2 bytes */
+
+    uLong       internal_fa;    /* internal file attributes        2 bytes */
+    uLong       external_fa;    /* external file attributes        4 bytes */
+} zip_fileinfo;
+
+typedef const char* zipcharpc;
+
+
+#define APPEND_STATUS_CREATE        (0)
+#define APPEND_STATUS_CREATEAFTER   (1)
+#define APPEND_STATUS_ADDINZIP      (2)
+
+extern zipFile ZEXPORT zipOpen OF((const char *pathname, int append));
+/*
+  Create a zipfile.
+     pathname contain on Windows XP a filename like "c:\\zlib\\zlib113.zip" or on
+       an Unix computer "zlib/zlib113.zip".
+     if the file pathname exist and append==APPEND_STATUS_CREATEAFTER, the zip
+       will be created at the end of the file.
+         (useful if the file contain a self extractor code)
+     if the file pathname exist and append==APPEND_STATUS_ADDINZIP, we will
+       add files in existing zip (be sure you don't add file that doesn't exist)
+     If the zipfile cannot be opened, the return value is NULL.
+     Else, the return value is a zipFile Handle, usable with other function
+       of this zip package.
+*/
+
+/* Note : there is no delete function into a zipfile.
+   If you want delete file into a zipfile, you must open a zipfile, and create another
+   Of couse, you can use RAW reading and writing to copy the file you did not want delte
+*/
+
+extern zipFile ZEXPORT zipOpen2 OF((const char *pathname,
+                                   int append,
+                                   zipcharpc* globalcomment,
+                                   zlib_filefunc_def* pzlib_filefunc_def));
+
+extern int ZEXPORT zipOpenNewFileInZip OF((zipFile file,
+                       const char* filename,
+                       const zip_fileinfo* zipfi,
+                       const void* extrafield_local,
+                       uInt size_extrafield_local,
+                       const void* extrafield_global,
+                       uInt size_extrafield_global,
+                       const char* comment,
+                       int method,
+                       int level));
+/*
+  Open a file in the ZIP for writing.
+  filename : the filename in zip (if NULL, '-' without quote will be used
+  *zipfi contain supplemental information
+  if extrafield_local!=NULL and size_extrafield_local>0, extrafield_local
+    contains the extrafield data the the local header
+  if extrafield_global!=NULL and size_extrafield_global>0, extrafield_global
+    contains the extrafield data the the local header
+  if comment != NULL, comment contain the comment string
+  method contain the compression method (0 for store, Z_DEFLATED for deflate)
+  level contain the level of compression (can be Z_DEFAULT_COMPRESSION)
+*/
+
+
+extern int ZEXPORT zipOpenNewFileInZip2 OF((zipFile file,
+                                            const char* filename,
+                                            const zip_fileinfo* zipfi,
+                                            const void* extrafield_local,
+                                            uInt size_extrafield_local,
+                                            const void* extrafield_global,
+                                            uInt size_extrafield_global,
+                                            const char* comment,
+                                            int method,
+                                            int level,
+                                            int raw));
+
+/*
+  Same than zipOpenNewFileInZip, except if raw=1, we write raw file
+ */
+
+extern int ZEXPORT zipOpenNewFileInZip3 OF((zipFile file,
+                                            const char* filename,
+                                            const zip_fileinfo* zipfi,
+                                            const void* extrafield_local,
+                                            uInt size_extrafield_local,
+                                            const void* extrafield_global,
+                                            uInt size_extrafield_global,
+                                            const char* comment,
+                                            int method,
+                                            int level,
+                                            int raw,
+                                            int windowBits,
+                                            int memLevel,
+                                            int strategy,
+                                            const char* password,
+                                            uLong crcForCtypting));
+
+/*
+  Same than zipOpenNewFileInZip2, except
+    windowBits,memLevel,,strategy : see parameter strategy in deflateInit2
+    password : crypting password (NULL for no crypting)
+    crcForCtypting : crc of file to compress (needed for crypting)
+ */
+
+
+extern int ZEXPORT zipWriteInFileInZip OF((zipFile file,
+                       const void* buf,
+                       unsigned len));
+/*
+  Write data in the zipfile
+*/
+
+extern int ZEXPORT zipCloseFileInZip OF((zipFile file));
+/*
+  Close the current file in the zipfile
+*/
+
+extern int ZEXPORT zipCloseFileInZipRaw OF((zipFile file,
+                                            uLong uncompressed_size,
+                                            uLong crc32));
+/*
+  Close the current file in the zipfile, for fiel opened with
+    parameter raw=1 in zipOpenNewFileInZip2
+  uncompressed_size and crc32 are value for the uncompressed size
+*/
+
+extern int ZEXPORT zipClose OF((zipFile file,
+                const char* global_comment));
+/*
+  Close the zipfile
+*/
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif /* _zip_H */
diff --git a/source/core/zlib.h b/source/core/zlib.h
new file mode 100644
index 0000000..0228179
--- /dev/null
+++ b/source/core/zlib.h
@@ -0,0 +1,1357 @@
+/* zlib.h -- interface of the 'zlib' general purpose compression library
+  version 1.2.3, July 18th, 2005
+
+  Copyright (C) 1995-2005 Jean-loup Gailly and Mark Adler
+
+  This software is provided 'as-is', without any express or implied
+  warranty.  In no event will the authors be held liable for any damages
+  arising from the use of this software.
+
+  Permission is granted to anyone to use this software for any purpose,
+  including commercial applications, and to alter it and redistribute it
+  freely, subject to the following restrictions:
+
+  1. The origin of this software must not be misrepresented; you must not
+     claim that you wrote the original software. If you use this software
+     in a product, an acknowledgment in the product documentation would be
+     appreciated but is not required.
+  2. Altered source versions must be plainly marked as such, and must not be
+     misrepresented as being the original software.
+  3. This notice may not be removed or altered from any source distribution.
+
+  Jean-loup Gailly        Mark Adler
+  jloup@gzip.org          madler@alumni.caltech.edu
+
+
+  The data format used by the zlib library is described by RFCs (Request for
+  Comments) 1950 to 1952 in the files http://www.ietf.org/rfc/rfc1950.txt
+  (zlib format), rfc1951.txt (deflate format) and rfc1952.txt (gzip format).
+*/
+
+#ifndef ZLIB_H
+#define ZLIB_H
+
+#include "zconf.h"
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+#define ZLIB_VERSION "1.2.3"
+#define ZLIB_VERNUM 0x1230
+
+/*
+     The 'zlib' compression library provides in-memory compression and
+  decompression functions, including integrity checks of the uncompressed
+  data.  This version of the library supports only one compression method
+  (deflation) but other algorithms will be added later and will have the same
+  stream interface.
+
+     Compression can be done in a single step if the buffers are large
+  enough (for example if an input file is mmap'ed), or can be done by
+  repeated calls of the compression function.  In the latter case, the
+  application must provide more input and/or consume the output
+  (providing more output space) before each call.
+
+     The compressed data format used by default by the in-memory functions is
+  the zlib format, which is a zlib wrapper documented in RFC 1950, wrapped
+  around a deflate stream, which is itself documented in RFC 1951.
+
+     The library also supports reading and writing files in gzip (.gz) format
+  with an interface similar to that of stdio using the functions that start
+  with "gz".  The gzip format is different from the zlib format.  gzip is a
+  gzip wrapper, documented in RFC 1952, wrapped around a deflate stream.
+
+     This library can optionally read and write gzip streams in memory as well.
+
+     The zlib format was designed to be compact and fast for use in memory
+  and on communications channels.  The gzip format was designed for single-
+  file compression on file systems, has a larger header than zlib to maintain
+  directory information, and uses a different, slower check method than zlib.
+
+     The library does not install any signal handler. The decoder checks
+  the consistency of the compressed data, so the library should never
+  crash even in case of corrupted input.
+*/
+
+typedef voidpf (*alloc_func) OF((voidpf opaque, uInt items, uInt size));
+typedef void   (*free_func)  OF((voidpf opaque, voidpf address));
+
+struct internal_state;
+
+typedef struct z_stream_s {
+    Bytef    *next_in;  /* next input byte */
+    uInt     avail_in;  /* number of bytes available at next_in */
+    uLong    total_in;  /* total nb of input bytes read so far */
+
+    Bytef    *next_out; /* next output byte should be put there */
+    uInt     avail_out; /* remaining free space at next_out */
+    uLong    total_out; /* total nb of bytes output so far */
+
+    char     *msg;      /* last error message, NULL if no error */
+    struct internal_state FAR *state; /* not visible by applications */
+
+    alloc_func zalloc;  /* used to allocate the internal state */
+    free_func  zfree;   /* used to free the internal state */
+    voidpf     opaque;  /* private data object passed to zalloc and zfree */
+
+    int     data_type;  /* best guess about the data type: binary or text */
+    uLong   adler;      /* adler32 value of the uncompressed data */
+    uLong   reserved;   /* reserved for future use */
+} z_stream;
+
+typedef z_stream FAR *z_streamp;
+
+/*
+     gzip header information passed to and from zlib routines.  See RFC 1952
+  for more details on the meanings of these fields.
+*/
+typedef struct gz_header_s {
+    int     text;       /* true if compressed data believed to be text */
+    uLong   time;       /* modification time */
+    int     xflags;     /* extra flags (not used when writing a gzip file) */
+    int     os;         /* operating system */
+    Bytef   *extra;     /* pointer to extra field or Z_NULL if none */
+    uInt    extra_len;  /* extra field length (valid if extra != Z_NULL) */
+    uInt    extra_max;  /* space at extra (only when reading header) */
+    Bytef   *name;      /* pointer to zero-terminated file name or Z_NULL */
+    uInt    name_max;   /* space at name (only when reading header) */
+    Bytef   *comment;   /* pointer to zero-terminated comment or Z_NULL */
+    uInt    comm_max;   /* space at comment (only when reading header) */
+    int     hcrc;       /* true if there was or will be a header crc */
+    int     done;       /* true when done reading gzip header (not used
+                           when writing a gzip file) */
+} gz_header;
+
+typedef gz_header FAR *gz_headerp;
+
+/*
+   The application must update next_in and avail_in when avail_in has
+   dropped to zero. It must update next_out and avail_out when avail_out
+   has dropped to zero. The application must initialize zalloc, zfree and
+   opaque before calling the init function. All other fields are set by the
+   compression library and must not be updated by the application.
+
+   The opaque value provided by the application will be passed as the first
+   parameter for calls of zalloc and zfree. This can be useful for custom
+   memory management. The compression library attaches no meaning to the
+   opaque value.
+
+   zalloc must return Z_NULL if there is not enough memory for the object.
+   If zlib is used in a multi-threaded application, zalloc and zfree must be
+   thread safe.
+
+   On 16-bit systems, the functions zalloc and zfree must be able to allocate
+   exactly 65536 bytes, but will not be required to allocate more than this
+   if the symbol MAXSEG_64K is defined (see zconf.h). WARNING: On MSDOS,
+   pointers returned by zalloc for objects of exactly 65536 bytes *must*
+   have their offset normalized to zero. The default allocation function
+   provided by this library ensures this (see zutil.c). To reduce memory
+   requirements and avoid any allocation of 64K objects, at the expense of
+   compression ratio, compile the library with -DMAX_WBITS=14 (see zconf.h).
+
+   The fields total_in and total_out can be used for statistics or
+   progress reports. After compression, total_in holds the total size of
+   the uncompressed data and may be saved for use in the decompressor
+   (particularly if the decompressor wants to decompress everything in
+   a single step).
+*/
+
+                        /* constants */
+
+#define Z_NO_FLUSH      0
+#define Z_PARTIAL_FLUSH 1 /* will be removed, use Z_SYNC_FLUSH instead */
+#define Z_SYNC_FLUSH    2
+#define Z_FULL_FLUSH    3
+#define Z_FINISH        4
+#define Z_BLOCK         5
+/* Allowed flush values; see deflate() and inflate() below for details */
+
+#define Z_OK            0
+#define Z_STREAM_END    1
+#define Z_NEED_DICT     2
+#define Z_ERRNO        (-1)
+#define Z_STREAM_ERROR (-2)
+#define Z_DATA_ERROR   (-3)
+#define Z_MEM_ERROR    (-4)
+#define Z_BUF_ERROR    (-5)
+#define Z_VERSION_ERROR (-6)
+/* Return codes for the compression/decompression functions. Negative
+ * values are errors, positive values are used for special but normal events.
+ */
+
+#define Z_NO_COMPRESSION         0
+#define Z_BEST_SPEED             1
+#define Z_BEST_COMPRESSION       9
+#define Z_DEFAULT_COMPRESSION  (-1)
+/* compression levels */
+
+#define Z_FILTERED            1
+#define Z_HUFFMAN_ONLY        2
+#define Z_RLE                 3
+#define Z_FIXED               4
+#define Z_DEFAULT_STRATEGY    0
+/* compression strategy; see deflateInit2() below for details */
+
+#define Z_BINARY   0
+#define Z_TEXT     1
+#define Z_ASCII    Z_TEXT   /* for compatibility with 1.2.2 and earlier */
+#define Z_UNKNOWN  2
+/* Possible values of the data_type field (though see inflate()) */
+
+#define Z_DEFLATED   8
+/* The deflate compression method (the only one supported in this version) */
+
+#define Z_NULL  0  /* for initializing zalloc, zfree, opaque */
+
+#define zlib_version zlibVersion()
+/* for compatibility with versions < 1.0.2 */
+
+                        /* basic functions */
+
+ZEXTERN const char * ZEXPORT zlibVersion OF((void));
+/* The application can compare zlibVersion and ZLIB_VERSION for consistency.
+   If the first character differs, the library code actually used is
+   not compatible with the zlib.h header file used by the application.
+   This check is automatically made by deflateInit and inflateInit.
+ */
+
+/*
+ZEXTERN int ZEXPORT deflateInit OF((z_streamp strm, int level));
+
+     Initializes the internal stream state for compression. The fields
+   zalloc, zfree and opaque must be initialized before by the caller.
+   If zalloc and zfree are set to Z_NULL, deflateInit updates them to
+   use default allocation functions.
+
+     The compression level must be Z_DEFAULT_COMPRESSION, or between 0 and 9:
+   1 gives best speed, 9 gives best compression, 0 gives no compression at
+   all (the input data is simply copied a block at a time).
+   Z_DEFAULT_COMPRESSION requests a default compromise between speed and
+   compression (currently equivalent to level 6).
+
+     deflateInit returns Z_OK if success, Z_MEM_ERROR if there was not
+   enough memory, Z_STREAM_ERROR if level is not a valid compression level,
+   Z_VERSION_ERROR if the zlib library version (zlib_version) is incompatible
+   with the version assumed by the caller (ZLIB_VERSION).
+   msg is set to null if there is no error message.  deflateInit does not
+   perform any compression: this will be done by deflate().
+*/
+
+
+ZEXTERN int ZEXPORT deflate OF((z_streamp strm, int flush));
+/*
+    deflate compresses as much data as possible, and stops when the input
+  buffer becomes empty or the output buffer becomes full. It may introduce some
+  output latency (reading input without producing any output) except when
+  forced to flush.
+
+    The detailed semantics are as follows. deflate performs one or both of the
+  following actions:
+
+  - Compress more input starting at next_in and update next_in and avail_in
+    accordingly. If not all input can be processed (because there is not
+    enough room in the output buffer), next_in and avail_in are updated and
+    processing will resume at this point for the next call of deflate().
+
+  - Provide more output starting at next_out and update next_out and avail_out
+    accordingly. This action is forced if the parameter flush is non zero.
+    Forcing flush frequently degrades the compression ratio, so this parameter
+    should be set only when necessary (in interactive applications).
+    Some output may be provided even if flush is not set.
+
+  Before the call of deflate(), the application should ensure that at least
+  one of the actions is possible, by providing more input and/or consuming
+  more output, and updating avail_in or avail_out accordingly; avail_out
+  should never be zero before the call. The application can consume the
+  compressed output when it wants, for example when the output buffer is full
+  (avail_out == 0), or after each call of deflate(). If deflate returns Z_OK
+  and with zero avail_out, it must be called again after making room in the
+  output buffer because there might be more output pending.
+
+    Normally the parameter flush is set to Z_NO_FLUSH, which allows deflate to
+  decide how much data to accumualte before producing output, in order to
+  maximize compression.
+
+    If the parameter flush is set to Z_SYNC_FLUSH, all pending output is
+  flushed to the output buffer and the output is aligned on a byte boundary, so
+  that the decompressor can get all input data available so far. (In particular
+  avail_in is zero after the call if enough output space has been provided
+  before the call.)  Flushing may degrade compression for some compression
+  algorithms and so it should be used only when necessary.
+
+    If flush is set to Z_FULL_FLUSH, all output is flushed as with
+  Z_SYNC_FLUSH, and the compression state is reset so that decompression can
+  restart from this point if previous compressed data has been damaged or if
+  random access is desired. Using Z_FULL_FLUSH too often can seriously degrade
+  compression.
+
+    If deflate returns with avail_out == 0, this function must be called again
+  with the same value of the flush parameter and more output space (updated
+  avail_out), until the flush is complete (deflate returns with non-zero
+  avail_out). In the case of a Z_FULL_FLUSH or Z_SYNC_FLUSH, make sure that
+  avail_out is greater than six to avoid repeated flush markers due to
+  avail_out == 0 on return.
+
+    If the parameter flush is set to Z_FINISH, pending input is processed,
+  pending output is flushed and deflate returns with Z_STREAM_END if there
+  was enough output space; if deflate returns with Z_OK, this function must be
+  called again with Z_FINISH and more output space (updated avail_out) but no
+  more input data, until it returns with Z_STREAM_END or an error. After
+  deflate has returned Z_STREAM_END, the only possible operations on the
+  stream are deflateReset or deflateEnd.
+
+    Z_FINISH can be used immediately after deflateInit if all the compression
+  is to be done in a single step. In this case, avail_out must be at least
+  the value returned by deflateBound (see below). If deflate does not return
+  Z_STREAM_END, then it must be called again as described above.
+
+    deflate() sets strm->adler to the adler32 checksum of all input read
+  so far (that is, total_in bytes).
+
+    deflate() may update strm->data_type if it can make a good guess about
+  the input data type (Z_BINARY or Z_TEXT). In doubt, the data is considered
+  binary. This field is only for information purposes and does not affect
+  the compression algorithm in any manner.
+
+    deflate() returns Z_OK if some progress has been made (more input
+  processed or more output produced), Z_STREAM_END if all input has been
+  consumed and all output has been produced (only when flush is set to
+  Z_FINISH), Z_STREAM_ERROR if the stream state was inconsistent (for example
+  if next_in or next_out was NULL), Z_BUF_ERROR if no progress is possible
+  (for example avail_in or avail_out was zero). Note that Z_BUF_ERROR is not
+  fatal, and deflate() can be called again with more input and more output
+  space to continue compressing.
+*/
+
+
+ZEXTERN int ZEXPORT deflateEnd OF((z_streamp strm));
+/*
+     All dynamically allocated data structures for this stream are freed.
+   This function discards any unprocessed input and does not flush any
+   pending output.
+
+     deflateEnd returns Z_OK if success, Z_STREAM_ERROR if the
+   stream state was inconsistent, Z_DATA_ERROR if the stream was freed
+   prematurely (some input or output was discarded). In the error case,
+   msg may be set but then points to a static string (which must not be
+   deallocated).
+*/
+
+
+/*
+ZEXTERN int ZEXPORT inflateInit OF((z_streamp strm));
+
+     Initializes the internal stream state for decompression. The fields
+   next_in, avail_in, zalloc, zfree and opaque must be initialized before by
+   the caller. If next_in is not Z_NULL and avail_in is large enough (the exact
+   value depends on the compression method), inflateInit determines the
+   compression method from the zlib header and allocates all data structures
+   accordingly; otherwise the allocation will be deferred to the first call of
+   inflate.  If zalloc and zfree are set to Z_NULL, inflateInit updates them to
+   use default allocation functions.
+
+     inflateInit returns Z_OK if success, Z_MEM_ERROR if there was not enough
+   memory, Z_VERSION_ERROR if the zlib library version is incompatible with the
+   version assumed by the caller.  msg is set to null if there is no error
+   message. inflateInit does not perform any decompression apart from reading
+   the zlib header if present: this will be done by inflate().  (So next_in and
+   avail_in may be modified, but next_out and avail_out are unchanged.)
+*/
+
+
+ZEXTERN int ZEXPORT inflate OF((z_streamp strm, int flush));
+/*
+    inflate decompresses as much data as possible, and stops when the input
+  buffer becomes empty or the output buffer becomes full. It may introduce
+  some output latency (reading input without producing any output) except when
+  forced to flush.
+
+  The detailed semantics are as follows. inflate performs one or both of the
+  following actions:
+
+  - Decompress more input starting at next_in and update next_in and avail_in
+    accordingly. If not all input can be processed (because there is not
+    enough room in the output buffer), next_in is updated and processing
+    will resume at this point for the next call of inflate().
+
+  - Provide more output starting at next_out and update next_out and avail_out
+    accordingly.  inflate() provides as much output as possible, until there
+    is no more input data or no more space in the output buffer (see below
+    about the flush parameter).
+
+  Before the call of inflate(), the application should ensure that at least
+  one of the actions is possible, by providing more input and/or consuming
+  more output, and updating the next_* and avail_* values accordingly.
+  The application can consume the uncompressed output when it wants, for
+  example when the output buffer is full (avail_out == 0), or after each
+  call of inflate(). If inflate returns Z_OK and with zero avail_out, it
+  must be called again after making room in the output buffer because there
+  might be more output pending.
+
+    The flush parameter of inflate() can be Z_NO_FLUSH, Z_SYNC_FLUSH,
+  Z_FINISH, or Z_BLOCK. Z_SYNC_FLUSH requests that inflate() flush as much
+  output as possible to the output buffer. Z_BLOCK requests that inflate() stop
+  if and when it gets to the next deflate block boundary. When decoding the
+  zlib or gzip format, this will cause inflate() to return immediately after
+  the header and before the first block. When doing a raw inflate, inflate()
+  will go ahead and process the first block, and will return when it gets to
+  the end of that block, or when it runs out of data.
+
+    The Z_BLOCK option assists in appending to or combining deflate streams.
+  Also to assist in this, on return inflate() will set strm->data_type to the
+  number of unused bits in the last byte taken from strm->next_in, plus 64
+  if inflate() is currently decoding the last block in the deflate stream,
+  plus 128 if inflate() returned immediately after decoding an end-of-block
+  code or decoding the complete header up to just before the first byte of the
+  deflate stream. The end-of-block will not be indicated until all of the
+  uncompressed data from that block has been written to strm->next_out.  The
+  number of unused bits may in general be greater than seven, except when
+  bit 7 of data_type is set, in which case the number of unused bits will be
+  less than eight.
+
+    inflate() should normally be called until it returns Z_STREAM_END or an
+  error. However if all decompression is to be performed in a single step
+  (a single call of inflate), the parameter flush should be set to
+  Z_FINISH. In this case all pending input is processed and all pending
+  output is flushed; avail_out must be large enough to hold all the
+  uncompressed data. (The size of the uncompressed data may have been saved
+  by the compressor for this purpose.) The next operation on this stream must
+  be inflateEnd to deallocate the decompression state. The use of Z_FINISH
+  is never required, but can be used to inform inflate that a faster approach
+  may be used for the single inflate() call.
+
+     In this implementation, inflate() always flushes as much output as
+  possible to the output buffer, and always uses the faster approach on the
+  first call. So the only effect of the flush parameter in this implementation
+  is on the return value of inflate(), as noted below, or when it returns early
+  because Z_BLOCK is used.
+
+     If a preset dictionary is needed after this call (see inflateSetDictionary
+  below), inflate sets strm->adler to the adler32 checksum of the dictionary
+  chosen by the compressor and returns Z_NEED_DICT; otherwise it sets
+  strm->adler to the adler32 checksum of all output produced so far (that is,
+  total_out bytes) and returns Z_OK, Z_STREAM_END or an error code as described
+  below. At the end of the stream, inflate() checks that its computed adler32
+  checksum is equal to that saved by the compressor and returns Z_STREAM_END
+  only if the checksum is correct.
+
+    inflate() will decompress and check either zlib-wrapped or gzip-wrapped
+  deflate data.  The header type is detected automatically.  Any information
+  contained in the gzip header is not retained, so applications that need that
+  information should instead use raw inflate, see inflateInit2() below, or
+  inflateBack() and perform their own processing of the gzip header and
+  trailer.
+
+    inflate() returns Z_OK if some progress has been made (more input processed
+  or more output produced), Z_STREAM_END if the end of the compressed data has
+  been reached and all uncompressed output has been produced, Z_NEED_DICT if a
+  preset dictionary is needed at this point, Z_DATA_ERROR if the input data was
+  corrupted (input stream not conforming to the zlib format or incorrect check
+  value), Z_STREAM_ERROR if the stream structure was inconsistent (for example
+  if next_in or next_out was NULL), Z_MEM_ERROR if there was not enough memory,
+  Z_BUF_ERROR if no progress is possible or if there was not enough room in the
+  output buffer when Z_FINISH is used. Note that Z_BUF_ERROR is not fatal, and
+  inflate() can be called again with more input and more output space to
+  continue decompressing. If Z_DATA_ERROR is returned, the application may then
+  call inflateSync() to look for a good compression block if a partial recovery
+  of the data is desired.
+*/
+
+
+ZEXTERN int ZEXPORT inflateEnd OF((z_streamp strm));
+/*
+     All dynamically allocated data structures for this stream are freed.
+   This function discards any unprocessed input and does not flush any
+   pending output.
+
+     inflateEnd returns Z_OK if success, Z_STREAM_ERROR if the stream state
+   was inconsistent. In the error case, msg may be set but then points to a
+   static string (which must not be deallocated).
+*/
+
+                        /* Advanced functions */
+
+/*
+    The following functions are needed only in some special applications.
+*/
+
+/*
+ZEXTERN int ZEXPORT deflateInit2 OF((z_streamp strm,
+                                     int  level,
+                                     int  method,
+                                     int  windowBits,
+                                     int  memLevel,
+                                     int  strategy));
+
+     This is another version of deflateInit with more compression options. The
+   fields next_in, zalloc, zfree and opaque must be initialized before by
+   the caller.
+
+     The method parameter is the compression method. It must be Z_DEFLATED in
+   this version of the library.
+
+     The windowBits parameter is the base two logarithm of the window size
+   (the size of the history buffer). It should be in the range 8..15 for this
+   version of the library. Larger values of this parameter result in better
+   compression at the expense of memory usage. The default value is 15 if
+   deflateInit is used instead.
+
+     windowBits can also be -8..-15 for raw deflate. In this case, -windowBits
+   determines the window size. deflate() will then generate raw deflate data
+   with no zlib header or trailer, and will not compute an adler32 check value.
+
+     windowBits can also be greater than 15 for optional gzip encoding. Add
+   16 to windowBits to write a simple gzip header and trailer around the
+   compressed data instead of a zlib wrapper. The gzip header will have no
+   file name, no extra data, no comment, no modification time (set to zero),
+   no header crc, and the operating system will be set to 255 (unknown).  If a
+   gzip stream is being written, strm->adler is a crc32 instead of an adler32.
+
+     The memLevel parameter specifies how much memory should be allocated
+   for the internal compression state. memLevel=1 uses minimum memory but
+   is slow and reduces compression ratio; memLevel=9 uses maximum memory
+   for optimal speed. The default value is 8. See zconf.h for total memory
+   usage as a function of windowBits and memLevel.
+
+     The strategy parameter is used to tune the compression algorithm. Use the
+   value Z_DEFAULT_STRATEGY for normal data, Z_FILTERED for data produced by a
+   filter (or predictor), Z_HUFFMAN_ONLY to force Huffman encoding only (no
+   string match), or Z_RLE to limit match distances to one (run-length
+   encoding). Filtered data consists mostly of small values with a somewhat
+   random distribution. In this case, the compression algorithm is tuned to
+   compress them better. The effect of Z_FILTERED is to force more Huffman
+   coding and less string matching; it is somewhat intermediate between
+   Z_DEFAULT and Z_HUFFMAN_ONLY. Z_RLE is designed to be almost as fast as
+   Z_HUFFMAN_ONLY, but give better compression for PNG image data. The strategy
+   parameter only affects the compression ratio but not the correctness of the
+   compressed output even if it is not set appropriately.  Z_FIXED prevents the
+   use of dynamic Huffman codes, allowing for a simpler decoder for special
+   applications.
+
+      deflateInit2 returns Z_OK if success, Z_MEM_ERROR if there was not enough
+   memory, Z_STREAM_ERROR if a parameter is invalid (such as an invalid
+   method). msg is set to null if there is no error message.  deflateInit2 does
+   not perform any compression: this will be done by deflate().
+*/
+
+ZEXTERN int ZEXPORT deflateSetDictionary OF((z_streamp strm,
+                                             const Bytef *dictionary,
+                                             uInt  dictLength));
+/*
+     Initializes the compression dictionary from the given byte sequence
+   without producing any compressed output. This function must be called
+   immediately after deflateInit, deflateInit2 or deflateReset, before any
+   call of deflate. The compressor and decompressor must use exactly the same
+   dictionary (see inflateSetDictionary).
+
+     The dictionary should consist of strings (byte sequences) that are likely
+   to be encountered later in the data to be compressed, with the most commonly
+   used strings preferably put towards the end of the dictionary. Using a
+   dictionary is most useful when the data to be compressed is short and can be
+   predicted with good accuracy; the data can then be compressed better than
+   with the default empty dictionary.
+
+     Depending on the size of the compression data structures selected by
+   deflateInit or deflateInit2, a part of the dictionary may in effect be
+   discarded, for example if the dictionary is larger than the window size in
+   deflate or deflate2. Thus the strings most likely to be useful should be
+   put at the end of the dictionary, not at the front. In addition, the
+   current implementation of deflate will use at most the window size minus
+   262 bytes of the provided dictionary.
+
+     Upon return of this function, strm->adler is set to the adler32 value
+   of the dictionary; the decompressor may later use this value to determine
+   which dictionary has been used by the compressor. (The adler32 value
+   applies to the whole dictionary even if only a subset of the dictionary is
+   actually used by the compressor.) If a raw deflate was requested, then the
+   adler32 value is not computed and strm->adler is not set.
+
+     deflateSetDictionary returns Z_OK if success, or Z_STREAM_ERROR if a
+   parameter is invalid (such as NULL dictionary) or the stream state is
+   inconsistent (for example if deflate has already been called for this stream
+   or if the compression method is bsort). deflateSetDictionary does not
+   perform any compression: this will be done by deflate().
+*/
+
+ZEXTERN int ZEXPORT deflateCopy OF((z_streamp dest,
+                                    z_streamp source));
+/*
+     Sets the destination stream as a complete copy of the source stream.
+
+     This function can be useful when several compression strategies will be
+   tried, for example when there are several ways of pre-processing the input
+   data with a filter. The streams that will be discarded should then be freed
+   by calling deflateEnd.  Note that deflateCopy duplicates the internal
+   compression state which can be quite large, so this strategy is slow and
+   can consume lots of memory.
+
+     deflateCopy returns Z_OK if success, Z_MEM_ERROR if there was not
+   enough memory, Z_STREAM_ERROR if the source stream state was inconsistent
+   (such as zalloc being NULL). msg is left unchanged in both source and
+   destination.
+*/
+
+ZEXTERN int ZEXPORT deflateReset OF((z_streamp strm));
+/*
+     This function is equivalent to deflateEnd followed by deflateInit,
+   but does not free and reallocate all the internal compression state.
+   The stream will keep the same compression level and any other attributes
+   that may have been set by deflateInit2.
+
+      deflateReset returns Z_OK if success, or Z_STREAM_ERROR if the source
+   stream state was inconsistent (such as zalloc or state being NULL).
+*/
+
+ZEXTERN int ZEXPORT deflateParams OF((z_streamp strm,
+                                      int level,
+                                      int strategy));
+/*
+     Dynamically update the compression level and compression strategy.  The
+   interpretation of level and strategy is as in deflateInit2.  This can be
+   used to switch between compression and straight copy of the input data, or
+   to switch to a different kind of input data requiring a different
+   strategy. If the compression level is changed, the input available so far
+   is compressed with the old level (and may be flushed); the new level will
+   take effect only at the next call of deflate().
+
+     Before the call of deflateParams, the stream state must be set as for
+   a call of deflate(), since the currently available input may have to
+   be compressed and flushed. In particular, strm->avail_out must be non-zero.
+
+     deflateParams returns Z_OK if success, Z_STREAM_ERROR if the source
+   stream state was inconsistent or if a parameter was invalid, Z_BUF_ERROR
+   if strm->avail_out was zero.
+*/
+
+ZEXTERN int ZEXPORT deflateTune OF((z_streamp strm,
+                                    int good_length,
+                                    int max_lazy,
+                                    int nice_length,
+                                    int max_chain));
+/*
+     Fine tune deflate's internal compression parameters.  This should only be
+   used by someone who understands the algorithm used by zlib's deflate for
+   searching for the best matching string, and even then only by the most
+   fanatic optimizer trying to squeeze out the last compressed bit for their
+   specific input data.  Read the deflate.c source code for the meaning of the
+   max_lazy, good_length, nice_length, and max_chain parameters.
+
+     deflateTune() can be called after deflateInit() or deflateInit2(), and
+   returns Z_OK on success, or Z_STREAM_ERROR for an invalid deflate stream.
+ */
+
+ZEXTERN uLong ZEXPORT deflateBound OF((z_streamp strm,
+                                       uLong sourceLen));
+/*
+     deflateBound() returns an upper bound on the compressed size after
+   deflation of sourceLen bytes.  It must be called after deflateInit()
+   or deflateInit2().  This would be used to allocate an output buffer
+   for deflation in a single pass, and so would be called before deflate().
+*/
+
+ZEXTERN int ZEXPORT deflatePrime OF((z_streamp strm,
+                                     int bits,
+                                     int value));
+/*
+     deflatePrime() inserts bits in the deflate output stream.  The intent
+  is that this function is used to start off the deflate output with the
+  bits leftover from a previous deflate stream when appending to it.  As such,
+  this function can only be used for raw deflate, and must be used before the
+  first deflate() call after a deflateInit2() or deflateReset().  bits must be
+  less than or equal to 16, and that many of the least significant bits of
+  value will be inserted in the output.
+
+      deflatePrime returns Z_OK if success, or Z_STREAM_ERROR if the source
+   stream state was inconsistent.
+*/
+
+ZEXTERN int ZEXPORT deflateSetHeader OF((z_streamp strm,
+                                         gz_headerp head));
+/*
+      deflateSetHeader() provides gzip header information for when a gzip
+   stream is requested by deflateInit2().  deflateSetHeader() may be called
+   after deflateInit2() or deflateReset() and before the first call of
+   deflate().  The text, time, os, extra field, name, and comment information
+   in the provided gz_header structure are written to the gzip header (xflag is
+   ignored -- the extra flags are set according to the compression level).  The
+   caller must assure that, if not Z_NULL, name and comment are terminated with
+   a zero byte, and that if extra is not Z_NULL, that extra_len bytes are
+   available there.  If hcrc is true, a gzip header crc is included.  Note that
+   the current versions of the command-line version of gzip (up through version
+   1.3.x) do not support header crc's, and will report that it is a "multi-part
+   gzip file" and give up.
+
+      If deflateSetHeader is not used, the default gzip header has text false,
+   the time set to zero, and os set to 255, with no extra, name, or comment
+   fields.  The gzip header is returned to the default state by deflateReset().
+
+      deflateSetHeader returns Z_OK if success, or Z_STREAM_ERROR if the source
+   stream state was inconsistent.
+*/
+
+/*
+ZEXTERN int ZEXPORT inflateInit2 OF((z_streamp strm,
+                                     int  windowBits));
+
+     This is another version of inflateInit with an extra parameter. The
+   fields next_in, avail_in, zalloc, zfree and opaque must be initialized
+   before by the caller.
+
+     The windowBits parameter is the base two logarithm of the maximum window
+   size (the size of the history buffer).  It should be in the range 8..15 for
+   this version of the library. The default value is 15 if inflateInit is used
+   instead. windowBits must be greater than or equal to the windowBits value
+   provided to deflateInit2() while compressing, or it must be equal to 15 if
+   deflateInit2() was not used. If a compressed stream with a larger window
+   size is given as input, inflate() will return with the error code
+   Z_DATA_ERROR instead of trying to allocate a larger window.
+
+     windowBits can also be -8..-15 for raw inflate. In this case, -windowBits
+   determines the window size. inflate() will then process raw deflate data,
+   not looking for a zlib or gzip header, not generating a check value, and not
+   looking for any check values for comparison at the end of the stream. This
+   is for use with other formats that use the deflate compressed data format
+   such as zip.  Those formats provide their own check values. If a custom
+   format is developed using the raw deflate format for compressed data, it is
+   recommended that a check value such as an adler32 or a crc32 be applied to
+   the uncompressed data as is done in the zlib, gzip, and zip formats.  For
+   most applications, the zlib format should be used as is. Note that comments
+   above on the use in deflateInit2() applies to the magnitude of windowBits.
+
+     windowBits can also be greater than 15 for optional gzip decoding. Add
+   32 to windowBits to enable zlib and gzip decoding with automatic header
+   detection, or add 16 to decode only the gzip format (the zlib format will
+   return a Z_DATA_ERROR).  If a gzip stream is being decoded, strm->adler is
+   a crc32 instead of an adler32.
+
+     inflateInit2 returns Z_OK if success, Z_MEM_ERROR if there was not enough
+   memory, Z_STREAM_ERROR if a parameter is invalid (such as a null strm). msg
+   is set to null if there is no error message.  inflateInit2 does not perform
+   any decompression apart from reading the zlib header if present: this will
+   be done by inflate(). (So next_in and avail_in may be modified, but next_out
+   and avail_out are unchanged.)
+*/
+
+ZEXTERN int ZEXPORT inflateSetDictionary OF((z_streamp strm,
+                                             const Bytef *dictionary,
+                                             uInt  dictLength));
+/*
+     Initializes the decompression dictionary from the given uncompressed byte
+   sequence. This function must be called immediately after a call of inflate,
+   if that call returned Z_NEED_DICT. The dictionary chosen by the compressor
+   can be determined from the adler32 value returned by that call of inflate.
+   The compressor and decompressor must use exactly the same dictionary (see
+   deflateSetDictionary).  For raw inflate, this function can be called
+   immediately after inflateInit2() or inflateReset() and before any call of
+   inflate() to set the dictionary.  The application must insure that the
+   dictionary that was used for compression is provided.
+
+     inflateSetDictionary returns Z_OK if success, Z_STREAM_ERROR if a
+   parameter is invalid (such as NULL dictionary) or the stream state is
+   inconsistent, Z_DATA_ERROR if the given dictionary doesn't match the
+   expected one (incorrect adler32 value). inflateSetDictionary does not
+   perform any decompression: this will be done by subsequent calls of
+   inflate().
+*/
+
+ZEXTERN int ZEXPORT inflateSync OF((z_streamp strm));
+/*
+    Skips invalid compressed data until a full flush point (see above the
+  description of deflate with Z_FULL_FLUSH) can be found, or until all
+  available input is skipped. No output is provided.
+
+    inflateSync returns Z_OK if a full flush point has been found, Z_BUF_ERROR
+  if no more input was provided, Z_DATA_ERROR if no flush point has been found,
+  or Z_STREAM_ERROR if the stream structure was inconsistent. In the success
+  case, the application may save the current current value of total_in which
+  indicates where valid compressed data was found. In the error case, the
+  application may repeatedly call inflateSync, providing more input each time,
+  until success or end of the input data.
+*/
+
+ZEXTERN int ZEXPORT inflateCopy OF((z_streamp dest,
+                                    z_streamp source));
+/*
+     Sets the destination stream as a complete copy of the source stream.
+
+     This function can be useful when randomly accessing a large stream.  The
+   first pass through the stream can periodically record the inflate state,
+   allowing restarting inflate at those points when randomly accessing the
+   stream.
+
+     inflateCopy returns Z_OK if success, Z_MEM_ERROR if there was not
+   enough memory, Z_STREAM_ERROR if the source stream state was inconsistent
+   (such as zalloc being NULL). msg is left unchanged in both source and
+   destination.
+*/
+
+ZEXTERN int ZEXPORT inflateReset OF((z_streamp strm));
+/*
+     This function is equivalent to inflateEnd followed by inflateInit,
+   but does not free and reallocate all the internal decompression state.
+   The stream will keep attributes that may have been set by inflateInit2.
+
+      inflateReset returns Z_OK if success, or Z_STREAM_ERROR if the source
+   stream state was inconsistent (such as zalloc or state being NULL).
+*/
+
+ZEXTERN int ZEXPORT inflatePrime OF((z_streamp strm,
+                                     int bits,
+                                     int value));
+/*
+     This function inserts bits in the inflate input stream.  The intent is
+  that this function is used to start inflating at a bit position in the
+  middle of a byte.  The provided bits will be used before any bytes are used
+  from next_in.  This function should only be used with raw inflate, and
+  should be used before the first inflate() call after inflateInit2() or
+  inflateReset().  bits must be less than or equal to 16, and that many of the
+  least significant bits of value will be inserted in the input.
+
+      inflatePrime returns Z_OK if success, or Z_STREAM_ERROR if the source
+   stream state was inconsistent.
+*/
+
+ZEXTERN int ZEXPORT inflateGetHeader OF((z_streamp strm,
+                                         gz_headerp head));
+/*
+      inflateGetHeader() requests that gzip header information be stored in the
+   provided gz_header structure.  inflateGetHeader() may be called after
+   inflateInit2() or inflateReset(), and before the first call of inflate().
+   As inflate() processes the gzip stream, head->done is zero until the header
+   is completed, at which time head->done is set to one.  If a zlib stream is
+   being decoded, then head->done is set to -1 to indicate that there will be
+   no gzip header information forthcoming.  Note that Z_BLOCK can be used to
+   force inflate() to return immediately after header processing is complete
+   and before any actual data is decompressed.
+
+      The text, time, xflags, and os fields are filled in with the gzip header
+   contents.  hcrc is set to true if there is a header CRC.  (The header CRC
+   was valid if done is set to one.)  If extra is not Z_NULL, then extra_max
+   contains the maximum number of bytes to write to extra.  Once done is true,
+   extra_len contains the actual extra field length, and extra contains the
+   extra field, or that field truncated if extra_max is less than extra_len.
+   If name is not Z_NULL, then up to name_max characters are written there,
+   terminated with a zero unless the length is greater than name_max.  If
+   comment is not Z_NULL, then up to comm_max characters are written there,
+   terminated with a zero unless the length is greater than comm_max.  When
+   any of extra, name, or comment are not Z_NULL and the respective field is
+   not present in the header, then that field is set to Z_NULL to signal its
+   absence.  This allows the use of deflateSetHeader() with the returned
+   structure to duplicate the header.  However if those fields are set to
+   allocated memory, then the application will need to save those pointers
+   elsewhere so that they can be eventually freed.
+
+      If inflateGetHeader is not used, then the header information is simply
+   discarded.  The header is always checked for validity, including the header
+   CRC if present.  inflateReset() will reset the process to discard the header
+   information.  The application would need to call inflateGetHeader() again to
+   retrieve the header from the next gzip stream.
+
+      inflateGetHeader returns Z_OK if success, or Z_STREAM_ERROR if the source
+   stream state was inconsistent.
+*/
+
+/*
+ZEXTERN int ZEXPORT inflateBackInit OF((z_streamp strm, int windowBits,
+                                        unsigned char FAR *window));
+
+     Initialize the internal stream state for decompression using inflateBack()
+   calls.  The fields zalloc, zfree and opaque in strm must be initialized
+   before the call.  If zalloc and zfree are Z_NULL, then the default library-
+   derived memory allocation routines are used.  windowBits is the base two
+   logarithm of the window size, in the range 8..15.  window is a caller
+   supplied buffer of that size.  Except for special applications where it is
+   assured that deflate was used with small window sizes, windowBits must be 15
+   and a 32K byte window must be supplied to be able to decompress general
+   deflate streams.
+
+     See inflateBack() for the usage of these routines.
+
+     inflateBackInit will return Z_OK on success, Z_STREAM_ERROR if any of
+   the paramaters are invalid, Z_MEM_ERROR if the internal state could not
+   be allocated, or Z_VERSION_ERROR if the version of the library does not
+   match the version of the header file.
+*/
+
+typedef unsigned (*in_func) OF((void FAR *, unsigned char FAR * FAR *));
+typedef int (*out_func) OF((void FAR *, unsigned char FAR *, unsigned));
+
+ZEXTERN int ZEXPORT inflateBack OF((z_streamp strm,
+                                    in_func in, void FAR *in_desc,
+                                    out_func out, void FAR *out_desc));
+/*
+     inflateBack() does a raw inflate with a single call using a call-back
+   interface for input and output.  This is more efficient than inflate() for
+   file i/o applications in that it avoids copying between the output and the
+   sliding window by simply making the window itself the output buffer.  This
+   function trusts the application to not change the output buffer passed by
+   the output function, at least until inflateBack() returns.
+
+     inflateBackInit() must be called first to allocate the internal state
+   and to initialize the state with the user-provided window buffer.
+   inflateBack() may then be used multiple times to inflate a complete, raw
+   deflate stream with each call.  inflateBackEnd() is then called to free
+   the allocated state.
+
+     A raw deflate stream is one with no zlib or gzip header or trailer.
+   This routine would normally be used in a utility that reads zip or gzip
+   files and writes out uncompressed files.  The utility would decode the
+   header and process the trailer on its own, hence this routine expects
+   only the raw deflate stream to decompress.  This is different from the
+   normal behavior of inflate(), which expects either a zlib or gzip header and
+   trailer around the deflate stream.
+
+     inflateBack() uses two subroutines supplied by the caller that are then
+   called by inflateBack() for input and output.  inflateBack() calls those
+   routines until it reads a complete deflate stream and writes out all of the
+   uncompressed data, or until it encounters an error.  The function's
+   parameters and return types are defined above in the in_func and out_func
+   typedefs.  inflateBack() will call in(in_desc, &buf) which should return the
+   number of bytes of provided input, and a pointer to that input in buf.  If
+   there is no input available, in() must return zero--buf is ignored in that
+   case--and inflateBack() will return a buffer error.  inflateBack() will call
+   out(out_desc, buf, len) to write the uncompressed data buf[0..len-1].  out()
+   should return zero on success, or non-zero on failure.  If out() returns
+   non-zero, inflateBack() will return with an error.  Neither in() nor out()
+   are permitted to change the contents of the window provided to
+   inflateBackInit(), which is also the buffer that out() uses to write from.
+   The length written by out() will be at most the window size.  Any non-zero
+   amount of input may be provided by in().
+
+     For convenience, inflateBack() can be provided input on the first call by
+   setting strm->next_in and strm->avail_in.  If that input is exhausted, then
+   in() will be called.  Therefore strm->next_in must be initialized before
+   calling inflateBack().  If strm->next_in is Z_NULL, then in() will be called
+   immediately for input.  If strm->next_in is not Z_NULL, then strm->avail_in
+   must also be initialized, and then if strm->avail_in is not zero, input will
+   initially be taken from strm->next_in[0 .. strm->avail_in - 1].
+
+     The in_desc and out_desc parameters of inflateBack() is passed as the
+   first parameter of in() and out() respectively when they are called.  These
+   descriptors can be optionally used to pass any information that the caller-
+   supplied in() and out() functions need to do their job.
+
+     On return, inflateBack() will set strm->next_in and strm->avail_in to
+   pass back any unused input that was provided by the last in() call.  The
+   return values of inflateBack() can be Z_STREAM_END on success, Z_BUF_ERROR
+   if in() or out() returned an error, Z_DATA_ERROR if there was a format
+   error in the deflate stream (in which case strm->msg is set to indicate the
+   nature of the error), or Z_STREAM_ERROR if the stream was not properly
+   initialized.  In the case of Z_BUF_ERROR, an input or output error can be
+   distinguished using strm->next_in which will be Z_NULL only if in() returned
+   an error.  If strm->next is not Z_NULL, then the Z_BUF_ERROR was due to
+   out() returning non-zero.  (in() will always be called before out(), so
+   strm->next_in is assured to be defined if out() returns non-zero.)  Note
+   that inflateBack() cannot return Z_OK.
+*/
+
+ZEXTERN int ZEXPORT inflateBackEnd OF((z_streamp strm));
+/*
+     All memory allocated by inflateBackInit() is freed.
+
+     inflateBackEnd() returns Z_OK on success, or Z_STREAM_ERROR if the stream
+   state was inconsistent.
+*/
+
+ZEXTERN uLong ZEXPORT zlibCompileFlags OF((void));
+/* Return flags indicating compile-time options.
+
+    Type sizes, two bits each, 00 = 16 bits, 01 = 32, 10 = 64, 11 = other:
+     1.0: size of uInt
+     3.2: size of uLong
+     5.4: size of voidpf (pointer)
+     7.6: size of z_off_t
+
+    Compiler, assembler, and debug options:
+     8: DEBUG
+     9: ASMV or ASMINF -- use ASM code
+     10: ZLIB_WINAPI -- exported functions use the WINAPI calling convention
+     11: 0 (reserved)
+
+    One-time table building (smaller code, but not thread-safe if true):
+     12: BUILDFIXED -- build static block decoding tables when needed
+     13: DYNAMIC_CRC_TABLE -- build CRC calculation tables when needed
+     14,15: 0 (reserved)
+
+    Library content (indicates missing functionality):
+     16: NO_GZCOMPRESS -- gz* functions cannot compress (to avoid linking
+                          deflate code when not needed)
+     17: NO_GZIP -- deflate can't write gzip streams, and inflate can't detect
+                    and decode gzip streams (to avoid linking crc code)
+     18-19: 0 (reserved)
+
+    Operation variations (changes in library functionality):
+     20: PKZIP_BUG_WORKAROUND -- slightly more permissive inflate
+     21: FASTEST -- deflate algorithm with only one, lowest compression level
+     22,23: 0 (reserved)
+
+    The sprintf variant used by gzprintf (zero is best):
+     24: 0 = vs*, 1 = s* -- 1 means limited to 20 arguments after the format
+     25: 0 = *nprintf, 1 = *printf -- 1 means gzprintf() not secure!
+     26: 0 = returns value, 1 = void -- 1 means inferred string length returned
+
+    Remainder:
+     27-31: 0 (reserved)
+ */
+
+
+                        /* utility functions */
+
+/*
+     The following utility functions are implemented on top of the
+   basic stream-oriented functions. To simplify the interface, some
+   default options are assumed (compression level and memory usage,
+   standard memory allocation functions). The source code of these
+   utility functions can easily be modified if you need special options.
+*/
+
+ZEXTERN int ZEXPORT compress OF((Bytef *dest,   uLongf *destLen,
+                                 const Bytef *source, uLong sourceLen));
+/*
+     Compresses the source buffer into the destination buffer.  sourceLen is
+   the byte length of the source buffer. Upon entry, destLen is the total
+   size of the destination buffer, which must be at least the value returned
+   by compressBound(sourceLen). Upon exit, destLen is the actual size of the
+   compressed buffer.
+     This function can be used to compress a whole file at once if the
+   input file is mmap'ed.
+     compress returns Z_OK if success, Z_MEM_ERROR if there was not
+   enough memory, Z_BUF_ERROR if there was not enough room in the output
+   buffer.
+*/
+
+ZEXTERN int ZEXPORT compress2 OF((Bytef *dest,   uLongf *destLen,
+                                  const Bytef *source, uLong sourceLen,
+                                  int level));
+/*
+     Compresses the source buffer into the destination buffer. The level
+   parameter has the same meaning as in deflateInit.  sourceLen is the byte
+   length of the source buffer. Upon entry, destLen is the total size of the
+   destination buffer, which must be at least the value returned by
+   compressBound(sourceLen). Upon exit, destLen is the actual size of the
+   compressed buffer.
+
+     compress2 returns Z_OK if success, Z_MEM_ERROR if there was not enough
+   memory, Z_BUF_ERROR if there was not enough room in the output buffer,
+   Z_STREAM_ERROR if the level parameter is invalid.
+*/
+
+ZEXTERN uLong ZEXPORT compressBound OF((uLong sourceLen));
+/*
+     compressBound() returns an upper bound on the compressed size after
+   compress() or compress2() on sourceLen bytes.  It would be used before
+   a compress() or compress2() call to allocate the destination buffer.
+*/
+
+ZEXTERN int ZEXPORT uncompress OF((Bytef *dest,   uLongf *destLen,
+                                   const Bytef *source, uLong sourceLen));
+/*
+     Decompresses the source buffer into the destination buffer.  sourceLen is
+   the byte length of the source buffer. Upon entry, destLen is the total
+   size of the destination buffer, which must be large enough to hold the
+   entire uncompressed data. (The size of the uncompressed data must have
+   been saved previously by the compressor and transmitted to the decompressor
+   by some mechanism outside the scope of this compression library.)
+   Upon exit, destLen is the actual size of the compressed buffer.
+     This function can be used to decompress a whole file at once if the
+   input file is mmap'ed.
+
+     uncompress returns Z_OK if success, Z_MEM_ERROR if there was not
+   enough memory, Z_BUF_ERROR if there was not enough room in the output
+   buffer, or Z_DATA_ERROR if the input data was corrupted or incomplete.
+*/
+
+
+typedef voidp gzFile;
+
+ZEXTERN gzFile ZEXPORT gzopen  OF((const char *path, const char *mode));
+/*
+     Opens a gzip (.gz) file for reading or writing. The mode parameter
+   is as in fopen ("rb" or "wb") but can also include a compression level
+   ("wb9") or a strategy: 'f' for filtered data as in "wb6f", 'h' for
+   Huffman only compression as in "wb1h", or 'R' for run-length encoding
+   as in "wb1R". (See the description of deflateInit2 for more information
+   about the strategy parameter.)
+
+     gzopen can be used to read a file which is not in gzip format; in this
+   case gzread will directly read from the file without decompression.
+
+     gzopen returns NULL if the file could not be opened or if there was
+   insufficient memory to allocate the (de)compression state; errno
+   can be checked to distinguish the two cases (if errno is zero, the
+   zlib error is Z_MEM_ERROR).  */
+
+ZEXTERN gzFile ZEXPORT gzdopen  OF((int fd, const char *mode));
+/*
+     gzdopen() associates a gzFile with the file descriptor fd.  File
+   descriptors are obtained from calls like open, dup, creat, pipe or
+   fileno (in the file has been previously opened with fopen).
+   The mode parameter is as in gzopen.
+     The next call of gzclose on the returned gzFile will also close the
+   file descriptor fd, just like fclose(fdopen(fd), mode) closes the file
+   descriptor fd. If you want to keep fd open, use gzdopen(dup(fd), mode).
+     gzdopen returns NULL if there was insufficient memory to allocate
+   the (de)compression state.
+*/
+
+ZEXTERN int ZEXPORT gzsetparams OF((gzFile file, int level, int strategy));
+/*
+     Dynamically update the compression level or strategy. See the description
+   of deflateInit2 for the meaning of these parameters.
+     gzsetparams returns Z_OK if success, or Z_STREAM_ERROR if the file was not
+   opened for writing.
+*/
+
+ZEXTERN int ZEXPORT    gzread  OF((gzFile file, voidp buf, unsigned len));
+/*
+     Reads the given number of uncompressed bytes from the compressed file.
+   If the input file was not in gzip format, gzread copies the given number
+   of bytes into the buffer.
+     gzread returns the number of uncompressed bytes actually read (0 for
+   end of file, -1 for error). */
+
+ZEXTERN int ZEXPORT    gzwrite OF((gzFile file,
+                                   voidpc buf, unsigned len));
+/*
+     Writes the given number of uncompressed bytes into the compressed file.
+   gzwrite returns the number of uncompressed bytes actually written
+   (0 in case of error).
+*/
+
+ZEXTERN int ZEXPORTVA   gzprintf OF((gzFile file, const char *format, ...));
+/*
+     Converts, formats, and writes the args to the compressed file under
+   control of the format string, as in fprintf. gzprintf returns the number of
+   uncompressed bytes actually written (0 in case of error).  The number of
+   uncompressed bytes written is limited to 4095. The caller should assure that
+   this limit is not exceeded. If it is exceeded, then gzprintf() will return
+   return an error (0) with nothing written. In this case, there may also be a
+   buffer overflow with unpredictable consequences, which is possible only if
+   zlib was compiled with the insecure functions sprintf() or vsprintf()
+   because the secure snprintf() or vsnprintf() functions were not available.
+*/
+
+ZEXTERN int ZEXPORT gzputs OF((gzFile file, const char *s));
+/*
+      Writes the given null-terminated string to the compressed file, excluding
+   the terminating null character.
+      gzputs returns the number of characters written, or -1 in case of error.
+*/
+
+ZEXTERN char * ZEXPORT gzgets OF((gzFile file, char *buf, int len));
+/*
+      Reads bytes from the compressed file until len-1 characters are read, or
+   a newline character is read and transferred to buf, or an end-of-file
+   condition is encountered.  The string is then terminated with a null
+   character.
+      gzgets returns buf, or Z_NULL in case of error.
+*/
+
+ZEXTERN int ZEXPORT    gzputc OF((gzFile file, int c));
+/*
+      Writes c, converted to an unsigned char, into the compressed file.
+   gzputc returns the value that was written, or -1 in case of error.
+*/
+
+ZEXTERN int ZEXPORT    gzgetc OF((gzFile file));
+/*
+      Reads one byte from the compressed file. gzgetc returns this byte
+   or -1 in case of end of file or error.
+*/
+
+ZEXTERN int ZEXPORT    gzungetc OF((int c, gzFile file));
+/*
+      Push one character back onto the stream to be read again later.
+   Only one character of push-back is allowed.  gzungetc() returns the
+   character pushed, or -1 on failure.  gzungetc() will fail if a
+   character has been pushed but not read yet, or if c is -1. The pushed
+   character will be discarded if the stream is repositioned with gzseek()
+   or gzrewind().
+*/
+
+ZEXTERN int ZEXPORT    gzflush OF((gzFile file, int flush));
+/*
+     Flushes all pending output into the compressed file. The parameter
+   flush is as in the deflate() function. The return value is the zlib
+   error number (see function gzerror below). gzflush returns Z_OK if
+   the flush parameter is Z_FINISH and all output could be flushed.
+     gzflush should be called only when strictly necessary because it can
+   degrade compression.
+*/
+
+ZEXTERN z_off_t ZEXPORT    gzseek OF((gzFile file,
+                                      z_off_t offset, int whence));
+/*
+      Sets the starting position for the next gzread or gzwrite on the
+   given compressed file. The offset represents a number of bytes in the
+   uncompressed data stream. The whence parameter is defined as in lseek(2);
+   the value SEEK_END is not supported.
+     If the file is opened for reading, this function is emulated but can be
+   extremely slow. If the file is opened for writing, only forward seeks are
+   supported; gzseek then compresses a sequence of zeroes up to the new
+   starting position.
+
+      gzseek returns the resulting offset location as measured in bytes from
+   the beginning of the uncompressed stream, or -1 in case of error, in
+   particular if the file is opened for writing and the new starting position
+   would be before the current position.
+*/
+
+ZEXTERN int ZEXPORT    gzrewind OF((gzFile file));
+/*
+     Rewinds the given file. This function is supported only for reading.
+
+   gzrewind(file) is equivalent to (int)gzseek(file, 0L, SEEK_SET)
+*/
+
+ZEXTERN z_off_t ZEXPORT    gztell OF((gzFile file));
+/*
+     Returns the starting position for the next gzread or gzwrite on the
+   given compressed file. This position represents a number of bytes in the
+   uncompressed data stream.
+
+   gztell(file) is equivalent to gzseek(file, 0L, SEEK_CUR)
+*/
+
+ZEXTERN int ZEXPORT gzeof OF((gzFile file));
+/*
+     Returns 1 when EOF has previously been detected reading the given
+   input stream, otherwise zero.
+*/
+
+ZEXTERN int ZEXPORT gzdirect OF((gzFile file));
+/*
+     Returns 1 if file is being read directly without decompression, otherwise
+   zero.
+*/
+
+ZEXTERN int ZEXPORT    gzclose OF((gzFile file));
+/*
+     Flushes all pending output if necessary, closes the compressed file
+   and deallocates all the (de)compression state. The return value is the zlib
+   error number (see function gzerror below).
+*/
+
+ZEXTERN const char * ZEXPORT gzerror OF((gzFile file, int *errnum));
+/*
+     Returns the error message for the last error which occurred on the
+   given compressed file. errnum is set to zlib error number. If an
+   error occurred in the file system and not in the compression library,
+   errnum is set to Z_ERRNO and the application may consult errno
+   to get the exact error code.
+*/
+
+ZEXTERN void ZEXPORT gzclearerr OF((gzFile file));
+/*
+     Clears the error and end-of-file flags for file. This is analogous to the
+   clearerr() function in stdio. This is useful for continuing to read a gzip
+   file that is being written concurrently.
+*/
+
+                        /* checksum functions */
+
+/*
+     These functions are not related to compression but are exported
+   anyway because they might be useful in applications using the
+   compression library.
+*/
+
+ZEXTERN uLong ZEXPORT adler32 OF((uLong adler, const Bytef *buf, uInt len));
+/*
+     Update a running Adler-32 checksum with the bytes buf[0..len-1] and
+   return the updated checksum. If buf is NULL, this function returns
+   the required initial value for the checksum.
+   An Adler-32 checksum is almost as reliable as a CRC32 but can be computed
+   much faster. Usage example:
+
+     uLong adler = adler32(0L, Z_NULL, 0);
+
+     while (read_buffer(buffer, length) != EOF) {
+       adler = adler32(adler, buffer, length);
+     }
+     if (adler != original_adler) error();
+*/
+
+ZEXTERN uLong ZEXPORT adler32_combine OF((uLong adler1, uLong adler2,
+                                          z_off_t len2));
+/*
+     Combine two Adler-32 checksums into one.  For two sequences of bytes, seq1
+   and seq2 with lengths len1 and len2, Adler-32 checksums were calculated for
+   each, adler1 and adler2.  adler32_combine() returns the Adler-32 checksum of
+   seq1 and seq2 concatenated, requiring only adler1, adler2, and len2.
+*/
+
+ZEXTERN uLong ZEXPORT crc32   OF((uLong crc, const Bytef *buf, uInt len));
+/*
+     Update a running CRC-32 with the bytes buf[0..len-1] and return the
+   updated CRC-32. If buf is NULL, this function returns the required initial
+   value for the for the crc. Pre- and post-conditioning (one's complement) is
+   performed within this function so it shouldn't be done by the application.
+   Usage example:
+
+     uLong crc = crc32(0L, Z_NULL, 0);
+
+     while (read_buffer(buffer, length) != EOF) {
+       crc = crc32(crc, buffer, length);
+     }
+     if (crc != original_crc) error();
+*/
+
+ZEXTERN uLong ZEXPORT crc32_combine OF((uLong crc1, uLong crc2, z_off_t len2));
+
+/*
+     Combine two CRC-32 check values into one.  For two sequences of bytes,
+   seq1 and seq2 with lengths len1 and len2, CRC-32 check values were
+   calculated for each, crc1 and crc2.  crc32_combine() returns the CRC-32
+   check value of seq1 and seq2 concatenated, requiring only crc1, crc2, and
+   len2.
+*/
+
+
+                        /* various hacks, don't look :) */
+
+/* deflateInit and inflateInit are macros to allow checking the zlib version
+ * and the compiler's view of z_stream:
+ */
+ZEXTERN int ZEXPORT deflateInit_ OF((z_streamp strm, int level,
+                                     const char *version, int stream_size));
+ZEXTERN int ZEXPORT inflateInit_ OF((z_streamp strm,
+                                     const char *version, int stream_size));
+ZEXTERN int ZEXPORT deflateInit2_ OF((z_streamp strm, int  level, int  method,
+                                      int windowBits, int memLevel,
+                                      int strategy, const char *version,
+                                      int stream_size));
+ZEXTERN int ZEXPORT inflateInit2_ OF((z_streamp strm, int  windowBits,
+                                      const char *version, int stream_size));
+ZEXTERN int ZEXPORT inflateBackInit_ OF((z_streamp strm, int windowBits,
+                                         unsigned char FAR *window,
+                                         const char *version,
+                                         int stream_size));
+#define deflateInit(strm, level) \
+        deflateInit_((strm), (level),       ZLIB_VERSION, sizeof(z_stream))
+#define inflateInit(strm) \
+        inflateInit_((strm),                ZLIB_VERSION, sizeof(z_stream))
+#define deflateInit2(strm, level, method, windowBits, memLevel, strategy) \
+        deflateInit2_((strm),(level),(method),(windowBits),(memLevel),\
+                      (strategy),           ZLIB_VERSION, sizeof(z_stream))
+#define inflateInit2(strm, windowBits) \
+        inflateInit2_((strm), (windowBits), ZLIB_VERSION, sizeof(z_stream))
+#define inflateBackInit(strm, windowBits, window) \
+        inflateBackInit_((strm), (windowBits), (window), \
+        ZLIB_VERSION, sizeof(z_stream))
+
+
+#if !defined(ZUTIL_H) && !defined(NO_DUMMY_DECL)
+    struct internal_state {int dummy;}; /* hack for buggy compilers */
+#endif
+
+ZEXTERN const char   * ZEXPORT zError           OF((int));
+ZEXTERN int            ZEXPORT inflateSyncPoint OF((z_streamp z));
+ZEXTERN const uLongf * ZEXPORT get_crc_table    OF((void));
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif /* ZLIB_H */
--
2.49.1

